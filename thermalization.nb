(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1469455,      32171]
NotebookOptionsPosition[   1396196,      30994]
NotebookOutlinePosition[   1397592,      31029]
CellTagsIndexPosition[   1397549,      31026]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Thermalization from quenching in coupled oscillators",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Title",
 CellChangeTimes->{{3.964240816981241*^9, 3.9642408286187267`*^9}},
 TextAlignment->Center,ExpressionUUID->"82f57167-0e3a-4dc2-b6d5-6e24b8130611"],

Cell["M. Harinarayanan", "Subtitle",
 CellChangeTimes->{{3.9642412631932116`*^9, 3.9642412707477837`*^9}, 
   3.9647235367080245`*^9, {3.9652067880935774`*^9, 3.9652067952328143`*^9}, {
   3.965218538037609*^9, 3.965218538148908*^9}},
 TextAlignment->Center,ExpressionUUID->"140710f7-7ef7-4249-914a-0643282904d1"],

Cell["Mentor:  Dr. Karthik Rajeev", "Subtitle",
 CellChangeTimes->{{3.965206847286415*^9, 3.9652068611400723`*^9}, {
   3.9652069849107013`*^9, 3.9652070013093805`*^9}, 3.965218496925855*^9},
 TextAlignment->Center,ExpressionUUID->"509bbdd6-dcf4-412a-ac79-a65b3ac899f6"],

Cell[TextData[{
 "This notebook presents the codes used for the calculations and plots in the \
work ",
 StyleBox["Thermalization from Quenching in Coupled Oscillators",
  FontSlant->"Italic"],
 ". The study employs a simple model consisting of two coupled quantum \
harmonic oscillators, initially prepared in their ground state, to \
demonstrate quench-induced finite-time thermalization. Specifically, we \
examine how the reduced density matrix of one oscillator evolves towards a \
thermal state under this setup. Owing to the Gaussian character of the \
dynamics, the evolution is greatly simplified, reducing the problem to just \
three equations. These equations determine three tunable parameters, enabling \
the approximation of any desired target temperature with arbitrary precision."
}], "Text",
 CellChangeTimes->{{3.9652077255882*^9, 3.96520784656384*^9}, {
   3.965214593724225*^9, 3.96521464856966*^9}, {3.965214747945011*^9, 
   3.965214839106941*^9}, {3.9652148943462873`*^9, 3.9652150560336027`*^9}, {
   3.9652153228060007`*^9, 3.965215385815835*^9}, {3.9652154778336873`*^9, 
   3.965215513462544*^9}, {3.965215554485633*^9, 3.965215635371685*^9}, {
   3.9652156870413103`*^9, 3.9652157999119525`*^9}, 
   3.9652158658796597`*^9},ExpressionUUID->"6227f0f8-6b08-42d5-90c1-\
7fa3d453e844"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A. Section II: REVIEW OF TWO-MODE GAUSSIAN PURE \
STATES",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Section",
 CellChangeTimes->{{3.9642412030724444`*^9, 3.964241227099399*^9}},
 TextAlignment->Center,ExpressionUUID->"4170e7eb-5e70-438e-b4cd-1ce57dd55b28"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.964241613198127*^9, 3.964241613198127*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"edde0be2-fa23-4724-b6c2-7112d7926f3a"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Undisplaced two mode Gaussian pure state",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9642421431506777`*^9, 
  3.9642421580579867`*^9}},ExpressionUUID->"f6a7a1ed-6b88-4cdc-8220-\
131646b0ac5e"],

Cell["\<\
Here we consider a pure, undisplaced Gaussian wavefunction of a \
two-oscillator system of the form \
\>", "Text",
 CellChangeTimes->{{3.9642416669169397`*^9, 3.964241715787499*^9}, {
   3.9650790316222444`*^9, 3.965079056231987*^9}, 
   3.965079109341965*^9},ExpressionUUID->"433a486e-c28e-4de3-bbc5-\
5ddd48ce973b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], "=", 
  RowBox[{"N1", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A11", " ", 
        SuperscriptBox["x1", "2"]}], "+", 
       RowBox[{"A22", " ", 
        SuperscriptBox["x2", "2"]}], "+", 
       RowBox[{"2", "A12", " ", "x1", " ", "x2"}]}], ")"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.964241717845413*^9, 3.9642417841489773`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b4c5c844-82d5-4848-b9cc-14a0a2901d50"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "A11"}], " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "A12", " ", "x1", " ", "x2"}], "-", 
      RowBox[{"A22", " ", 
       SuperscriptBox["x2", "2"]}]}], ")"}]}]], " ", "N1"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA2IGV4f3Bp1vHT862ZoZAmmN7ptXzIB03o3PbR5Aetei
u9mRQPrSo4OTy4F03NeFW5YB6UNnjJVPA2mxgt6nX4D0Dn1zrq9AWj+JNVWm
663j8s+qLV5A+oyO4yIQ7SmsUxoApE+wON0A0Smv+n+B6IOMEaVBQJorXLUr
Bkgv6+q4D6KXnhD1igPSEq++7KoC0n5Cs9yrgXSho/jMjUA67OcSl01AOmAz
sy+IVlcqtT0PpO2OCKwH0XF58T6XgPS+tqInt4D0rYRH8XeA9BKbtr77QLpC
s/jmLyDdv1SOkbf7rWPQ2xVmfEB62U65JSBaIe6VAz+Q/mQTFAqiv7blzJEG
0gCmkJ2W
  "],
 CellLabel->"Out[2]=",ExpressionUUID->"16a718be-3b20-434a-9a1a-abcd042258a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]st", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], "=", 
  RowBox[{"N1", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A11st", " ", 
        SuperscriptBox["x1", "2"]}], "+", 
       RowBox[{"A22st", " ", 
        SuperscriptBox["x2", "2"]}], "+", 
       RowBox[{"2", "A12st", " ", "x1", " ", "x2"}]}], ")"}]}], " ", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.964241790617334*^9, 3.9642418229238563`*^9}, {
  3.964241903343671*^9, 3.9642419085887165`*^9}, {3.9642423221344414`*^9, 
  3.9642423234379807`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"5973f5c5-c036-48c2-b7ac-b5e2f14b926f"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "A11st"}], " ", 
       SuperscriptBox["x1", "2"]}], "-", 
      RowBox[{"2", " ", "A12st", " ", "x1", " ", "x2"}], "-", 
      RowBox[{"A22st", " ", 
       SuperscriptBox["x2", "2"]}]}], ")"}]}]], " ", "N1"}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJbm3S/GHS+dYziXfIPRL+qqDMyBNIPfqaagejNngxX
zYC0ddHqdg8gHcD7MCcSpG4Sw5RyIK0a5rh1GZCOs2pXPg2k/xxWffYFSO8Q
FeH+CqRvfO9Jlel66+i6fEWLF5CecH3nIhB96cXZ0gAgffnA/hsg2jJp0i8Q
fe1FVGkQkLaZp94VA6QPLe+6D6LdlKS84oD0K90fu6qA9AbJOe7VQDrngtTM
jSD1DMtdNgHpE7tZfUH0tzfltueBdNh/ofUg2lw50ecSkGbQLn1yC0j/XPUk
/g6Q9nXv6LsPpE/Jld38BaRNeRQZebvfOjZfW23GB6TXtCouAdEGom8c+IH0
uqvBoSCaLzFvjjSQBgAfeagc
  "],
 CellLabel->"Out[3]=",ExpressionUUID->"6650dd03-add3-4aaa-801a-004654e51b10"]
}, Open  ]],

Cell[TextData[{
 "To get the normalization, we compute the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["norm", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "4bcdfb86-b423-4581-9a77-d98a2b52d6c2"],
 " as"
}], "Text",
 CellChangeTimes->{{3.9642418334615464`*^9, 
  3.9642418483053293`*^9}},ExpressionUUID->"b5f25366-f88a-4da0-8549-\
89ff0cd2d8e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], 
    RowBox[{"\[Psi]st", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x1", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964241851755898*^9, 3.9642418782370524`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"debe52bd-8dd7-43aa-82aa-a90c48cf5ea4"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"2", " ", 
      SuperscriptBox["N1", "2"], " ", "\[Pi]"}], 
    RowBox[{
      SqrtBox[
       RowBox[{"A22", "+", "A22st"}]], " ", 
      SqrtBox[
       RowBox[{"A11", "+", "A11st", "-", 
         FractionBox[
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{"A12", "+", "A12st"}], ")"}], "2"], 
          RowBox[{"A22", "+", "A22st"}]]}]]}]], 
   RowBox[{
     RowBox[{"Re", "[", 
       FractionBox[
        RowBox[{
          SuperscriptBox["A12", "2"], "+", 
          RowBox[{"2", " ", "A12", " ", "A12st"}], "+", 
          SuperscriptBox["A12st", "2"], "-", 
          RowBox[{
            RowBox[{"(", 
              RowBox[{"A11", "+", "A11st"}], ")"}], " ", 
            RowBox[{"(", 
              RowBox[{"A22", "+", "A22st"}], ")"}]}]}], 
        RowBox[{"A22", "+", "A22st"}]], "]"}], "<", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAGLZ7UK/DTrfOjYdc+AwBNIFl9ebguhzhw86gOiqDyz3
zIC03LrdfR5A2qzGujgSSNdsezG7HEh3MCofXAakb6lf1joNpE+Jqrz9AqSN
rIQEvwLpkCVvc2S6gOKqP7q9gPS89SUrQXRBlEBtAJBe90X9Poi2fKbGEAik
hcV2VAcBaSOl7gkxQHrDw8tPQXTEr3qvOCCtF/fuYBWQrpqW5FENpEOeNc7f
CKTjHjS4bgLSWS1awWBa96nzeSAt0hi7FUSrJdQHXQLpO73q1S0gveK1Ydod
IK164smU+0BaZvqf+7+AdNKejey83W8dD2s9tuED0n3F/qtA9Jenje78QNpq
SWM0iPbc671YGkgDAIq0qDE=
  "],
 CellLabel->"Out[4]=",ExpressionUUID->"479b97c3-09e1-4fa4-9311-387ae55814b4"]
}, Open  ]],

Cell["This leads to", "Text",
 CellChangeTimes->{{3.9642419986893806`*^9, 
  3.9642420024527435`*^9}},ExpressionUUID->"6cf7478d-105c-4d4e-9b13-\
8e141339d5a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N1", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{
         SqrtBox[
          RowBox[{"A22", "+", "A22st"}]], " ", 
         SqrtBox[
          RowBox[{"A11", "+", "A11st", "-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"A12", "+", "A12st"}], ")"}], "2"], 
            RowBox[{"A22", "+", "A22st"}]]}]]}], ")"}], 
       RowBox[{"2", "\[Pi]"}]], ")"}], 
     FractionBox["1", "2"]], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"A11", "+", "A11st"}], ">", "0"}], "&&", 
      RowBox[{
       RowBox[{"A22", "+", "A22st"}], ">", "0"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9642420048878374`*^9, 3.9642420883743224`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"10ce8770-dc7b-4d7b-8a3c-6bddbf6e7fe1"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A22", "+", "A22st"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A11", "+", "A11st", "-", 
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"A12", "+", "A12st"}], ")"}], "2"], 
        RowBox[{"A22", "+", "A22st"}]]}], ")"}]}], ")"}], 
   RowBox[{"1", "/", "4"}]], 
  SqrtBox[
   RowBox[{"2", " ", "\[Pi]"}]]]], "Output",
 CellChangeTimes->{3.9642420891530995`*^9, 3.964242486360588*^9, 
  3.964253942001598*^9, 3.9642901734832115`*^9, 3.9643247782044215`*^9, 
  3.964386532156109*^9, 3.9644830997513156`*^9, 3.9645576551378503`*^9, 
  3.964643177666912*^9, 3.9646434649714017`*^9, 3.964724071920139*^9, 
  3.964818528378153*^9, 3.9648187640348315`*^9, 3.9648306970914755`*^9, 
  3.964831481556939*^9, 3.964831745479771*^9, 3.9648347821093273`*^9, 
  3.9648554287691884`*^9, 3.964856110982912*^9, 3.9649172639836254`*^9, 
  3.965029628716863*^9, 3.96503106587606*^9, 3.965090335680722*^9, 
  3.9650912434236364`*^9, 3.965096596395018*^9, 3.9651141978618064`*^9, 
  3.9651172341103125`*^9, 3.965123751702072*^9, 3.965179648397707*^9, 
  3.9652168300823717`*^9, 3.9652193034701147`*^9, 3.9652201790056796`*^9, 
  3.965221436521604*^9, 3.9652215965669713`*^9, 3.9652467469420404`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"ab1239a2-b91e-4c5f-8a11-eb5303769b9f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reduced density matrix",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9642421256237383`*^9, 
  3.964242131937778*^9}},ExpressionUUID->"e49a8961-c5c9-4dc4-9e4c-\
67be36e29c23"],

Cell["\<\
The reduced density matrix can be found by partial tracing, which leads to\
\>", "Text",
 CellChangeTimes->{{3.9642421757436357`*^9, 
  3.9642421900394773`*^9}},ExpressionUUID->"3bd03f50-6454-48d4-85df-\
e25690d520c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]1", "[", 
   RowBox[{"x1p_", ",", "x1_"}], "]"}], "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"x1", ",", "x2"}], "]"}], 
     RowBox[{"\[Psi]st", "[", 
      RowBox[{"x1p", ",", "x2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.964242191805004*^9, 3.964242251447466*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"46f1b5f8-5cd7-4e01-ad83-e4ea2ed52933"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      SqrtBox[
       RowBox[{
         RowBox[{"(", 
           RowBox[{"A22", "+", "A22st"}], ")"}], " ", 
         RowBox[{"(", 
           RowBox[{"A11", "+", "A11st", "-", 
             FractionBox[
              SuperscriptBox[
               RowBox[{"(", 
                 RowBox[{"A12", "+", "A12st"}], ")"}], "2"], 
              RowBox[{"A22", "+", "A22st"}]]}], ")"}]}]], " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{
          RowBox[{
            SuperscriptBox["A12", "2"], " ", 
            SuperscriptBox["x1", "2"]}], "-", 
          RowBox[{"A11", " ", 
            RowBox[{"(", 
              RowBox[{"A22", "+", "A22st"}], ")"}], " ", 
            SuperscriptBox["x1", "2"]}], "+", 
          RowBox[{"2", " ", "A12", " ", "A12st", " ", "x1", " ", "x1p"}], "+", 
          RowBox[{
            RowBox[{"(", 
              RowBox[{
                SuperscriptBox["A12st", "2"], "-", 
                RowBox[{"A11st", " ", 
                  RowBox[{"(", 
                    RowBox[{"A22", "+", "A22st"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["x1p", "2"]}]}], 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            RowBox[{"A22", "+", "A22st"}], ")"}]}]]]}], 
    RowBox[{
      SqrtBox[
       RowBox[{"A22", "+", "A22st"}]], " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]}]], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"A22", "+", "A22st"}], "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.964242253829232*^9, 3.9642425148076053`*^9, 
  3.9642539647631445`*^9, 3.9642902017166395`*^9, 3.964324803761282*^9, 
  3.964386558181731*^9, 3.964483123691043*^9, 3.9645576750523562`*^9, 
  3.9646434846524982`*^9, 3.9647240915695343`*^9, 3.9648185590999465`*^9, 
  3.9648187797933507`*^9, 3.9648307171516247`*^9, 3.964831501791271*^9, 
  3.9648317653834686`*^9, 3.9648348019902306`*^9, 3.9648554482927885`*^9, 
  3.9648561304771023`*^9, 3.964917283764741*^9, 3.965029647780877*^9, 
  3.9650310847329464`*^9, 3.9650903546865396`*^9, 3.965091262469618*^9, 
  3.965096614408328*^9, 3.9651142170469074`*^9, 3.965117253550309*^9, 
  3.9651237710194335`*^9, 3.9651796675815783`*^9, 3.965216849273524*^9, 
  3.9652193228517895`*^9, 3.9652201978728313`*^9, 3.965221457093321*^9, 
  3.9652216155474205`*^9, 3.9652467680861483`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"38494a94-1431-4368-8a4f-a8851a3f7545"]
}, Open  ]],

Cell["\<\
To read-off X,Y,Z variables collect the different terms in the exponential\
\>", "Text",
 CellChangeTimes->{{3.9642425465201316`*^9, 
  3.9642425689502296`*^9}},ExpressionUUID->"ac882693-a302-4754-8ad0-\
39501d2cc635"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"-", "2"}], 
     RowBox[{"m", " ", "\[Omega]"}]], 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"A22", "+", "A22st"}], ")"}]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["A12", "2"], " ", 
         SuperscriptBox["x1", "2"]}], "-", 
        RowBox[{"A11", " ", 
         RowBox[{"(", 
          RowBox[{"A22", "+", "A22st"}], ")"}], " ", 
         SuperscriptBox["x1", "2"]}], "+", 
        RowBox[{"2", " ", "A12", " ", "A12st", " ", "x1", " ", "x1p"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["A12st", "2"], "-", 
           RowBox[{"A11st", " ", 
            RowBox[{"(", 
             RowBox[{"A22", "+", "A22st"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["x1p", "2"]}]}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["x1", "2"], ",", 
     SuperscriptBox["x1p", "2"], ",", 
     RowBox[{"x1", " ", "x1p"}]}], "}"}], ",", "FullSimplify"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9642425705855494`*^9, 3.9642426213463755`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"f1a50c2a-3e6a-4fa1-b321-7ef797073071"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["A12", "2"]}], "+", 
      RowBox[{"A11", " ", 
       RowBox[{"(", 
        RowBox[{"A22", "+", "A22st"}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["x1", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A22", "+", "A22st"}], ")"}], " ", "m", " ", "\[Omega]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["A12st", "2"]}], "+", 
      RowBox[{"A11st", " ", 
       RowBox[{"(", 
        RowBox[{"A22", "+", "A22st"}], ")"}]}]}], ")"}], " ", 
    SuperscriptBox["x1p", "2"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A22", "+", "A22st"}], ")"}], " ", "m", " ", "\[Omega]"}]], "-", 
  FractionBox[
   RowBox[{"2", " ", "A12", " ", "A12st", " ", "x1", " ", "x1p"}], 
   RowBox[{
    RowBox[{"A22", " ", "m", " ", "\[Omega]"}], "+", 
    RowBox[{"A22st", " ", "m", " ", "\[Omega]"}]}]]}]], "Output",
 CellChangeTimes->{3.964242590818617*^9, 3.964242622217533*^9, 
  3.964290264748424*^9, 3.964325132290546*^9, 3.964386560019804*^9, 
  3.9644831351013937`*^9, 3.964557675223998*^9, 3.964643484818899*^9, 
  3.96472410254608*^9, 3.964818559326777*^9, 3.964818779981823*^9, 
  3.9648307173665075`*^9, 3.9648315019714284`*^9, 3.964831765538028*^9, 
  3.9648348021445723`*^9, 3.9648554485066357`*^9, 3.9648561306368694`*^9, 
  3.964917284140087*^9, 3.9650296479692802`*^9, 3.9650310849362516`*^9, 
  3.9650903548677626`*^9, 3.965091262625346*^9, 3.965096614532302*^9, 
  3.9651142172506914`*^9, 3.9651172537934775`*^9, 3.9651237712813873`*^9, 
  3.9651796677593517`*^9, 3.9652168494335938`*^9, 3.965219323013296*^9, 
  3.9652201980437355`*^9, 3.965221457277665*^9, 3.965221615717823*^9, 
  3.965246768291164*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"5a27b0cb-61ef-4de0-a7e1-72f16ac8a68b"]
}, Open  ]],

Cell["Hence, X - i Y is", "Text",
 CellChangeTimes->{{3.964242639044425*^9, 3.9642426717195315`*^9}, {
  3.9643253238549194`*^9, 3.964325324209814*^9}, {3.964831452204087*^9, 
  3.9648314536400547`*^9}},ExpressionUUID->"7032173b-1a1d-41c8-9c6d-\
81d0728840b9"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["A12", "2"]}], "+", 
     RowBox[{"A11", " ", 
      RowBox[{"(", 
       RowBox[{"A22", "+", "A22st"}], ")"}]}]}], ")"}], " "}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A22", "+", "A22st"}], ")"}], " ", "m", " ", 
   "\[Omega]"}]]], "Input",
 CellChangeTimes->{
  3.964242711114885*^9, {3.9646501494801936`*^9, 3.964650152407699*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d65215ae-78fb-4839-82f8-0ddcbdb9f514"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["A12", "2"]}], "+", 
   RowBox[{"A11", " ", 
    RowBox[{"(", 
     RowBox[{"A22", "+", "A22st"}], ")"}]}]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A22", "+", "A22st"}], ")"}], " ", "m", " ", 
   "\[Omega]"}]]], "Output",
 CellChangeTimes->{3.964242677935897*^9, 3.964242713420241*^9, 
  3.9642902718186283`*^9, 3.964325135212165*^9, 3.9643865643150053`*^9, 
  3.964483139523056*^9, 3.964557675367036*^9, 3.9646434849610844`*^9, 
  3.964724143218232*^9, 3.964818559498266*^9, 3.964818780107237*^9, 
  3.96483071754428*^9, 3.9648315020576544`*^9, 3.9648317656012077`*^9, 
  3.964834802208723*^9, 3.964855448590505*^9, 3.9648561306894264`*^9, 
  3.9649172842031145`*^9, 3.965029648080611*^9, 3.9650310850113964`*^9, 
  3.9650903549378853`*^9, 3.965091262700751*^9, 3.965096614564475*^9, 
  3.9651142173318405`*^9, 3.9651172538697557`*^9, 3.9651237713631034`*^9, 
  3.965179667833869*^9, 3.9652168494973392`*^9, 3.9652193230986004`*^9, 
  3.965220198119963*^9, 3.9652214573344793`*^9, 3.96522161577134*^9, 
  3.9652467683496933`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"07d131fc-9b8a-4ef9-b495-b40dd7113c5d"]
}, Open  ]],

Cell["or", "Text",
 CellChangeTimes->{{3.9642427482871428`*^9, 
  3.96424274848739*^9}},ExpressionUUID->"37aa8a11-ac4f-41ad-9284-\
e5b78b75c30f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "ReA12sqr"}], "+", 
       RowBox[{"2", "ReA11", " ", 
        RowBox[{"(", "ReA22", ")"}]}]}], 
      RowBox[{"2", 
       RowBox[{"(", "ReA22", ")"}], " ", "m", " ", "\[Omega]"}]], ",", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "ImA12sqr"}], "+", 
        RowBox[{"2", "ImA11", " ", 
         RowBox[{"(", "ReA22", ")"}]}]}], 
       RowBox[{"2", 
        RowBox[{"(", "ReA22", ")"}], " ", "m", " ", "\[Omega]"}]]}]}], "}"}], 
   "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9642427553550925`*^9, 3.9642428310548744`*^9}, 
   3.964243045260317*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"44d0a817-ae73-453f-9c24-f7ff76dc844a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"ReA12sqr", "-", 
      RowBox[{"2", " ", "ReA11", " ", "ReA22"}]}], 
     RowBox[{"2", " ", "m", " ", "ReA22", " ", "\[Omega]"}]]}], ",", 
   FractionBox[
    RowBox[{"ImA12sqr", "-", 
     RowBox[{"2", " ", "ImA11", " ", "ReA22"}]}], 
    RowBox[{"2", " ", "m", " ", "ReA22", " ", "\[Omega]"}]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.964818780245141*^9, 3.9648307176651*^9, 
  3.964831502182621*^9, 3.964831765660063*^9, 3.9648348022729263`*^9, 
  3.9648554486739635`*^9, 3.964856130753791*^9, 3.9649172842654114`*^9, 
  3.965029648182604*^9, 3.9650310850879197`*^9, 3.9650903550340014`*^9, 
  3.965091262769149*^9, 3.9650966146127524`*^9, 3.96511421740734*^9, 
  3.9651172539519424`*^9, 3.965123771442986*^9, 3.965179667913025*^9, 
  3.965216849569772*^9, 3.965219368857003*^9, 3.965220198204632*^9, 
  3.965221457394091*^9, 3.965221615827112*^9, 3.9652467684245205`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"077fedef-d193-4947-88f8-1b50439725a0"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9648186977249947`*^9, 3.964818697728879*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"9d69581e-53ac-4af5-b56e-3d010b65a9ce"],

Cell["and Z is", "Text",
 CellChangeTimes->{{3.9642426805955706`*^9, 
  3.964242683217176*^9}},ExpressionUUID->"18420192-14d2-423e-a961-\
b073c16110a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Z", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["ReA12", "2"], "+", 
         SuperscriptBox["ImA12", "2"]}], ")"}]}], 
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{"ReA22", " ", "m", " ", "\[Omega]"}], ")"}]}]]}], "*", 
    FractionBox["1", "2"]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9642427007920895`*^9, 3.9642427170924516`*^9}, {
  3.9642428439539704`*^9, 3.9642428819892893`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"586c7c76-7ed6-49e9-97fe-2506cd1e30b7"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["ImA12", "2"], "+", 
    SuperscriptBox["ReA12", "2"]}], 
   RowBox[{"2", " ", "m", " ", "ReA22", " ", "\[Omega]"}]]}]], "Output",
 CellChangeTimes->{{3.9642427021954556`*^9, 3.9642427176466455`*^9}, {
   3.9642428794513617`*^9, 3.964242882521774*^9}, 3.9642903530696244`*^9, 
   3.9643260075615387`*^9, 3.9643875923098288`*^9, 3.964483148132984*^9, 
   3.964557675650747*^9, 3.964643485170328*^9, 3.9647241665481286`*^9, 
   3.964818780409176*^9, 3.964830717826461*^9, 3.964831502297348*^9, 
   3.964831765772975*^9, 3.964834802356888*^9, 3.964855448777953*^9, 
   3.964856130836706*^9, 3.964917284629081*^9, 3.9650296483046055`*^9, 
   3.965031085225582*^9, 3.9650903551790223`*^9, 3.96509126289824*^9, 
   3.9650966146923637`*^9, 3.9651142175543146`*^9, 3.965117254189823*^9, 
   3.96512377176842*^9, 3.965179668055612*^9, 3.9652168496992507`*^9, 
   3.965219407270176*^9, 3.965220198300338*^9, 3.965221457475278*^9, 
   3.9652216159127665`*^9, 3.9652467685157747`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"5bce4c98-6515-4a81-bf5e-9ca201ea1f2f"]
}, Open  ]],

Cell["Let us rewrite the density matrix now as", "Text",
 CellChangeTimes->{{3.9642429442435884`*^9, 
  3.964242950526759*^9}},ExpressionUUID->"cb0c8c68-d80d-47f1-ad34-\
1fec1903a57c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", 
   RowBox[{"x1p_", ",", "x1_"}], "]"}], "=", 
  RowBox[{"N2", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     FractionBox["\[Omega]", "2"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X1", "+", 
          RowBox[{"I", " ", "Y1"}]}], ")"}], 
        SuperscriptBox["x1p", "2"]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"X1", "-", 
          RowBox[{"I", " ", "Y1"}]}], ")"}], 
        SuperscriptBox["x1", "2"]}], "+", 
       RowBox[{"2", "Z1", " ", "x1p", " ", "x1"}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9642429534632277`*^9, 3.964243016642399*^9}, {
  3.9642430493706827`*^9, 3.96424311517861*^9}, {3.965077503811968*^9, 
  3.96507750948174*^9}, {3.965077547303655*^9, 3.965077549818112*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"983ffffb-6170-43a1-afaa-53a90aa60a17"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "2"]}], " ", "m", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"X1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "Y1"}]}], ")"}]}], "+", 
      RowBox[{
       SuperscriptBox["x1p", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"X1", "+", 
         RowBox[{"\[ImaginaryI]", " ", "Y1"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", "x1", " ", "x1p", " ", "Z1"}]}], ")"}], " ", 
    "\[Omega]"}]], " ", "N2"}]], "Output",
 CellChangeTimes->{{3.96424308977778*^9, 3.9642431156732483`*^9}, 
   3.964253969480936*^9, 3.9642904428010855`*^9, 3.9642904797037582`*^9, 
   3.964326013596094*^9, 3.9643876593621674`*^9, 3.9644831542375727`*^9, 
   3.9645576757491293`*^9, 3.9646434852640543`*^9, 3.9647241698509507`*^9, 
   3.9648187805771027`*^9, 3.9648307179328966`*^9, 3.9648315023894215`*^9, 
   3.9648317658345346`*^9, 3.9648348024213705`*^9, 3.9648554488476954`*^9, 
   3.9648561308901587`*^9, 3.964917284657579*^9, 3.9650296484052753`*^9, 
   3.9650310852999873`*^9, 3.9650775105860963`*^9, 3.9650775528230743`*^9, 
   3.9650903552611427`*^9, 3.965091262962781*^9, 3.9650966147404366`*^9, 
   3.965114217628354*^9, 3.9651172542648134`*^9, 3.965123771848683*^9, 
   3.965179668135085*^9, 3.965216849756173*^9, 3.9652194073664327`*^9, 
   3.9652201983802166`*^9, 3.965221457521019*^9, 3.9652216159676795`*^9, 
   3.965246768572743*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"6f7c60d4-8422-45a7-9edf-126d28257cc1"]
}, Open  ]],

Cell["The normalization condition requires", "Text",
 CellChangeTimes->{{3.964243093702365*^9, 
  3.964243106350358*^9}},ExpressionUUID->"9578ee6b-ea81-4aed-ab83-\
dd88a8b79a7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"x", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9642431082082176`*^9, 3.9642431278742065`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"86ecfc6e-9a2f-40f8-9791-c49435e581a9"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"N2", " ", 
      SqrtBox["\[Pi]"]}], 
    SqrtBox[
     RowBox[{"m", " ", 
       RowBox[{"(", 
         RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]]], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"m", " ", 
         RowBox[{"(", 
           RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.964243149691137*^9, 3.9642539959420357`*^9, 
  3.9642905089154468`*^9, 3.9643260254677825`*^9, 3.964387670920121*^9, 
  3.9644831686126657`*^9, 3.964557682366497*^9, 3.9646434918432665`*^9, 
  3.9647241839457417`*^9, 3.964818787275558*^9, 3.9648307245862045`*^9, 
  3.964831508002574*^9, 3.964831771173402*^9, 3.964834807880762*^9, 
  3.964855455267583*^9, 3.964856136288076*^9, 3.964917291253739*^9, 
  3.9650296546959753`*^9, 3.965031091589859*^9, 3.9650903615852947`*^9, 
  3.965091269367406*^9, 3.9650966208434873`*^9, 3.965114224014581*^9, 
  3.965117260625183*^9, 3.9651237782102947`*^9, 3.9651796744914217`*^9, 
  3.965216856104929*^9, 3.9652194141059165`*^9, 3.965220204646328*^9, 
  3.965221464058406*^9, 3.9652216224166727`*^9, 3.9652467754078436`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"f0db49b4-0d7f-4a48-9671-194ba42c29a1"]
}, Open  ]],

Cell["be unity, which implies", "Text",
 CellChangeTimes->{{3.964243167997263*^9, 
  3.964243175328594*^9}},ExpressionUUID->"26be6d8d-75f9-4c56-b524-\
fa66429f495c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N2", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     SqrtBox["\[Pi]"], 
     SqrtBox[
      RowBox[{"m", " ", 
       RowBox[{"(", 
        RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]]], ")"}], 
   RowBox[{"-", "1"}]]}]], "Input",
 CellChangeTimes->{{3.964243179774973*^9, 3.96424318759277*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0ab298a5-991d-446a-a427-fbd1cd4467e1"],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{"m", " ", 
    RowBox[{"(", 
     RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{3.964243188510776*^9, 3.9642540283832035`*^9, 
  3.964290568591278*^9, 3.9643265069097033`*^9, 3.964387672417992*^9, 
  3.9644831885009565`*^9, 3.9645576824614873`*^9, 3.964643491929135*^9, 
  3.964724184081142*^9, 3.9648187873988543`*^9, 3.964831508109665*^9, 
  3.9648317713092165`*^9, 3.9648348079976907`*^9, 3.9648554553700757`*^9, 
  3.964856136375571*^9, 3.964917291408929*^9, 3.9650296548934755`*^9, 
  3.9650310916853995`*^9, 3.9650903616927958`*^9, 3.965091269499363*^9, 
  3.9650966209235477`*^9, 3.9651142241063733`*^9, 3.9651172607770166`*^9, 
  3.965123778385581*^9, 3.9651796745929484`*^9, 3.965216856230011*^9, 
  3.9652194141967573`*^9, 3.9652202048050427`*^9, 3.965221464132273*^9, 
  3.965221622570759*^9, 3.965246775515726*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"8e58a2e4-8156-4a98-8233-a2daa604aedd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Covariance matrix",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.964243206472777*^9, 
  3.964243210035589*^9}},ExpressionUUID->"04655105-ee86-4417-952a-\
dde245370d6f"],

Cell[TextData[{
 "To find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", 
    SuperscriptBox["x1", "2"]}], TraditionalForm]],ExpressionUUID->
  "720c184c-1f54-48b1-9c49-6b13f84570f6"],
 "> in terms of X, Y and Z, we compute"
}], "Text",
 CellChangeTimes->{{3.964243223944477*^9, 3.964243258027915*^9}, 
   3.9642907787698417`*^9},ExpressionUUID->"d32e0702-f8f9-4f8d-a914-\
5ddb39924ed2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]xx", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"x", ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.964243238779086*^9, 3.964243268935162*^9}, {
  3.9643059624483137`*^9, 3.96430596587565*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"21035227-3cce-4627-99a1-0d249e51be60"],

Cell[BoxData[
 TemplateBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "m", " ", 
      RowBox[{"(", 
        RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"m", " ", 
         RowBox[{"(", 
           RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9642432904342165`*^9, 3.9642540514894247`*^9, 
  3.9642905887489967`*^9, 3.9643059744242773`*^9, 3.9643265185539427`*^9, 
  3.964387683835577*^9, 3.9644832015939865`*^9, 3.964557688690856*^9, 
  3.964643498052226*^9, 3.9647241904126477`*^9, 3.9648187937635045`*^9, 
  3.964830730651969*^9, 3.964831513643501*^9, 3.964831776606803*^9, 
  3.964834813681859*^9, 3.9648554614030933`*^9, 3.964856141882929*^9, 
  3.96491729786503*^9, 3.9650296607856374`*^9, 3.9650310975623207`*^9, 
  3.965090367570604*^9, 3.965091275381364*^9, 3.9650966266168413`*^9, 
  3.9651142301276255`*^9, 3.9651172667460155`*^9, 3.9651237843331947`*^9, 
  3.9651796805322323`*^9, 3.96521686216306*^9, 3.965219417631998*^9, 
  3.9652202106918087`*^9, 3.965221467062748*^9, 3.9652216284968987`*^9, 
  3.96524678178623*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"62e42100-d29e-49db-8e00-c886cc89cd0d"]
}, Open  ]],

Cell[TextData[{
 "To find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", 
    SuperscriptBox["p1", "2"]}], TraditionalForm]],ExpressionUUID->
  "0722a121-c432-4c30-844f-d0c98f00c5b6"],
 "> , given by ",
 StyleBox["\[Integral] \[Psi]*(x) (-\[HBar]^2 \[Psi]\[CloseCurlyQuote]\
\[CloseCurlyQuote](x))dx",
  FontWeight->"Bold"],
 ",  in terms of X, Y and Z, we compute the differential, and then integrate \
the expression."
}], "Text",
 CellChangeTimes->{{3.9642432999248514`*^9, 3.964243303819686*^9}, {
   3.964253600422556*^9, 3.964253603035508*^9}, 3.9642907764070587`*^9, 
   3.9650750016959667`*^9, {3.9650751372779865`*^9, 3.96507524056268*^9}, {
   3.965075297763667*^9, 3.96507530001095*^9}, {3.965075365155164*^9, 
   3.9650753839073386`*^9}},ExpressionUUID->"ed80a0cd-d13d-4149-9c09-\
f2e8f349f6c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "[", 
       RowBox[{"xp", ",", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"xp", "\[Rule]", " ", "x"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.964253633300095*^9, 3.964253660667885*^9}, {
  3.9642537235224543`*^9, 3.964253733565118*^9}, {3.964254145627204*^9, 
  3.9642541467151413`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8b930b91-9bd3-45ce-ba21-b0ba506d64c6"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", "m", " ", 
   "\[Omega]", " ", 
   SqrtBox[
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
   RowBox[{"(", 
    RowBox[{"X1", "-", 
     RowBox[{"\[ImaginaryI]", " ", "Y1"}], "-", 
     RowBox[{"m", " ", 
      SuperscriptBox["x", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"X1", "-", 
         RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], "2"], " ", 
      "\[Omega]"}]}], ")"}]}], 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{3.9642537340506096`*^9, 3.96425406328936*^9, 
  3.9642541474170904`*^9, 3.9642905998334928`*^9, 3.9643265282563577`*^9, 
  3.9643876865410185`*^9, 3.964483213440919*^9, 3.964557689453327*^9, 
  3.9646434988142667`*^9, 3.9647241911843805`*^9, 3.9648187944694486`*^9, 
  3.9648307310272427`*^9, 3.96483151436646*^9, 3.96483177717763*^9, 
  3.964834814403948*^9, 3.964855462103463*^9, 3.964856142535041*^9, 
  3.964917298639553*^9, 3.9650296614979143`*^9, 3.9650310982210503`*^9, 
  3.965090368254731*^9, 3.9650912760534735`*^9, 3.965096627193015*^9, 
  3.965114230793239*^9, 3.9651172674291296`*^9, 3.9651237850818076`*^9, 
  3.9651796812225404`*^9, 3.9652168628386374`*^9, 3.965219418195734*^9, 
  3.965220211343093*^9, 3.9652216291482916`*^9, 3.9652467825132275`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"026d9b12-83ce-4d3f-bbd9-d03d5d76dd0c"]
}, Open  ]],

Cell["Now, we integrate the full expression :", "Text",
 CellChangeTimes->{{3.96507558677218*^9, 
  3.9650755893856726`*^9}},ExpressionUUID->"9119c7f6-c947-4ed7-ab2d-\
a7c83a955dd7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]pp", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "m"}], " ", 
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", "m", " ", 
      "\[Omega]", " ", 
      SqrtBox[
       RowBox[{"m", " ", 
        RowBox[{"(", 
         RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
      RowBox[{"(", 
       RowBox[{"X1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "Y1"}], "-", 
        RowBox[{"m", " ", 
         SuperscriptBox["x", "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"X1", "-", 
            RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], "2"], 
         " ", "\[Omega]"}]}], ")"}]}], 
     SqrtBox["\[Pi]"]], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9642537385361414`*^9, 3.964253749955589*^9}, 
   3.964254152919142*^9, {3.964305978633238*^9, 3.9643059848862233`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"e183dd1d-7931-4a00-8a75-1ed042102dad"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{"m", " ", 
      RowBox[{"(", 
        RowBox[{
          SuperscriptBox["X1", "2"], "+", 
          SuperscriptBox["Y1", "2"], "-", 
          SuperscriptBox["Z1", "2"]}], ")"}], " ", "\[Omega]"}], 
    RowBox[{"2", " ", 
      RowBox[{"(", 
        RowBox[{"X1", "+", "Z1"}], ")"}]}]], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"m", " ", 
         RowBox[{"(", 
           RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9642906222114773`*^9, 3.9643059978840384`*^9, 
  3.964326544225178*^9, 3.9643877105811872`*^9, 3.9644832345737*^9, 
  3.9645577075263786`*^9, 3.964643516771201*^9, 3.964724211659107*^9, 
  3.9648188129379764`*^9, 3.964830749072689*^9, 3.9648315257786365`*^9, 
  3.964831788015299*^9, 3.9648348256696143`*^9, 3.964855479927891*^9, 
  3.9648561538432837`*^9, 3.9649173183122854`*^9, 3.9650296783760157`*^9, 
  3.9650311151469436`*^9, 3.965090385495254*^9, 3.96509129340105*^9, 
  3.965096643434118*^9, 3.965114248164755*^9, 3.965117284730505*^9, 
  3.9651238024854727`*^9, 3.965179698472823*^9, 3.965216880611556*^9, 
  3.965219430469233*^9, 3.9652202283332644`*^9, 3.965221646149403*^9, 
  3.9652468020590343`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"6c0013d6-07ec-4866-9cd0-0cd7cff3dbc6"]
}, Open  ]],

Cell[TextData[{
 "To find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", 
    RowBox[{"x1", " ", "p1"}]}], TraditionalForm]],ExpressionUUID->
  "4ab019f2-236f-424c-8a28-18b4443139b2"],
 "> , given by ",
 StyleBox["\[Integral] \[Psi]*(x) (x (-i \[HBar] \
\[Psi]\[CloseCurlyQuote](x)))dx",
  FontWeight->"Bold"],
 ",",
 StyleBox[" ",
  FontWeight->"Bold"],
 "in terms of X, Y and Z, we compute"
}], "Text",
 CellChangeTimes->{
  3.964290807448839*^9, {3.9642910046945515`*^9, 3.96429101112538*^9}, {
   3.9642912693248267`*^9, 3.9642912696474686`*^9}, {3.965075315838084*^9, 
   3.9650753548994102`*^9}, {3.9650753926156664`*^9, 
   3.965075393519535*^9}},ExpressionUUID->"b950ba44-1725-49be-8883-\
bff3d1afffe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"xp", " ", 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "[", 
       RowBox[{"xp", ",", "x"}], "]"}], ",", "x"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"xp", "\[Rule]", " ", "x"}], "}"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.96429142670273*^9, 3.96429142670273*^9}, {
   3.964291630389492*^9, 3.9642916696983027`*^9}, {3.9642921902436123`*^9, 
   3.9642921928592625`*^9}, 3.9642931726039743`*^9, {3.964293344569166*^9, 
   3.964293345050977*^9}, {3.964305831377761*^9, 3.9643058446174517`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"cb2ffcc1-047d-46ca-88b9-3ac13e95cd85"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "m"}], " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", "m", " ", 
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"X1", "-", 
      RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], " ", 
    "\[Omega]", " ", 
    SqrtBox[
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]]}], 
   SqrtBox["\[Pi]"]]}]], "Output",
 CellChangeTimes->{3.96429175252742*^9, 3.9642933493784513`*^9, 
  3.964326593222752*^9, 3.964387715286336*^9, 3.9644832555706043`*^9, 
  3.964557707829423*^9, 3.9646435171138644`*^9, 3.9647242120552964`*^9, 
  3.964818813382535*^9, 3.964830749272601*^9, 3.964831526175189*^9, 
  3.96483178829554*^9, 3.9648348259556513`*^9, 3.964855480276011*^9, 
  3.964856154147177*^9, 3.9649173187985706`*^9, 3.9650296787463717`*^9, 
  3.9650311154918413`*^9, 3.9650903858932037`*^9, 3.9650912937078133`*^9, 
  3.965096643713888*^9, 3.965114248500741*^9, 3.965117285079236*^9, 
  3.965123802837099*^9, 3.9651796988324785`*^9, 3.9652168809315796`*^9, 
  3.9652194307203913`*^9, 3.965220228666292*^9, 3.9652216464586334`*^9, 
  3.9652468024498096`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"adde61e6-2779-4196-bee7-12ee5b411eca"]
}, Open  ]],

Cell["Now, we integrate the full expression:", "Text",
 CellChangeTimes->{
  3.9650755522181473`*^9},ExpressionUUID->"6665d3eb-595c-463b-95a7-\
234548a913da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]xp", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "I"}], "  ", 
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "m"}], " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", "m", 
          " ", 
          SuperscriptBox["x", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"X1", "-", 
            RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], " ", 
          "\[Omega]", " ", 
          SqrtBox[
           RowBox[{"m", " ", 
            RowBox[{"(", 
             RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]]}], 
         SqrtBox["\[Pi]"]]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9642917911643314`*^9, 3.9642918293166957`*^9}, 
   3.9642933623120537`*^9, 3.964294218818008*^9, 3.964305866096932*^9, {
   3.9643060076640396`*^9, 3.9643060124298754`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"16c24799-0ac8-4f36-a521-a72449cd8ce6"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
       RowBox[{"\[ImaginaryI]", "+", 
         FractionBox["Y1", 
          RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"m", " ", 
         RowBox[{"(", 
           RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9642934630335474`*^9, 3.964294231908778*^9, 
  3.964306018597726*^9, 3.9643266085673614`*^9, 3.9643877294745345`*^9, 
  3.964483264917983*^9, 3.9645577136361885`*^9, 3.9646435228444786`*^9, 
  3.9647242180030527`*^9, 3.9648188193052754`*^9, 3.9648307552105894`*^9, 
  3.9648315319761677`*^9, 3.964831793859885*^9, 3.964834831327012*^9, 
  3.9648554859314017`*^9, 3.9648561598969903`*^9, 3.96491732525395*^9, 
  3.965029684291133*^9, 3.9650311211322374`*^9, 3.965090391435443*^9, 
  3.9650912992999887`*^9, 3.965096649040619*^9, 3.965114254157387*^9, 
  3.965117290717471*^9, 3.965123808405253*^9, 3.9651797043551993`*^9, 
  3.965216886515339*^9, 3.965219433647478*^9, 3.9652202342252693`*^9, 
  3.965221652126049*^9, 3.965246808388812*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"063b0a03-5e3b-44c8-ace3-4c2c26ba39eb"]
}, Open  ]],

Cell[TextData[{
 "To find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"<", " ", 
    RowBox[{"p1", " ", "x1"}]}], TraditionalForm]],ExpressionUUID->
  "47d3f46b-f0e9-4e69-954d-83d884b61e74"],
 "> , given by ",
 StyleBox["\[Integral] \[Psi]*(x) ((-i \[HBar]) (x \[Psi](x))\
\[CloseCurlyQuote])dx",
  FontWeight->"Bold"],
 ", in terms of X, Y and Z, we compute:"
}], "Text",
 CellChangeTimes->{{3.9642935190071316`*^9, 3.9642935379246283`*^9}, {
  3.9650754302450905`*^9, 3.9650754553116417`*^9}, {3.965075614023181*^9, 
  3.9650756164805646`*^9}},ExpressionUUID->"2b2ff55e-a2fc-4964-9319-\
d92154e73a6a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", " ", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"\[Rho]", "[", 
       RowBox[{"xp", ",", "x"}], "]"}]}], ",", "x"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"xp", "->", "x"}], " ", "}"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.9642936202040977`*^9, {3.9642937211745615`*^9, 3.96429372411021*^9}, {
   3.9642954073464727`*^9, 3.9642954165979385`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"d60ca49d-6053-4407-8d9a-ba6abfb085f0"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "m"}], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
   SqrtBox[
    RowBox[{"m", " ", 
     RowBox[{"(", 
      RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"m", " ", 
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"X1", "-", 
        RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], " ", 
      "\[Omega]"}]}], ")"}]}], 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{3.96429394506588*^9, 3.964295419670726*^9, 
  3.964326664930134*^9, 3.9643877313720417`*^9, 3.964483269364967*^9, 
  3.964557713968983*^9, 3.9646435231922426`*^9, 3.9647242184518414`*^9, 
  3.9648188280237036`*^9, 3.964830755368374*^9, 3.9648315323531218`*^9, 
  3.964831794182886*^9, 3.964834831651745*^9, 3.9648554863204107`*^9, 
  3.964856160271657*^9, 3.9649173258989515`*^9, 3.96502968467821*^9, 
  3.965031121468419*^9, 3.9650903918199234`*^9, 3.9650912996572104`*^9, 
  3.9650966493437777`*^9, 3.965114254522058*^9, 3.965117291102954*^9, 
  3.9651238087699785`*^9, 3.965179704729631*^9, 3.9652168868734465`*^9, 
  3.965219433931326*^9, 3.965220234573268*^9, 3.965221652477313*^9, 
  3.9652468087607555`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"8372700e-5149-43da-a355-36962d07d65a"]
}, Open  ]],

Cell["Now, we integrate the full expression:", "Text",
 CellChangeTimes->{{3.9650755128324966`*^9, 
  3.9650755434685974`*^9}},ExpressionUUID->"a60395e1-42ba-4853-b157-\
aacaed045745"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]px", "=", 
  RowBox[{
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "m"}], " ", 
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
         SqrtBox[
          RowBox[{"m", " ", 
           RowBox[{"(", 
            RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}]], " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"m", " ", 
            SuperscriptBox["x", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"X1", "-", 
              RowBox[{"\[ImaginaryI]", " ", "Y1"}], "+", "Z1"}], ")"}], " ", 
            "\[Omega]"}]}], ")"}]}], 
        SqrtBox["\[Pi]"]], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964294002855527*^9, 3.964294017682213*^9}, 
   3.964294084494445*^9, {3.964294275925064*^9, 3.964294282549199*^9}, {
   3.9642943326037984`*^9, 3.9642943364119363`*^9}, 3.9642954418287945`*^9, {
   3.9643060259715867`*^9, 3.964306028896163*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"d678039f-c961-4f2a-8f38-3661d157b589"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
       RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "+", 
         FractionBox["Y1", 
          RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
   RowBox[{
     RowBox[{"Re", "[", 
       RowBox[{"m", " ", 
         RowBox[{"(", 
           RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], ">", 
     "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{3.9642940311724076`*^9, 3.9642941007744074`*^9, 
  3.9642942925416713`*^9, 3.964294346776476*^9, 3.9642954588532515`*^9, 
  3.964306039863552*^9, 3.964326677628677*^9, 3.9643877494051924`*^9, 
  3.9644832860852566`*^9, 3.9645577269168158`*^9, 3.9646435358392587`*^9, 
  3.9647242323182993`*^9, 3.964818844654572*^9, 3.964830768720417*^9, 
  3.964831542946493*^9, 3.964831804122391*^9, 3.964834841391827*^9, 
  3.964855499249837*^9, 3.964856170421424*^9, 3.964917340818674*^9, 
  3.9650296969895487`*^9, 3.9650311338183947`*^9, 3.9650904042135544`*^9, 
  3.9650913122640667`*^9, 3.9650966613394775`*^9, 3.9651142670277004`*^9, 
  3.965117303635153*^9, 3.9651238212405057`*^9, 3.9651797172592106`*^9, 
  3.9652168993589373`*^9, 3.965219439719282*^9, 3.965220246935093*^9, 
  3.965221664801983*^9, 3.9652468217184515`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"29f3dbed-6bf4-44a5-bf66-abc675643b7d"]
}, Open  ]],

Cell["So the covariance matrix  of our system becomes,", "Text",
 CellChangeTimes->{{3.964298397707679*^9, 3.964298423650857*^9}, {
  3.965075629946633*^9, 
  3.9650756390613904`*^9}},ExpressionUUID->"ed9a1f53-f6b0-41d0-b448-\
500f5711413a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalSigma]", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]xx", ",", "\[CapitalSigma]xp"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalSigma]px", ",", "\[CapitalSigma]pp"}], "}"}]}], "}"}],
    " ", "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9642984282203865`*^9, 3.9642984378326735`*^9}, 
   3.9642984842633257`*^9, {3.964298523478324*^9, 3.9642986143457174`*^9}, 
   3.9642990237535686`*^9, {3.964306042101698*^9, 3.9643060685598907`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"bf7a339e-b43c-4974-8368-0196042fe6de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       FractionBox["1", 
        RowBox[{
          RowBox[{"2", " ", "m", " ", "X1", " ", "\[Omega]"}], "+", 
          RowBox[{"2", " ", "m", " ", "Z1", " ", "\[Omega]"}]}]], 
       RowBox[{
         RowBox[{"Re", "[", 
           RowBox[{"m", " ", 
             RowBox[{"(", 
               RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
         ">", "0"}]},
      "ConditionalExpression"], ",", 
     TemplateBox[{
       RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
           RowBox[{"\[ImaginaryI]", "+", 
             FractionBox["Y1", 
              RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
       RowBox[{
         RowBox[{"Re", "[", 
           RowBox[{"m", " ", 
             RowBox[{"(", 
               RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
         ">", "0"}]},
      "ConditionalExpression"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{
       RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"-", "\[ImaginaryI]"}], "+", 
             FractionBox["Y1", 
              RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
       RowBox[{
         RowBox[{"Re", "[", 
           RowBox[{"m", " ", 
             RowBox[{"(", 
               RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
         ">", "0"}]},
      "ConditionalExpression"], ",", 
     TemplateBox[{
       FractionBox[
        RowBox[{"m", " ", 
          RowBox[{"(", 
            RowBox[{
              SuperscriptBox["X1", "2"], "+", 
              SuperscriptBox["Y1", "2"], "-", 
              SuperscriptBox["Z1", "2"]}], ")"}], " ", "\[Omega]"}], 
        RowBox[{"2", " ", 
          RowBox[{"(", 
            RowBox[{"X1", "+", "Z1"}], ")"}]}]], 
       RowBox[{
         RowBox[{"Re", "[", 
           RowBox[{"m", " ", 
             RowBox[{"(", 
               RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
         ">", "0"}]},
      "ConditionalExpression"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9642986019009533`*^9, 3.964298616357358*^9}, 
   3.9643060712684193`*^9, 3.964326736281481*^9, 3.9643877511742773`*^9, 
   3.964483297564597*^9, 3.964557727044568*^9, 3.9646435559419384`*^9, 
   3.964724232459563*^9, 3.9648188448887925`*^9, 3.9648307688924494`*^9, 
   3.964831543024281*^9, 3.96483180425994*^9, 3.9648348415071726`*^9, 
   3.964855499386198*^9, 3.964856170553893*^9, 3.9649173410703697`*^9, 
   3.9650296971545043`*^9, 3.965031133949315*^9, 3.9650904044539475`*^9, 
   3.9650913124055424`*^9, 3.965096661450947*^9, 3.965114267167693*^9, 
   3.9651173037811575`*^9, 3.9651238213833413`*^9, 3.9651797174023314`*^9, 
   3.9652168994853773`*^9, 3.9652194398728876`*^9, 3.965220247079338*^9, 
   3.9652216649319*^9, 3.9652468218579416`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"b73afd35-e591-4b57-bebb-7e24d0f2aa3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "\[CapitalSigma]", "]"}]], "Input",
 CellChangeTimes->{{3.9642989859791203`*^9, 3.9642990192113743`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"012a4f4f-25ce-4482-8e9b-756bc24ee425"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      TemplateBox[{
        FractionBox["1", 
         RowBox[{
           RowBox[{"2", " ", "m", " ", "X1", " ", "\[Omega]"}], "+", 
           RowBox[{"2", " ", "m", " ", "Z1", " ", "\[Omega]"}]}]], 
        RowBox[{
          RowBox[{"Re", "[", 
            RowBox[{"m", " ", 
              RowBox[{"(", 
                RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
          ">", "0"}]},
       "ConditionalExpression"], 
      TemplateBox[{
        RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
            RowBox[{"\[ImaginaryI]", "+", 
              FractionBox["Y1", 
               RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
        RowBox[{
          RowBox[{"Re", "[", 
            RowBox[{"m", " ", 
              RowBox[{"(", 
                RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
          ">", "0"}]},
       "ConditionalExpression"]},
     {
      TemplateBox[{
        RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
            RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], "+", 
              FractionBox["Y1", 
               RowBox[{"X1", "+", "Z1"}]]}], ")"}]}], 
        RowBox[{
          RowBox[{"Re", "[", 
            RowBox[{"m", " ", 
              RowBox[{"(", 
                RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
          ">", "0"}]},
       "ConditionalExpression"], 
      TemplateBox[{
        FractionBox[
         RowBox[{"m", " ", 
           RowBox[{"(", 
             RowBox[{
               SuperscriptBox["X1", "2"], "+", 
               SuperscriptBox["Y1", "2"], "-", 
               SuperscriptBox["Z1", "2"]}], ")"}], " ", "\[Omega]"}], 
         RowBox[{"2", " ", 
           RowBox[{"(", 
             RowBox[{"X1", "+", "Z1"}], ")"}]}]], 
        RowBox[{
          RowBox[{"Re", "[", 
            RowBox[{"m", " ", 
              RowBox[{"(", 
                RowBox[{"X1", "+", "Z1"}], ")"}], " ", "\[Omega]"}], "]"}], 
          ">", "0"}]},
       "ConditionalExpression"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9643058890502005`*^9, 3.96430607814717*^9, 
  3.964326748432228*^9, 3.964387761710578*^9, 3.9644833049821568`*^9, 
  3.964643561485278*^9, 3.9647242325721908`*^9, 3.9648307689961977`*^9, 
  3.9648315430939612`*^9, 3.9648318043239775`*^9, 3.9648348415674143`*^9, 
  3.96485549946624*^9, 3.9648561706128154`*^9, 3.9649173411793604`*^9, 
  3.9650296972715282`*^9, 3.965031134021138*^9, 3.965090404539407*^9, 
  3.9650913124822717`*^9, 3.9650966614987803`*^9, 3.9651142672437844`*^9, 
  3.9651173038636856`*^9, 3.96512382147042*^9, 3.9651797174804897`*^9, 
  3.965216899556987*^9, 3.9652194399559135`*^9, 3.9652202471748343`*^9, 
  3.9652216649906626`*^9, 3.965246821941325*^9},
 CellLabel->
  "Out[23]//MatrixForm=",ExpressionUUID->"2f9c9062-96ed-4d31-93f7-\
4fe00fb52d86"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["R-Space Variables",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9643389761778*^9, 
  3.964338985510671*^9}},ExpressionUUID->"9e2d7314-0c85-4c56-afe7-\
606b1eeaa441"],

Cell[TextData[{
 "The dynamics of the density matrix can fully be described by these three \
parameters  X, Y, and Z. These parameters vary with time, so the evolution of \
the density matrix can be represented conveniently by a three-dimensional \
curve ",
 StyleBox["R(t)= ( X(t), Y(t), Z(t) )",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.9643316851963935`*^9, 3.9643317928676105`*^9}, {
  3.9650765395767536`*^9, 
  3.9650765406541386`*^9}},ExpressionUUID->"32f75b47-4cd6-4a10-ad15-\
fa6d02200686"],

Cell["\<\
The general thermal state of a harmonic oscillator, at an inverse temperature \
\[Beta],  is given by the equation, \
\>", "Text",
 CellChangeTimes->{{3.9643318394948125`*^9, 3.9643318411385*^9}, {
  3.964332107289259*^9, 
  3.9643321943348475`*^9}},ExpressionUUID->"6a3e5e42-a6ee-4047-b626-\
feb0b0007b44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]\[Beta]", "[", 
   RowBox[{"x1p_", ",", "x1_"}], "]"}], "=", " ", 
  RowBox[{
   RowBox[{"N\[Beta]", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "m"}], " ", "\[Omega]"}], "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x1", "2"], "+", " ", 
           SuperscriptBox["x1p", "2"]}], ")"}], 
         RowBox[{"Coth", "[", 
          RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}], " ", "-", " ", 
        RowBox[{"2", " ", "x1", " ", "x1p", " ", 
         RowBox[{"Csch", "[", 
          RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}]}], ")"}]}], "]"}]}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964332146811359*^9, 3.964332149581091*^9}, {
  3.9643321992552567`*^9, 3.9643324834705954`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"b4ac694b-c2fe-4ce0-a7b9-7466996b5fe4"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "m", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x1", "2"], "+", 
       SuperscriptBox["x1p", "2"]}], ")"}], " ", "\[Omega]", " ", 
     RowBox[{"Coth", "[", 
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}], "+", 
    RowBox[{"m", " ", "x1", " ", "x1p", " ", "\[Omega]", " ", 
     RowBox[{"Csch", "[", 
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}]}]], " ", 
  "N\[Beta]"}]], "Output",
 CellChangeTimes->{3.964332485230177*^9, 3.9643877656699123`*^9, 
  3.9644833229917927`*^9, 3.9645577280382495`*^9, 3.964643570275344*^9, 
  3.9647242336442633`*^9, 3.9648307699597063`*^9, 3.9648315440845256`*^9, 
  3.9648318052655134`*^9, 3.964834842411718*^9, 3.9648555004337053`*^9, 
  3.964856171563773*^9, 3.96491734222147*^9, 3.9650296982061234`*^9, 
  3.9650311349289637`*^9, 3.965090405451811*^9, 3.9650913133923163`*^9, 
  3.9650966622980714`*^9, 3.965114268158455*^9, 3.9651173047787223`*^9, 
  3.965123822384349*^9, 3.9651797184322815`*^9, 3.9652169004780493`*^9, 
  3.9652194400719852`*^9, 3.9652202480601163`*^9, 3.9652216659829006`*^9, 
  3.96524682287571*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"59571405-68a5-4a1d-a199-3edad87ac561"]
}, Open  ]],

Cell[TextData[{
 "As the oscillator reaches thermal equilibrium,  \[Rho] [x1p_,x1_] \
approaches \[Rho]\[Beta] [x1p_,x1_]. Comparing, we get",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]], TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Bold",ExpressionUUID->"6fe3db21-3108-4547-8c75-75b75af903bc"],
 StyleBox[" = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"(", " "}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"07dcff41-4131-4847-9657-11370ff61148"],
 StyleBox["Coth[\[Beta] \[Omega]], 0, -Csch[\[Beta] \[Omega]] )",
  FontWeight->"Bold"],
 ". We can visualize the set of density matrices, for temperatures, in R \
space with the following codes:"
}], "Text",
 CellChangeTimes->{{3.964332938034547*^9, 3.964332958084556*^9}, {
  3.9643330124633894`*^9, 3.9643330414705086`*^9}, {3.9643330749140825`*^9, 
  3.9643331461372633`*^9}, {3.964333302056546*^9, 3.9643333095812407`*^9}, {
  3.9643333433197613`*^9, 3.964333364146865*^9}, {3.964333786065132*^9, 
  3.96433384877555*^9}, {3.9643357467262106`*^9, 3.9643357508829*^9}, {
  3.964335792612502*^9, 3.964335795785917*^9}, {3.964336347323703*^9, 
  3.9643364148053303`*^9}, {3.9643384164965067`*^9, 3.9643385072924604`*^9}, {
  3.964726311205097*^9, 3.964726316063855*^9}, {3.9650765684598584`*^9, 
  3.965076594829978*^9}},ExpressionUUID->"6c9cbbd3-a0bf-49ff-8277-\
6dc8cdc4fa0a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Figure 1:",
  FontVariations->{"Underline"->True}],
 "   "
}], "Subsection",
 CellChangeTimes->{{3.9643363368697405`*^9, 3.9643363426991715`*^9}, {
  3.9647273018392687`*^9, 
  3.964727330420365*^9}},ExpressionUUID->"5213b996-70d3-430b-b67a-\
f2f91046af7d"],

Cell["\<\
Here we will plot the collection of possible thermal states for oscillator-1 \
at different temperatures. For the purpose of plotting, we set the frequency \
to be unity.\
\>", "Text",
 CellChangeTimes->{{3.9650746378440313`*^9, 3.9650746925156803`*^9}, {
  3.965080226524359*^9, 
  3.965080303130246*^9}},ExpressionUUID->"7a757f1a-1002-4f20-9e16-\
fcd58b8a666b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]plot1", "=", "1"}]], "Input",
 CellChangeTimes->{
  3.964831193646321*^9, {3.9650962707681327`*^9, 3.9650962720695148`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"ca49c222-d9fd-46b4-91fa-e97b68743156"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.964831194076947*^9, 3.9648315441650057`*^9, 
  3.964831805348708*^9, 3.964834842499756*^9, 3.9648555005386744`*^9, 
  3.96485617164076*^9, 3.964917342365049*^9, 3.965029698326053*^9, 
  3.965031135022718*^9, 3.9650904056251326`*^9, 3.9650913134813776`*^9, 
  3.9650962725986366`*^9, 3.965096662345929*^9, 3.9651142682701626`*^9, 
  3.96511730489456*^9, 3.9651238224975567`*^9, 3.9651797185503426`*^9, 
  3.9652169006047215`*^9, 3.965219440150934*^9, 3.965220248219378*^9, 
  3.9652216660847497`*^9, 3.965246822983101*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"d03d21cb-ebe6-4246-8232-94908694b9b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Coth", "[", 
         RowBox[{"\[Omega]plot1", "/", "T"}], "]"}], ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Csch", "[", 
          RowBox[{"\[Omega]plot1", "/", "T"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "Large", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Opacity", "[", 
        RowBox[{"0.1", ",", "Red"}], "]"}], ",", 
       RowBox[{"InfinitePlane", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Coth", "[", 
             RowBox[{"\[Omega]plot1", "/", "4.9"}], "]"}], ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"Csch", "[", 
              RowBox[{"\[Omega]plot1", "/", "4.9"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Coth", "[", 
             RowBox[{"\[Omega]plot1", "/", "5"}], "]"}], ",", "0", ",", 
            RowBox[{"-", 
             RowBox[{"Csch", "[", 
              RowBox[{"\[Omega]plot1", "/", "5"}], "]"}]}]}], "}"}]}], "}"}], 
        "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"LabelStyle", "->", "Black"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.9643357549467535`*^9, 3.964335782349682*^9}, {
   3.964483488874996*^9, 3.9644835156849527`*^9}, {3.9646435923382654`*^9, 
   3.964643648790492*^9}, 3.9647244516137295`*^9, {3.9647245807192917`*^9, 
   3.964724669116231*^9}, {3.9647247153781185`*^9, 3.9647247275615945`*^9}, {
   3.9647248415787196`*^9, 3.964724861059564*^9}, {3.964724956095809*^9, 
   3.964724957580883*^9}, 3.9647250540270853`*^9, {3.9647259032658787`*^9, 
   3.9647259346565676`*^9}, 3.9647259786247396`*^9, {3.964726010278768*^9, 
   3.9647260568810606`*^9}, {3.9647260953082385`*^9, 3.964726114814915*^9}, 
   3.9647262847775755`*^9, 3.9647264078621187`*^9, {3.9647266247135363`*^9, 
   3.9647266314038115`*^9}, {3.964727137517911*^9, 3.9647271751869473`*^9}, {
   3.9647272366515703`*^9, 3.96472723788575*^9}, {3.9648307884412403`*^9, 
   3.964830861935322*^9}, {3.9648310712704735`*^9, 3.9648310798940835`*^9}, {
   3.9648311372723813`*^9, 3.9648311449504013`*^9}, 3.964831186757553*^9, 
   3.9649171039638987`*^9, {3.9649181165972524`*^9, 3.9649181268539762`*^9}, {
   3.9649183614967475`*^9, 3.9649183926736517`*^9}, {3.9650962473173003`*^9, 
   3.9650962612149906`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"ae2d33e6-6aff-488b-a1e2-d72fda4a5c5f"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], Thickness[Large], Line3DBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$61500#1"]& ]}, {}}, 
   {RGBColor[0, 0, 1], PointSize[Large], Point3DBox[{1, 0, 0}]}, 
   {RGBColor[1, 0, 0], Opacity[0.1], 
    TagBox[ConicHullRegion3DBox[{{0, 0, 0}, {1, 0, 0}, {0, 0, 1}}],
     "InfinitePlane"]}, 
   {RGBColor[1, 0, 0], 
    Arrow3DBox[
     NCache[{{4.967839071239178, 0, -4.866150946870692}, {
       Coth[Rational[1, 5]], 0, -Csch[Rational[1, 5]]}}, {{
       4.967839071239178, 0, -4.866150946870692}, {
       5.066489563439473, 0, -4.966821568814517}}]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{1., 5.066489462748384}, {-1., 1.}, {-4.9668214661028856`, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None}]], "Output",
 CellChangeTimes->{
  3.9643357986777554`*^9, 3.9643877718397913`*^9, 3.9644833294735746`*^9, 
   3.964483519516698*^9, {3.9645577286355305`*^9, 3.964557729729017*^9}, 
   3.9646436547954745`*^9, 3.964724453517327*^9, 3.9647246703805227`*^9, {
   3.964724717328183*^9, 3.964724728463293*^9}, 3.9647247879015822`*^9, 
   3.9647248620630045`*^9, 3.9647249581270027`*^9, 3.9647250700998235`*^9, 
   3.9647260967833157`*^9, 3.9647261283036904`*^9, 3.9647262867433853`*^9, 
   3.964726417734943*^9, {3.964727228226475*^9, 3.96472724052625*^9}, 
   3.9648311467711287`*^9, 3.9648312027397184`*^9, 3.964831544308819*^9, 
   3.9648318054537587`*^9, 3.9648348425962095`*^9, 3.9648555006724014`*^9, 
   3.964856171736062*^9, 3.9649173431252356`*^9, 3.9649183941413984`*^9, 
   3.9650296991411247`*^9, 3.965031135564967*^9, 3.965090406291377*^9, 
   3.965091314026499*^9, 3.9650962767341585`*^9, 3.9650966630328836`*^9, 
   3.965114268834565*^9, 3.965117305495407*^9, 3.965123822904111*^9, 
   3.9651797192729063`*^9, 3.965216901332674*^9, 3.965219440314604*^9, 
   3.9652202486034184`*^9, 3.9652216664938197`*^9, 3.9652468235878325`*^9},
 CellLabel->"Out[26]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvQe8XkXVPfwkuSUhIY2QSkhvJEBCQkKAwIUU0oDQOwSF0AWRDpJQxIYg
ivgGCyo2sMCLDUWNDUFFI4oCIoJYkCIBlddu/s/M3nNm1sye5vfl98sN3Hvu
c9Y6s2evtWfmzBx48gWnn3rOyRec8dqTxx9w/snnnX7Ga98wftm557e/1adX
q9UxqNXqHDy+1dH+762tVuLLcPWl1ee8nXfe+aljjjlm67p161p96Ou6GTNm
tMyfP9M/3m9vR7+9Zvz48XctW7bM+e3OGxcuXKj+S/196aSTTpq93Xbbtf4i
fsoQ+pQNc+fO3bJ27Vr9+731145Nq1evVtgMDIZ236pVqxpofxI/dKAlpj7E
Jaagjd92223pCv2105A3f9dOnTo1Qro//Z4iZEi6uI6YOHGivqKLvppPNtcq
iuruMux+8fZQz6eB3Zc+fPNhhx2mfuq2wJ1LliyRP5wQ9ekZNWrUbT09Pe6H
q19WH9KyDLvNB6pnodgaQPq6V8Q7dAjwqSn7qP9X3x/c1dXFrdPXoDChZp6R
ulZRfVm8SS+6iRB12LSD8Sbq+elvtwGY56Z+FtzkP/T5QjxiA29nr1M/fcv8
+fNbvfX3OtQjNg9gyZgxY7b49/infVAGi+GgPqfhsD3eQ+HlkO0wD+vJo48+
Wl3/kn+Pv9nm9gMVmnskXaeaWf1U/czcw39WwT3+T2hwJ151Y6s/o22bqZ+q
LsnB0mG+p/4uGD58+B/9e/zZ8vDDVvGaPGjQIH3FWLyHwt3qpHuYODGB9aJ/
j1fsc/YDV7V5k4PoienObzKbuYfian5XfU5wj5csPj9uoc0puvqo/zcJg7tu
h2kj9T31PF7w7/GC/V31bPTv8j3UM9dpTf2ZQtcpzObZt7rxWannpz7nef8e
z8XbHPrfdPWFH+KQ7m76eH0L+qouNB+gPiy40e/jDQ8BPJOuM581ceDAgYaM
+8BUoz3n3+O3AhknYzVBvAveQ8sZJeE+5oF9ccWKFa3gBr8ubPXZdJ3pbSpr
8A3gQSlCf/Dv8RT9rpSxoNXnImD9/X7hg1L3e9a/xy/tg0oK6u50HaR2vod6
kObe6t/gHo/bBk9mrD3wHjqzb0P3cIVKZZPf+/d4VGhwKWPtSdcZHDq7kzB2
+DL1O/8ej1gefuCqz1Hf11cssu3WZPf+9lm5mTe4x08EHtzm6veajNVD15n2
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
kElomVe9jQ/Szt72fzAysGw=\
\>", "ImageResolution" -> \
300.],ExpressionUUID->"c1f966c3-bf5d-4b18-a1ac-ad52940fd53b"]
}, Open  ]],

Cell[TextData[{
 "The family of thermal density matrices is represented by the curve ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", 
    StyleBox["\[Beta]",
     FontWeight->"Bold"]], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"384b3e0a-0ec6-4812-825c-5014573f62c1"],
 StyleBox[" = (Coth[\[Beta] \[Omega]], 0, \[Minus]Csch[\[Beta] \[Omega]",
  FontWeight->"Bold"],
 StyleBox["])",
  FontWeight->"Bold"],
 ".  The curve lies entirely in the X\[Dash]Z plane, shown as the shaded \
region.The blue dot indicates the ground state, and the arrow shows the \
direction of increasing temperature."
}], "Text",
 CellChangeTimes->{{3.965033889714671*^9, 3.9650338961647897`*^9}, {
  3.965034076468763*^9, 3.9650341274570675`*^9}, {3.965076634104018*^9, 
  3.965076638338825*^9}},ExpressionUUID->"9149ce2f-6ed8-4c30-8bd5-\
bf6afea7fa21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["B. Section III: THE SET UP",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Section",
 CellChangeTimes->{{3.9643386407170296`*^9, 3.9643386894464364`*^9}, {
   3.9643388083560915`*^9, 3.964338826304571*^9}, {3.9643390317170315`*^9, 
   3.9643390489229183`*^9}, 3.9643390852124753`*^9},
 TextAlignment->Center,ExpressionUUID->"69264d78-aaf2-429c-9ee3-a083396d7b6c"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Hamiltonian of the System",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9644794523087482`*^9, 
  3.9644794601494937`*^9}},ExpressionUUID->"659fb3f6-1105-4f96-9ac4-\
8a2fec985bf8"],

Cell["\<\
We consider the system of two coupled oscillators is described by a \
Hamiltonian of the form:\
\>", "Text",
 CellChangeTimes->{{3.964339223637044*^9, 3.9643392297794375`*^9}, 
   3.9644721040610957`*^9, {3.9650768611424427`*^9, 
   3.9650768960816865`*^9}},ExpressionUUID->"3543bb63-ab0c-4b17-97c8-\
d60d246f410d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    FractionBox[
     SuperscriptBox["p1", "2"], 
     RowBox[{"2", " ", "m"}]], " ", "+", " ", 
    FractionBox[
     SuperscriptBox["p2", "2"], 
     RowBox[{"2", "m"}]], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "m", " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["x1", "2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "m", " ", 
     SuperscriptBox["\[CapitalOmega]", "2"], " ", 
     SuperscriptBox["x2", "2"]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"\[CapitalKappa]", "[", "t", "]"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}]}], "\n"}]], "Input",
 CellChangeTimes->{
  3.9643392457803926`*^9, {3.9643816914782906`*^9, 3.964381716459883*^9}, {
   3.964472247673645*^9, 3.964472426485319*^9}, {3.964472482777014*^9, 
   3.964472502748945*^9}, {3.964483350945429*^9, 3.964483352669211*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"8cf2ef46-c234-4a13-a8dd-3f2174e055ca"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["p1", "2"], 
   RowBox[{"2", " ", "m"}]], "+", 
  FractionBox[
   SuperscriptBox["p2", "2"], 
   RowBox[{"2", " ", "m"}]], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   SuperscriptBox["x1", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "m", " ", 
   SuperscriptBox["x2", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x1", "-", "x2"}], ")"}], "2"], " ", 
   RowBox[{"\[CapitalKappa]", "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.965220101888956*^9, 3.965220248683359*^9, 
  3.965221667057124*^9, 3.9652468236939764`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"9472bd72-6dda-4ca3-aaad-5c33c0e69723"]
}, Open  ]],

Cell["\<\
where \[CapitalKappa] is the coupling, and \[CapitalOmega] is the frequency \
of the oscillators. Our coupling is turned on from t=0 to t-T, and is off \
otherwise. So the time dependence of both coupling and frequency is as \
follows:\
\>", "Text",
 CellChangeTimes->{{3.9644724423669796`*^9, 3.964472467257943*^9}, {
  3.964472538072154*^9, 3.9644725692733507`*^9}, {3.96447294948512*^9, 
  3.9644729734773064`*^9}, {3.965077609394025*^9, 3.9650777025891895`*^9}, {
  3.9650777380858536`*^9, 
  3.9650777817781415`*^9}},ExpressionUUID->"f89cc268-4ad7-4551-8bf2-\
f30fdfcaf8a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalKappa]", "[", "t_", "]"}], "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"0", "<", "t", "<", "\[Tau]"}]}], "}"}], "}"}], ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.964472977073347*^9, 3.9644730079449043`*^9}, {
  3.9647274449819145`*^9, 3.964727446315299*^9}, {3.9650769269166*^9, 
  3.9650769511644664`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"26d9c6f4-4550-464f-9074-7f2aff4593c8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"k", 
        RowBox[{"0", "<", "t", "<", "\[Tau]"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.9650769354501505`*^9, 3.965076952339615*^9}, 
   3.965090406464278*^9, 3.965091314302312*^9, 3.965096663383131*^9, 
   3.965114269017342*^9, 3.9651173056780024`*^9, 3.9651238230967445`*^9, 
   3.965179719429493*^9, 3.965216901475382*^9, 3.9652194404984827`*^9, 
   3.9652202487480106`*^9, 3.9652216672293754`*^9, 3.9652468237809324`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"932bc424-68d5-4774-82e5-7a410172b0d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "[", "t_", "]"}], "=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{
        RowBox[{"t", "<", "0"}], "||", 
        RowBox[{"t", ">", "\[Tau]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]p", ",", 
       RowBox[{"0", "<", "t", "<", "\[Tau]"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.965076961812341*^9, 3.965076964750526*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"dd865067-49b8-4d00-860d-5eb50590bf42"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Omega]", 
        RowBox[{
         RowBox[{"t", "<", "0"}], "||", 
         RowBox[{"t", ">", "\[Tau]"}]}]},
       {"\[Omega]p", 
        RowBox[{"0", "<", "t", "<", "\[Tau]"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.9650769654561305`*^9, 3.9650904065512266`*^9, 
  3.9650913143675413`*^9, 3.965096663447333*^9, 3.9651142691000285`*^9, 
  3.96511730576523*^9, 3.965123823187558*^9, 3.965179719501602*^9, 
  3.9652169015445395`*^9, 3.965219440575453*^9, 3.965220248827465*^9, 
  3.96522166728354*^9, 3.965246823867942*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"58b4b217-dbe1-49b6-ab8a-2a18e96f763a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 2: Variation of equipotential surface of the \
system during passive and active phase",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9645663644445667`*^9, 
  3.964566424981725*^9}},ExpressionUUID->"8356d425-d8b3-49fa-9908-\
52e0f68dd4f5"],

Cell["\<\
Here, we will look at the For the purpose of plotting, we set the parameters \
to arbitrary constants:\
\>", "Text",
 CellChangeTimes->{{3.9645688863814483`*^9, 3.9645689101488085`*^9}, {
  3.965077048022794*^9, 
  3.9650770629118586`*^9}},ExpressionUUID->"5486a28d-86eb-4e64-9823-\
1f9813944b7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[CapitalOmega]1plot2", ",", "\[CapitalOmega]2plot2", ",", "Kplot2"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "1.1", ",", "2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9645664680171957`*^9, 3.9645665374916615`*^9}, {
   3.9645665686442995`*^9, 3.9645666130283566`*^9}, 3.964568745460238*^9, {
   3.9645688066610403`*^9, 3.964568816072855*^9}, {3.964568863430292*^9, 
   3.964568879154997*^9}, {3.9645689216449795`*^9, 3.9645690071855617`*^9}, {
   3.9645692284604435`*^9, 3.964569228684159*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"b44ac7d6-b352-4e81-9bb2-897e0d656b19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1.1`", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.9645692292462835`*^9, 3.96464369392066*^9, 
  3.9647274668123255`*^9, 3.964831241620062*^9, 3.9648315550376115`*^9, 
  3.964831805594923*^9, 3.964834842718383*^9, 3.9648555008461514`*^9, 
  3.9648561718745155`*^9, 3.964917343488302*^9, 3.9650296995083466`*^9, 
  3.9650311357729907`*^9, 3.9650904067881145`*^9, 3.965091314432562*^9, 
  3.965096663494789*^9, 3.9651142691725564`*^9, 3.965117305846862*^9, 
  3.965123823273249*^9, 3.965179719708129*^9, 3.9652169017233195`*^9, 
  3.965219440656986*^9, 3.9652202489067283`*^9, 3.965221667340861*^9, 
  3.96524682394828*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"bd6f5012-316e-4f1b-8ee9-9c71a0c21958"]
}, Open  ]],

Cell["The potentials before and coupling are:", "Text",
 CellChangeTimes->{{3.964569019330512*^9, 
  3.9645690397271504`*^9}},ExpressionUUID->"f3469a3c-6be1-45c1-878a-\
d4eadf4c68db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V0", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], "=", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["\[CapitalOmega]1plot2", "2"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x1", "2"], "+", 
     SuperscriptBox["x2", "2"]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.964569048351036*^9, 3.964569179519953*^9}, {
  3.9645692556051326`*^9, 3.964569364189873*^9}, {3.9648312535318356`*^9, 
  3.9648312608701315`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"2f0d328e-ef02-45ba-9b3b-7e56bf3d8a8e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["x1", "2"], "+", 
    SuperscriptBox["x2", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9648312615567713`*^9, 3.9648315586863775`*^9, 
  3.964831805652443*^9, 3.964834842770836*^9, 3.9648555009250507`*^9, 
  3.96485617193186*^9, 3.964917343561657*^9, 3.9650296996134143`*^9, 
  3.965031135839876*^9, 3.9650904068658466`*^9, 3.965091314628847*^9, 
  3.965096663558137*^9, 3.965114269243683*^9, 3.9651173060655355`*^9, 
  3.965123823360205*^9, 3.9651797197818356`*^9, 3.965216901789915*^9, 
  3.9652194407404013`*^9, 3.9652202489706116`*^9, 3.965221667398155*^9, 
  3.9652468241705656`*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"dc978afb-d0de-4e3d-9b31-f77ff897e98a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", 
   RowBox[{"x1_", ",", "x2_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[CapitalOmega]2plot2", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x1", "2"], "+", 
      SuperscriptBox["x2", "2"]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "Kplot2", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x1", "-", "x2"}], ")"}], "2"]}]}]}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"bd3d5a07-afd8-47db-9e27-5dc20c91ebb2"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"x1", "-", "x2"}], ")"}], "2"], "+", 
  RowBox[{"0.6050000000000001`", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x1", "2"], "+", 
     SuperscriptBox["x2", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.9648312671322193`*^9, 3.964831562529233*^9, 
  3.964831805716034*^9, 3.964834842823368*^9, 3.964855501001503*^9, 
  3.9648561719853954`*^9, 3.964917343644744*^9, 3.9650296997170753`*^9, 
  3.965031135906329*^9, 3.96509040695119*^9, 3.9650913146978645`*^9, 
  3.9650966636059856`*^9, 3.9651142694350705`*^9, 3.9651173061445646`*^9, 
  3.965123823438921*^9, 3.965179719854803*^9, 3.965216901854526*^9, 
  3.965219440833313*^9, 3.965220249050578*^9, 3.9652216674459305`*^9, 
  3.9652468242403545`*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"438904ec-68dd-4d83-a9be-477d4922e6c1"]
}, Open  ]],

Cell["\<\
Let us call the plots for the two potentials as p1 and p2. Then,\
\>", "Text",
 CellChangeTimes->{{3.9645694736133657`*^9, 
  3.964569515215398*^9}},ExpressionUUID->"3835973b-7ce2-4234-a9b5-\
3a35ee1fb139"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"V0", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"{", "Black", "}"}]}], ",", 
    RowBox[{"FrameTicks", "->", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.964569523903284*^9, {3.964664901499*^9, 3.96466499562148*^9}, {
   3.9646650560969477`*^9, 3.964665248114316*^9}, {3.9646652904843235`*^9, 
   3.964665332196807*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"b84f1f54-b614-435a-a798-c073ed0121de"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
+5joH6fnl+TcNuRIO9iH9PzCfZrVcb0emPehj36gDzyhj/a+D+878ATmfW0X
vGgXWNsFBk/apT1gPTdF8zrM44EvlRYnJvO7nluDHgOjx6w7aV4Ce8p40n2A
1Nd9jXqeDfGynhvE+3oOle7Txw4x77A/VL+DB07vg6j0zGvggz3VdS89J5P5
KL1/rDzOx/odKHA630y+NzkPiHrwAbnSro7L9PnqVdHvQZ7YZ/jOvKT71tAv
3qMf7Aiw+tu6H0D3wUIHfNdzMukPPoOn7qOkfT1fG7kwLpADMHIn7qQc+RNH
Ig/q8Tt6xfce2BnsIDD8oB4w9YgvqI9dQW7A2DXsCvWBNW+OHeE9YN7DjvAe
MHaCftEzYPCnX+wSMHwhL5HeT7BR1tM3Jv6bxeHM34yf9PpgacE5udCnfFe5
4P/gj6FP6Ft6/k72m+t3Le/OvXzSLlXJvS+mb7mRy86/4cD3knvktw1s/s6d
86r9mbecsnDb1uSe+S23jK79K/g+q6zhjZ2Xvpx8jwX8xoDPy2e1/zrqa1y3
svb/FfqN8VqThr7Osw8neND+i59tHDirXXL/DnCLmzqdclOn5F5WwzvCPK1e
bO8f1x9d85fcOw1dtE/53m1ee/uEMaUF5/eeau0xXnkfP27olvMqXqja4C/Y
7e5Ld7v7p4LzeR+38n+GZyynn31Cv3Hd/KRDZxR1Ob002qGWBp8cngXn9x5q
78f9/AEP33PVM71WPbM28gF82lu50e2E707kXHD/hsnZT/3suguveTe537uO
2UvgrYFPBfuxhw4M7/cx/JDDPYYP8FjDR/QswqcaP+CT0eWE7xGGDuNLbMfw
cEUmf/jazPRT7zeALtMLJ3oeYfjlwrhyE208woe/2HgTvhScr2/1kv2woR3H
OEYv0f9jA96R7yaniNdxVp6WT7If8kNrn9+/tPfpj+eAriv7d125xb/yfo+a
vwrfe369cV/evMa/+vlHOX9rpX+299GvLHv0Mb+g3YHd1r5d4a+5qfbfFnfS
x0uafrykIr5HO2d8ven0rzet9ivue67mb6ufk9ezavfzsn1KRvbbGtulH+rx
3n7Xbtj32g2b3V755zy/7p2Jc0ovqXBnNNv3rXafzvZH/Hmf924aWe3qtdz2
4SPfzon6+14Ntf9a9ZhfeMvd4+eN2uI6rt7p7d2m/9Pf0LjulV+etcU9ufz3
pxw642vX992d5+/RvsI1Kxr1wF0bv3Frix47ZcK71e7MFx/tsqboG9f6lT+/
tvadUrdro/1v+Nuwxa7d4pfWt7u33D183+SSjh1+ckeOO+OxvmU73Ld3fPrO
0c1/ivV4b2Hj7gOmH7LR3fnW5M923f+X+OT309c2u+5PfrM7YOyImv/d4Ea8
8mHNX7lr2+ipNo2e2uBmvjLzusUnVbsOs/Yv+23PDZHP8B2+wCfohG7ohG76
oV/0hee0+g+/1mhFtev1QMcbBnyyJfIZvsMn+AYf4At4QwdyRu6N109d3Pyn
OT4/zEckfIbv8BG+Qjd8AC/wfGCXaZ8+tbbK87w/PF1Pg3vK78zDb+xYunpV
abJPF5in1Pu196JfoO9pvZXnfvHEX9tt93sOu/KD0cur/Gt3nrD+jQNX+M4L
Ow56YH4Nnr7NP3yb5f7RCRU1f1X+jgC7oQaPD/Ud9fc67tt1rS4pcx18Rctv
ulX55aF9V9/apx/6/fDJC2v+kufjFVdf+POO5f6U72544uJTtvuizn3369x3
uT+gVoxttvu9AuwONHhIqO/+ZPXrhvbdKmt/74vK7plw1SJfYxzqDrx4s/9d
gF13g68OeLp9A96+bFrrgW9vnOLv+Guvs0Y+tc5vbtCw5t9k17jiraKKt9ZF
vsAn+AKfwBs6wBs6WoRyN9zKbw7tuTetPfAE7zsD7A4zGLzAs1uA3XSDiwKe
7oSGebw9eEPHYVa+Vyh33e39ceH9yBf4dFV+4K5xQ+888/PfNvo2yh09gB/o
wYEiJ+SCnBbl7UDybN3qtO0rf97k6rZv2vG1PsvcoeF9t5O9Pyz05261/qYL
3dBZJHRBZ6TL6kMHdJ0S/Ak3xOInnvyOHqPXh4lcwBs6lteal2eS50tDpv1n
yLRt7uGzWz50dssyd43p297WHuOCcYJeoCfwAb7QDu2i5+g9eoxeo1foGXyE
r+ABXsMWjb7tqXrVfseHf/3ujk9ZL0nuvyRerQ7/oj+4519X1vxV+pIdS25o
cF/hvX5f2DyIPbrvtgZH3T8Kv2J99Hs+CHbAlZg9qAp4uMcNr/j94OEt/3HL
Ptti+5vNX8YP29XK+xm/Xg788j+bXFaGp//XCc/On+OT84eOffGsJi+elZwv
dG7xBZMaDkvOCTrg4uXXDP6mrOD8IOrNnF37L9nnuqvpx6VBP6gX877jTY4D
Ap6RT8pnvf/wqM3j545uuy7SrffiXVba+iU3dm3Mi9+101svnfzz6gI/+iEb
D9eE8RD90Obp9mOeAj8t5n0CnwvuL6yTxj/WNz2J9ddUnXiEfynZXzxozDE1
f8n+4kMvPP3M0rfKCvYPw+fvzI4sDk9/sY3DBoHvcb1/kdWHD/ClvdmBfwU+
wLfox6Oneo/x5nwCZM+PgC/K01f3DKsf5134Cp8vt/aJC3pYfebltcYP4o3B
xg9g9Ai9gm74gP4fUqvel/3k7g30FtxjbPyIdMMH+mk+ceWYwceXxvdox8ZV
7Ke+yVPvtzM74KaZPsOnUTbeiH8Yl4xTxiXjFDkiV9HfTDnEvJ3pr95Pd4GN
Q+KRKWl8C+7doj/GKeNW9DTqmd4PV5QuL9ife1CwKxEvym0cFuzPhS7sJHYT
u9Qk2DEn48qJ/Y16hx6K3iVxqrVH//CJeWJosM+xf7OrTuxYxMfGfexvncH0
95y9/5i1yzxwRE3UsN+EnL9o1jVjh/87ubfL8I94gFdNCLb2rD8k+0QtTnQP
9glxo7XjdrF2aSfeY2f1h4Q4011s9Re1z9eP8xL40S7v7ZLGN7ZDOe3QLu08
JnQwL8u48yIP5oWC/ZmmL36G6Z/eF2V6F/MkZqe8jH9/t9kB7OdhZp91vyT9
8B7t/DHYlVj/nbzjlpzjYHarIP9Nv9ABXcfZfC3jqPDeYhtX6Of+6fFWcH8k
857ZhYJ7e5kHx/RKydPvMHmin6wDPDPx1nv+3bvCd9jl/i/m5tb6E1q8ec9F
9Sr9Q2ZP/mN2kCe/mx8Zn+Zv+ktsHqAd2k37a+u9+bv+apuHXr/xyqdvvHK+
7/Hj1p4/bl0T26Fd88vjk/doh/do5wiL84fWL/13/dL18cnvFtfFp+SLyI/E
3/uEeNp/GeJpf12It/2MEG/bOtN6W6eo9hJ/+4dDnse9Znkfi/+9xf/e8gW+
T8gX+JdCPfeI5YfoFzzIw/JsFPIV/oyQr/CvBnp9/UAv7zveB2/oAG/oAC/w
pF36oV36sXyNt3xNfPK75Xu85Xvik9+hGz70C/J0vYI845PfLf/lWoX8l7P8
mOsV8mOuZdA/1yroX5QDckEOyIV2aNfyc87yc1EOyEX0IfYLHvQLHrRDu5Kv
8T3s/dcsz3eRvX+yjSPWPQaf+KfjSm6s9pda/mikyelUw3+l5QUlv5nbz/JZ
rUyOo2w8NDI5lll97BjvoV9dLB+3yOT6Z8uLHWT6cICNq+dMHzZ9MfmDxpPK
3RstRt0+9OkNfpnx9SzLV063PJXon0P/XjY+9rN8Z3Pj46VmT55CL2zc72T5
xLamV99b3vBu07+LLM9Y1/TN3nPPmL0w/XOnmf5Z3s4fank8+qFf+qHf9869
7Z1zb6v0g+d3fnR+5zVRbsgROSN35ITckCNyhc/wHbyhA7yhA7kiZ+SKnJEr
coYv8Mn0Kq4zI1fkjFyRM3JErpebnXjW8pn4p+ghckSuyBG5ogfohdjTKBfk
JOtzxbe46V/e/vIUd+qBrc766dkKP27cq8feNm2aW7xgbJvD+lX4Xjs1r7t1
TqVf/cPKe2cPKvclJ+9xzh2rN/qnf7mn6OirkjibuHvWzStPKmuU3DczMdR3
w63+zJ2Pm7Xzcevdq7XkjkjiCj23dUKLpZVLd6nwM29v3PHJWzf62v988HYS
pxO3T134c9duf0r2HU4P9d31Vr9DeLpZ1g5+gp5jN8PaeSrg6T4yOvF79RzO
2UbnK0bHN4EuL/GSf8PoYJ8F8f9OjNfwvptj7z/24dnL69fI4bzaafyFKf5p
8zNY/x0Wyl0nK8feEM9g5+Cj8c0ZH90zRh9y6WPyLQ3yjfsrzrpszRX7zy53
hoczvJzR6Yxut8b04oHQjoMu4gPwQt/EHrtfrN/e9v5frF+9r8bwifmCg+ee
ecjcM6uS7ygNXvDT9Q8Orpfc83jnnQvaXrFmhyupXa5puC2+Rzt/s3zgPpZn
22n0wcfv0mp73J95kOXpGli+95KHx39y2eLtbtwerWv+b6k/YtGQe09aUpXc
W2p5uHssf3zyfT9c+UnXHe6ovCCW+kHtm1z/0sDkHpXbmtQ7det3m52v8YZ/
uPlbP/DWUT0bziuP5Yd8MOgf48rK3bZJi8+7+5HvfN58nF4dy1/q+1GnWztW
u0G1j3UL/PqbPxm9e+/kXpbn32p18vwBW9wB+XVC7zdYOfHQbk3v2rXpXVtc
6akP7nvag5+53avqXP7PWcn3joMN3/idluVJ97F88rpDLquxSGVuU48as7Ro
sXvE8Kd+zz+O7vHH0eWuePr4DtPHL3LgT/knXx1776m/rXZT8+s3P7pdjP/s
p7L8u3vC8s1HGr8pt3y1e9ny1ebPF9xvw++Hid40Pvqq13/sWelv/rDX1jvH
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
6e8mtxj/NLP8EPT9H/5l95Q=
    "], {
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
yG4=
         "]], PolygonBox[CompressedData["
1:eJwtlMtLVlEUxY/alXvx3KggKiFfBYURoflZmOanlmn0wlnRCyfN7B9IatBz
VqPKR5qa+SSNimY+ihqVPQgNyrLUiCAioUkF/Ra7wYG9zl5nn33W3vvk1p+s
a0h1zh1mLWIlvHNPAueWpTv3LnQuB9wH7mflYlfGzj3EV5bm3G/8ZeA+Atxj
rxx7NZzbcHtYWdgTGc51468Fv8BOwOmH28neGPgqnHXgz+DjkXPF4KdwV7I3
TfwK8VPtzirsWc4sBZ+AM4f9F04AziCffs5mg7fiKwR3RHaH7tLeOLZnLxs8
Bx6F/x3+1xTistcOrmXN4ptnDeLb7c1ukzbgEWJMp1jO1/CtDe1tCe7rIvZ1
9j7gz8ffrHjsDRN7B/468q9gbxL+FOsGZ7fHpl0p/l64u/B/xPdJmssPfon9
itUMPsL6QrwlKhr8ClY7dgHnNxOrydvdEbgR3w/4m8BbwLf0dm+1aeB4Pr5f
rAT+t+xV4nvE+7qIN6AzxLvj7a4keBi7ODZfEfG+cXbIm8+Du8EXwDPwJ9Dg
PfgB8dYHluN97MesbYHdobtG1ROBaSptb0b2ll5iJrHvEm9xmtU8RVpGpmUr
+RcR/zlnqgOr4TPsAvLr4WwHe5neNJAW4uSF/3sWPA5nf2w5K/dS8AD8U/DD
NMspK7Saq/bK4UxkPape3QC/Bf4QuCrNalyDvRF+I/wS9nrAh8Dzqdajf0Kr
sWqtnq6OrGfUO9IkJ7SeVe9Ks8zQNJbWmpki8i331guqqWp7OrLeVw1Vyzxv
s6oclEtbaLVVz6n3znqrzXL457HrI+v9Y/DXhDbzmn3V8Ci+QW/apIMn0fcn
/gXOvyZeB7695DSWbhpIi4vsrQC341+Ffc7bXdJU2mqmNdviXNLfAp4JrOfV
+wOhzaZmULOoGqvW4tSAS2LrZf0pleoV/AcD01haH4ittkPgPdjJ2GqhP2pn
ZHvyKed9sb1Zb58gRhnxW73VVjOsWe70Nqt68wLcptC4+uP017WEpoVmVLPa
Cn4T2J+pv1OaSTvlOIVdGNrfpRnWLI94m3X9SRmR9ax6V3/gldA0lJb6ky+H
NrOaXd2R9DYjmhX1fCHv+Qe+fb/S
         "]]}]}, 
     {RGBColor[0.4109375, 0.448125, 0.5775], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmXmQVNUVxl/P0N2vX78OBpQqE1RAY6KJyDoIKiiCwLAMDgqKS9QKg5ay
KvJHEHDJYgxmISaCqEDUuIAowpCAC4LGVAkIxgRQsXCJBSqpxCSmBNR8P75D
kT967nn3nXfvWb9z7p3OV09pnlyXJEmz/tRrvCtNku6FJLk0S5J+pSTpq98v
Nd/SJkl6if5M764qeH6+5reVzXdJweOZQV8t/m6i/yl6aa41RX+itT/V74Dm
5lSS5C3RW0T31vuyNj9KPJv1fK7GlmKSTBR9vN6N1HicxlPF/4noE0SPqCXJ
evGN1thZzxdovpPGazT21/wSyXaSnq/Vc1vpUpN+q/W7SPxzJfMA8VxZ8Aj/
YvE/nlv+z7XPu+I9UfRb4vlQz7s03q33i/Xrqvm/a26R6AGav1K6DC56/nw9
n6Ffe9E9tWZ/0d9CTtFXyianid6juT1a/xp9077OvEfrN1A8HYJmjS+0R1nv
d1aTZFlueR/W3Kii7TlKz//Q88foofd9Yl/W2Rsy75Lub4veKrpBPL/Krdf8
3HKdErL1Es/x2usp6fKR9pusPRo0d4/4eol+vmp+9DlX/D3lr4fE/3rBvsNv
vCM+Ptfz6ILjBZq5qWXrj+6btWZPfdtBe/XV2rs1N0RrnireJZpfr+eTNb9N
Yx/NH63vemh+mp4f0NgPXRLr1Jf4SRxH2KyX6PsldzNyap8h+k0Q/Vhq22Aj
/II+6LW+6piZUHQMIO/rRctfEl3SN+tEz8hN36jx56n3PVb05qp9v0XjiZr/
kNiXXn8uWJc1mr+pbBvMwi91tm0XjR9UHQM99d1uPde0/ibxzc5N36zx3tR+
7i96v+TZIv4Ren5B3/YR3Vvx/IvUNvmaeM7Tb5zoxZq7JXdOzdW4XM8tmh8m
+vHUNsE2w8r2Kz7FBi1hh4lhkxWi/6S93tPzyxrX6JtB4m/N7e9B4mkST0U6
N0q+Tblz/4aybbggd4zdl3tuesz/UWv117edU9uPdYjDjWU/k0fEFvFBbHQS
31iND2qfhqJ1Pz9x7DQEDzHJmsTltNhrkua7pF775orXHFL0WmDGtOAZHTQ+
mlJ2vO6JuOUZm08O+orEmDQ5aPLmS9FtNfYs2qbYc2bZvscfO8vmWab54bLH
saKXJ9avX+QAGDsz+PluZsQNeTM1ZEAn7AiuwjdD9J1aZ3/QyP+GxjdDnhkh
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
OR177o1+YJD8/j9zH2Lf
         "]], PolygonBox[CompressedData["
1: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
         "]]}]}, 
     {RGBColor[0.6065625, 0.516875, 0.4625], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmnmUVdWVxt+rN9177i2NgtoG7WigBKQ0MVEC3ShBZklwAlEowVAgbWlE
MRGIxIwmOK8o4JBREU3MAAqGQdCVuOJa2kQF1D+aMjGaRKWTtN1EhIja349v
u7r/uHXOO3effc7ZZw/f3reOnT3/nMvbKpXKn/SnpvZktVdVK5WH1D+mUamM
b1Uqp+r3SepPUP/javvrGav+SaI5Tu27ej+latoJQd+VVypD1X65rFQOapqe
37Nyv79d4w09N4hXU22hdoxoUvAeF/TwZm/w31+vVN7R06n+zKxSuVfrf1Lt
LD1r1B+q9iyttUv0PaIZ3TLPE9R/s/D4RZl5jI5xzvvXOPOc3P15mfcBTX/x
3arxDXq/LfP5OedIjQ9oeJ/IY4fmfYe5ej6nsYaeVRLoKZyj5fGfch61HWo3
q31D+1is/pniv16/v6Q9ri3Md53aKZq/q27aLYXv4DG132333B7tZ57mLtRe
TlS7QuMjtdZytRfr9xEanySaHXWPv1DzOao1y/Cq3P0FakdrjTfZQ9X7Zd/M
H6D2Ds6oZ3vSuUS/SPSviu/RkvXNurtq0N+puV/Su09o3hc0fo36n1b/q9xv
03NPqVq+yPnZ0voDf86wUjQdolkjmprG2vSsqJo38oP/GLVDWt7nKzWPDdTc
B8Rztvq/FM9BLdP8u8YHqz1ez+ltbgfH+KDojwp+nTH+onj+XHyOq3oN6DYj
B9H1qdkussL9dZn3PzBsABnxG10dGP2FIcOO6P8t6K5W/62q3zGGDAYEzR0x
t3/scVDsbaHkv0zrVtWepbGx2tNjFevdz6qWxbym9Ybzfkg0Nd39eVWfj3Mi
v8EhD85+mc4yUPTPZNbFT2tsk3jeX/gulukO76+Z9lGN/6pq+uHq31y3zqA7
11TdbtH4IYX5HK25L4jv43p3gnTyTv0epvf9NHa3+p3ic5fa77W5/4ToFmtv
h+qZqf4M/IHGJ6l/vHR/MHamfo/GD+IsVZ+Pc16DzrXc57wrxXeCxo5FLxrm
eUPF9o8f6MZuNH60+hs1/pmabbBTT7+6z8Z57pE+Xab38yXzK/TsE93larta
3t9K8Zir9mt130WzcL+h9raa75a77h96Qb9eWE4XZ/Z79aZ90cdy68Tf2WOy
Tr2tfqbx8eK1RPOOE+2Apn3o9yTTW7XWZaI5Jrc+rEj229BM1hoj1T9K/VFV
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
Th4HXj4k5v4v/7sLcA==
         "]], PolygonBox[CompressedData["
1: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
lGYQzSJ1Rc8W6nn10P8DZd/+/Q==
         "]]}]}, 
     {RGBColor[0.8021875, 0.5856250000000001, 0.3475], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFmgv41VPWx8//f87/nPO7HLmkFKGYXBoxHuTyMsa1FzGjMuNxKSTJPc1L
KTNJ0YWkq0tpFJVLg16TyyDkpRRFN7nrItNNudPk/X76Ls88z/k9e/322Xvt
vddee63vWvvX8uJrzr66vlAobCkWCvoV3qwrFG6qFAqHqeyaFwrfNRQKF6k8
X++JGo5Rm9NEb9LTQ/RYtR2jZ1apUNhJZUFthqg4R/0qqvtZ7S6LcrDqh9YK
hV5qc2hSKJyu9o+LzvQMTs3/w6xQWKqnlybzodrcrDaz1f86/feW6AV6GunZ
rKdHybwaq+0RKp8S/4vLhcLGer/315iHq5yt+o1qs0zvp4n+TP3aqH6a6EHi
c6ue1nr/TuM+q/L3icu2ep5RmxV6X6q+z+v/E1Su1nOu6nO9H6s2eyRue2y0
v0X828W4c+rc97Sgl+g5uuD2x+l5Q/TC3PNsJj5Dc7f5pFoorBKfZ1S/u55X
9b5JMu2s/y9U/WatZ43aNdbDBm4Qn1OYv/47SWVR7fqozSrxXK31rdIzVE9j
1Y8Tn11V7qK+16rvRvU9V/wfU/0+qh+hdl+JzxN6htTMv634jBD9iuhOoteq
zQDR3fXcWvacrhT9b+RZb/pz0Wv0jNbTpOI9ZKznQ7asfWfNoYvoVaI3qM1F
4tMVOWoejVXWa6xrY63nq81m6UkT1ZdUf0bFOsT7zNAj9vSKOvedIvq2mvmf
XmXDLPM6lcNUf4Pow8XnIa17cb3H7Vz1+x5q01K899Zzser3UrmnntvrLSf0
+yJ0LPN6zhafmv5fobE7aKguqenPxW94yWN9pfr5KgfFfj0vHk+XLK9t6jsx
ZDel4jY3qs0DogeL7klf8ZwlngvFc0G965HnU5rDx6L/oPq3JatprF/1U1W+
p/pWBfd7X/Qhou9S++l6H6myVZ1p2jyh91x72U9rn1dnntgB+K2od9tpms9U
dEnvL2n+/yhaJj+p7p7QiX4V2xBsCXXj9fxV9feq/ItKtmJuvWn2fbPGvV68
BtYsgwl6Buq/XdW/j8qv1WYY8ggZTtb/D+q5Te9LKn5nDh+LT1fx+YRzoPKp
kuczvGY+R6DDWt/kknkdoHU+o3YHqrw78xrPrHqvlsT46MDCmAP6uyBk/oL6
vVXye6o+u6muu3h0lzzGq+5J9f1Cff9Y9Jm5UWNUNXYfla+o7zsl8+V8zA99
6K7/ZqjffPGbUGe6uer31/zHYV8Sn+O5IbdZ4vNGye//FD2/ZF7dit579vRz
zekp1a3NvP//qLMOYB+xk731XtW4m0VfVbW+PBx9T613PXb0Cv03X3XHqfxT
1bb84KrP3FNx7n6lcl29zx9niTOFjTml6PNJm4WSQfui7VqHKLGZc7GtWsM8
lYlKnBFz/Tozz4s0VhvN8zn992uVR+qZK/oolasll/ZqU8ntD76tt138fcn7
wV70UHlZ0bb3NzpHs0UforKvZPuy6ENFj1K/vYuW/QCN10zlQaltedOi7fll
2AXRdyfek5bRfoLog4q28feJbhNj/TNz/X1qv0h9m4geLPrezGONFD1M9W1F
3y96dJ3n1lzlOD2vit69zvaHs4bNuVl9HxG9m+a2tOp1Lhb9ruizRL8r+jQ9
y9VmqOr+LJnPKtqOHS0+M0pe80D9t4d4t1PbX6Xmv6/KoeI/R/Thov8acvi7
6Pf0nKe+K1ROUX1P0Q9Ifqv03k30apU1rWWg2r+g/5cVPYdmBfNgbbtirzSH
fVV/YME+hjWy1rvqXXKWnkbu+m9malmM0dMEPUm8T8cklss9deY/XDyHxdqO
TF0/JLPPbxv7gv0aFbZxtvrPU/kXtTlTz8vqd1bmOXBmV4Nz9P6i6k9XeXNi
//Nx6vPdOvTqWa23kegBibEEWAQccnXi+f4veqX+28RndOa+3WPtZ6nNGtX3
U/0p9dYNzhp6j/63UblPvflzphaIV0n0DYnP6Nawya/XuR5bPU686nQu/qJ9
2VF70CD6ftXtXPW5mog9SN33KvG5LbOvvz1z/1lhH9ZrLesqttmvqf1JanOz
eJ5L26LxDOd1SNFY6LvE2OhblbuK16Psu/oNUJ+RorcltiXtw56AIe+Mvqz7
8Kj/pmwsSZ8d0CvV1VR21zySivUeLHpP0TZonuqaqf10vXcSXdXzU9nzuj34
gwUmFo0HOlaNW1tXrUcTwsZeoz6jkY94Haw9nS36EJU9xG9kyfuDDTg1cF1W
8VreAkOKR+d620ds/Tf1xjXbxPMcfIbqDxKvF8WzrconK7YdjI0velBPJ3CU
3juqnKv2B2SmW2Mf4n/0dUrJ55jx8A/vFT1/5DShaHy+g/r0VrvvJbdDVb5V
tM4vLJrmDFK+HfUnptbVHarW04W/tFH96Xp/O87goqg/TvM/Vs9ivc/Qmqaq
zWOiuyXex+aJ7cqyOPv4mXbha37QGEdKLtMlh8EV+33OzNia+Y6uea8mxH7t
EbyRIWsG0yLnS0qOEfCbWyvGiGsLtr2XxdnsVvaeMfZHkuf96I7G37/qs8yZ
vkx904r1dVnis7Q0cXwDf3TlzpLHBQPsrf/u0nuTzDLuXfS6dtD77XpvlNm3
9g47cB14Ep3KjJ2GBYZ5RPRw0SsKni/zxl+8mzuGWaxyWe41LFf5vp7uoj/I
HSex3+w1/eFzSeb4gP1mT88uW7bENaeWLdPGgSPBjRdmXgfyRbaHJcY94OLf
JPajxGpgNXDaOZnxKLj0vMz6w1jb7XrqPWmcea/7NVjmGzLbr/Uqr1Kb79Xn
ytTxEzQ24GXiO+I5zfEllZ3Fc33RdRuKxtKXpI53Lk4t114Nlu2JdY5b2Uvi
A9pQ92XmNpsyj8dY80W/VrX9f1J1P2We51Gq2yXzGftIsm2XGCuCGbumnsOY
quMG7Awxy/cRJxIvgi/BmcRBu0Ws+l2d/Tr+/c3EWAGccIB49q8Yt7DOYzL3
PVrlTWXbYfggC2KHY7DF+m+wyp1zY9bJYQv2z61X6Nd+ie3MpNSxHecRu4QN
3RS2tqBxfy77v2er3vexqbEI9recG6+9UHJMuHfZth47z9kiLuN84dfx73uq
74Hsr+rvF/1i1fNsJfq/M/Npr7ITchfdkTip5PgU/EysQnxxU+7xno964p+n
I5Y8PjP928xrwS+wnkGa2zOir6p3PgCefdV335LtI3YC278x/FRfzanAGU6t
t80ChxwSOPDWzBgIm3VL1XaueeCNfqGTxxWsnx2DzlVe0OAzCEaEJ1hpScl2
D16tw9c8LBnP1TrP0bznqfys6pwAeYXWqbHZfio/yMzz/cy2dffANu/o/QzV
L1LZQfzPLNlHf5Y5f/JpZqwGZjtCZRdiUz0fqd2XmvOmiuNI/Dd+fE5qH9Ul
/NSQqm3+b1PjEfIO5By6Bp/x6HzFfNOS8fXVgbGJF+AJHgELggnXp9alawP/
9848l17Mv2K+8BxXNWZYljqPxBrZ06aSywWS1du5x6Qv43ZW27qS80sNuX1y
SeWtqXNNA1VOFs8L1O76zHNJoz35J9qAHerV5rVYD36GvWQfyV0VYpxBqeun
qe3E1Lr1QGpdR+cnpI5LWke80yjsK/Q5ie0M9gbcCo5Fl5D3USXHbsRoZ5SM
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
         "]], PolygonBox[CompressedData["
1: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
19TOuZaehv1XYsdkxWbl2C2KJ1nvvQ/5ici/GvsuKuYuiN1TqLeYCSSKN+z5
KM93RHdFNbdq71fhP4n8HsW8tGV2g09g7aeUe4DxikfY+J7vCZDpC/9H1urA
H8ra/xWr9cbgjcefy/X+E9+1H+F3U/zIWvakckrWd1x3fQDyF+hth67lx0Ff
Bt4odu5WDaNa5nTs2vwuzuRHvuci/J+QcY5Wrv5X4relmvBz2Uocq3THdNcK
E/uimka1jXos9VrqKebofWDjSt1FPrEz9LrEsfxq4MLQd0h3Sc3cYPADrPVL
u4dQL9EJf7Zl/Gb1dlXjq9ZXDlmo2MyeRWnHyJXIDw+tWzW6avWT+Hhh2j6c
UH+Y2JZy3Hnk0zn3IqqxVWtXUc2edg2kWmgYMpfmuWeqC705di1wFHoT+LM5
93Y7WGsMvyb63ylwjlCu0B3TXSvH2nzwMlnj6knUmyyALsxzDztStTpr1XCv
tHTo7ak+yvMd6aTaKjavO/s/Rva12LFJMXYg/IaqkfRWoW8F/yF2rlmp7xUv
NK6eRL1JGWwuSLumUm31TOK3ppir2Fsbem2Bc45yT5ucc7dqluahY7pi+xn2
/ANeNeRXID8d+fbw6saO9aphVMsU5pwLV7P/L+y/FvlVBa6BVQu/HZqnGKVY
dX3oXKOeTL2ZagjVEqqptuH75NCxTWems9sUuldQTNoIvh/ok3YNdA37q2F/
TsY9p3rP85HfygB0LlPvHLu3aa8ZQ+Q3rreunnQVvvZGZjbyLwPXKv8oRhe4
B1UvqpmBZgeSqQ7vKcUg5U50DItsQ7aGq3+JrUO69OZK4lsUeZahGYVmFfJB
voxn7WHVn5F1KUYrVisGKhYWId8O+9fEjr2qQaqClw1tSzXFb7VFzr3fRHQ8
Bf5t5F5Zd/Ab9dqJY4FqLtVeG6HbZdyTqjctihzbNmBzkuSztq2YtiRyDFIs
6sKeTxLndOV2zUxm6nti1yZ6Uw/GnpFoVqKaowB/GkXuVUqjvyH40Ni1qmpu
1d5NI7819Wzq3RQzFTtD/oNSir/IP5fyf1wdfduznpUoRyhXqGZU7fge0AY8
FXrWoBixEn8nR86Fm3WfwM+Hfuvq6c+Bl0V/E+SL0FcevFxsXDMFzRYUYxVr
xyrfxD4jndUY6FKxZ0aaHc2Frgn9+9C80cBF0Isj12bKcevUKyauBVXjqdZT
DlAu0MypTuieRb2LYqBiod683r5y6PbYb1BvcZp6TM6jZGxbevN6+18nrn1U
s6h2+Sn0XeuJvTbYezBxb7sYn7uDT2T/gjzXPJNi17yqfVUjFoM/gM5NBe4p
uoI3yPoslcPS7L82a92K8bsUm1Wj57tGTmL3uOp1ZaM/+JHEtbnOvBJ0JnGt
qh6qQLkm8Vlr5nUg8QxGsxjF4BqJe2L1xophtdQvJr6b6lnUu2iGolmKYsQ+
9C+LfPfqsPZm5JmfZn/q6dpn3TOqd9Sb2JB4JqDZgGJeVehtWc8ilPO3RJ4h
aJagnFJZumPX8prZaXanHl69vGaQmkVqZqPZjWJidXj7E/e66hkC8D2JZ1eq
EVQraCaj2Yxy5P0596zqXVVjtlD/G/ttqMZSrfUlsCTlGvOr2DMGzRo00/ku
dAxXLFcNtVD5K/EsTDFsXuKco9yjnnsXvrYN/ZbuYa06+NLIZ6eaV7Wvatzf
al1kloaWkaxmIu/pviSeJSrHKdf1i93LKqYeit0DqhdUTrst9oxJsybNWFvF
rolVG+sOXQBdK/bb0syuCrxfQsc69fDq5TXj0KxDM4q7wafHng0qZih27I1c
++kO6y4/F3s2qZ7jYdWLWb8F1dQ9NG+LXHtrhlsUu8ZRraOe41voXwGQZvWz

         "]]}]}, 
     {RGBColor[0.915625, 0.6590625, 0.33843749999999995`], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
P407WRd29D9VT6Ni
         "]], PolygonBox[CompressedData["
1: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
pM4N+mc5DH4zca+qHKxc/D81fiCm
         "]]}]}, 
     {RGBColor[0.946875, 0.7371875, 0.4353125], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFV21MlmUUfnjfl3fPcz8PP2gLLHkFFIyXmptYWwQs15ZpUAHmjzCzdP0I
lWJN2HLmR9ps+dlqiTqdhZZ9rGWpDSiz+d1ca6aT2mxpKpUmItqA1K7L67h+
PDvnPve57/t8n/MUznixvinmeV5hhufFAQeTnjeAbx4WBaHnLQK90/e8x8HU
ltB6BOgLAfOc5+0PPO9Z8B4AzMZXDXwnYHEk/iac/QnrWaAfA7wTcF1C903C
9w7wH/HuCeADwLfg3rngmZvpeV+CvhR4EvgXoF8Ez3zg5YCLIUMv+JO4/znw
XAGOJ70B7F0Fvgn8y0PR3wS8D98boPWCKQ3ax/gawFsJegrnroPeAX2qQP/G
aU16J/AD+B4G/V7QDgZ6bxdofTjfmJQe17F+hXqBJw/7s0F/FPTbgS+EzB3A
/8TZBVj/BTga7y6GPF2Q/wC+fNBXgz4VfNtwzzLsNSeFn4Qcxdirx95uwFrA
9aAfB70d51pwfxq0Yty5AfSiQPsbjOdsJHnOAF4NZdsrgMdjsuFKvPUrzryM
u04G8gl1oo9po/6Y5KEfYnH5Yju+UXHZiPfwjpwM+Ze+pW4XcFcu4CdOvG/H
xJ9NmfGVYl0DmXLw3hqnOJqOD0vv/pjigDFwFLLXxWXDjRmyP319DGdOYP07
7LcqQ2f5XomTLAt8yU9/0Pf/xMRHnk/BswZwD3jWAy/Ao+uceJ6Ji28V9soA
X4KtpoSK0zzADuxfAP8K7NVhvQ/08eAdlQX5IGsR4BwImAG8KZLclJ98JYA3
sN6Bs+ewNwc8PYAlgfx9Efi4UH4fGypWqQPl/wzrQ4Dd4G3kfcArcedOyJ0C
vsSXbWnXOVj/jLuex53dkd4nXom9IfC3YH8n+AeZA5Yv9AF90Z4l+SYAH+MJ
PmL4ISf8B196PGQ5S98yd+jfkaFynzVgIt5sBr4V9LST7Uqd3qtISO6ZvuL4
NtDP+PIpfUs9eJa6MOdTCcUk5ab81ZHicDzoJcZD+bl3GOfTgH2w1Xe+fE2f
b8OXD/x10J7wVV96wfMe6CU4+75TTjJ+24Dv9hX7ZdBpGHiXJPQOayJrYcrp
Lt45NlIelCYUf+1O/tsCuNZJ/ncBO3HPGIufr5zssAw2/9yXrv1Oa9JrfPmD
eq12yiXG72S8dTpS/TkF+DXoI0BfCv677Y17AIeHyud8wGmgnQF/u+XupqT8
djZQvS8Ez0TGEHwVB8yNhJNWFKqm3BWqBuy1mrw30L0fOd19NqkzvwXK339B
H52lt4oBh2LiIw9jkr2GeUE4aPhBp5j73kmuAYtb1mC+y5wcFwkyR+m3tZnK
k8dAbwV9F+hbnXwxDLSn8fWDZyrgbqeYqYIud+D+tzJVs7p95VdLoFo+Oam6
Spl5lnabzcID+qxI8sSSsgNz4Je4Yu5aqJpfQVtGqtvncOcpfK3gOW3392T+
Lyuhw7nrMd3PuGbv6LHazv7JnGe+08a04TSrtaxdjNcq6HWEPIBXnHLnMuDl
TPVXyr/XaniZ4dSB8vO+IePhm3ybMrEnUy/qN8FXDWQtnBJXrWcvYs1jHWEs
1TjxVzu9wxrFt1gnjtg9zaF0ORpIN9Ysxn0yUL3oiiQHZWZe8Q2+RR3PWR9k
PzyfKZmZc1WQ7TWsb4SqS3yHvthjvqbP2dOYw6whS62PsW7Qjnwv397cYjjr
GXViXj0VyY4NgA/irZXAXaQew1z/wClGGU+LrCbRh6yHrda7GNusfyusV1Je
8vPcpUizAWcE2qzRfMQYpH1oJ9aeHKs/nF/YlxnztXHNRuyZFwPptNzX/LHA
eh9zkfusjYwL1lbWZM5wtMdwpzwosNmsNlTusTZUYO8w8AcAs518xVrVYnGS
tjmHOjJm2PdYX6h/p+nLmsWaz3tu1SnCcqfcZY9uMPvxfdqQPZDzEOcfzn0p
073EeiLr8owszQczs6QrdWaMbgzUR9hP6iLFSj3gh1YTWBsYs5RphOUv45N+
v2azHGe6lNVP1lH2EsbUpUC9lr3rb+Blkc4y/9rNHrQR9eZslGMzC2cXnhkZ
15zKNX041XThLMCZkjr8gXvnM/8D1YTtFqvsy4zvtPUZxn629egdFvM3/WD5
O91mGc5UfI/vpkw2zjq5Nk/cnCt8yfNqXDJxLqiw2YAzNX1HPAx1P+sZ467c
4oq1kLIyr5gfzDXmXGOg/ss+zJrwgtUF9pPaW7NiQvJQricjyb0vkC36zKe8
r9zm0nmWN4yTm3FvMuy3WZ0z+4D5N2X5QPt965TTg5bXm51szz7P/5I2i/9R
TnnD/4Y8iyuuK33lMee+89b72APZz4+b/KyfjJ+01SbWKPqoy/4vOuzfYZLp
NWDzbaXZjjakrP8BUmO69Q==
         "]], PolygonBox[CompressedData["
1:eJwllmtolmUYx5/3fXzfntP7YUK50rncpm0WglOodCORtIOzdBZ0PkyEPMy5
bJMKS0tRy8QO4qmUah3MPkVYObMMZlpEhCVWUJRlRdpmTkNN6/fn/+GC/3Vf
x/u+Ds8zrKWteX4+CIKnoAHQ/CgINgI2QdUpfBYEuWIQvJMLgjngJuTjkTVA
HyRBMASdr7BbB18Bfo2zOvAq9KvBN2HzCPwi+KngL7G/Dn4ytA/5JPjHwiDo
J4mF4GH4eBR+KfqXgm/DpgvcXwiCu8AvxcQm3iHOtoD/RWcntkuQnwNPxMdz
4IvxsRL5LmyuJ//XsXkbfnbsez6r+4CnkMP36J7msITtcc7qcj5rQjYYWgJf
gXwD+PPEuUvnM/CrUC38SviXwQOhLmxb4cvAV0NDpcvZePD6xL4Wk+M44j0I
/UA+i5H/QeyNyJ/Q3dHZDO5P7Ksd/iT4E2gi+D/uvAD9w9AibHvw0YCvKdy3
E/2L0GkCf6z84CfA7wGPS5zLKfgU/Svgu+EHoXMMX93KD1+NyHclrrFqfYZ4
85D/BVXk3APvI/sT/vHQPTAZf2sTx14GxdSjmRyOctc12CyFHws/CVk9/Bjw
aKgS/AU+6sF3QCcKrrlq35BYpjvr7uWcjQSXEW8Q+A3Fy/nsTXCSutf0Jim4
MfXddacG8KbEb6seUa/sTnxX1ehDcF/m3tWdjoMrEveiZqIK++3wowb4zS4H
d3D/UYF7ej98GDm3I/TcwyXqhM2TxGrg/c6D5+IzQHYevi32TGm2dDYPPByb
reBq/O+TL6iI/XL4myP7kK9Z6HyH/i/QjaoN/BHwr5nxEPRX478NPl/0m+8l
vx3qeWTvErIFf1XEeyHvmCNKzkm5yUa2s+D/hm+F/w3+Afh/4I/hrxB5ZjW7
2+HH6n7IT8NXEeN5cIzNDfBzsD+cuYfUS1t0R+KtwP5s3j0yHfnPmXUVU7G/
zXzX6fgbDL8WqgTrGZ8BP03Mk8S+X+8F3wntz7kmqs030NzQO0O741PovtA7
QLtAO0677hLOVsWeSc1mL/Fng+tTz/Y2dMaA30scSzOwA/wQNvnQNVKtroQ6
C94BM7UrI++mC+GXo/sWNneH7vlt4Dsz7za9gd5CNVFtOjg7lXonaTcdQj41
8sxqdvXGeuvd0EH0X+RsuN4itW0HMX7SfkyMtRPOaj6It6bgmqg22iHaJbXo
rAcvg8rAM3jzHuQ1JddKPaJeuZb4Gwreea8k7nH1uu50FNvfM/eKelK9eZXe
I7RP+dYb661vhfaAe9FpL3oHahdqZ2h3lCNfoXzwf6bob8I0ZDPhDxS987X7
R5LDztA7oBb8ETbNeb+J3mZC5N0oH/J1IvEu1TehiLwHujd0T+wF18R+y81Q
Df77Ys+edmgveHTqXlDOtfCXpdbVzh6ReiY0G8qpLvEMa5b1DW3N/E3St0k7
oTHyHXVX1eSayDVWrbUDb9fswB/Me+do9xzQzgjd01/HnnHNumqi2qhn1bvT
OOuOXUPVUt/gc4l7UL2oHlWvVqb+dusbNxR8AWf3hJ5xzbp2tnZ3n+4ILkbG
ykm5aQY1i5rB1cgXpN7tyrEdXK6cQs+IZkUzrFlWDVtK/ibr27yQsx/BMzJ/
i1STWzLvFO0W/VN0kf//0CsU0w==
         "]]}]}, 
     {RGBColor[0.978125, 0.8153125, 0.5321874999999999], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lkmMVVUQhi/9Xvd77w6o0NKtzLIRhYXDohta0IVuBCEm4AZcmCiDCkpD
gwhJQzCADfLaZhQXRjAOkXZhIBrUMGlCcGU0GAiNYmLCkAgJCKhE/y9/ubip
c+rUqVPDX1V37HOLn17UkCRJeVCSlERXalNvSpI5ooeqSbJJ/Bl5kizT+ned
/6V1S5Ek2yRzl+gM8SeKf4foEO17xW8WXar9OfGvSX6p9ufEX1FYDvmltSS5
UU6S6/oGxx5+q85PlMx/T29PEL2or0frS7G+XXIvSl7qkkzyHRXrel8yr4g/
WvwjaZJ0S893Zfv0koRPy4aFoivEPyp+p/iXJL9G+9fEbxXvDX2TxT8o/lHp
WVD1/e3iPynaFb7gU6++n7WeJ/qqvgGtF4ser9qW2fL9sOx4THcPiZ4qeb1n
kO3Dzg7RLslf0bqiu/2S2afvB+3HyYbpevO89IzMbMMI0faKY0FusA87J1Wd
t9cbnLsurZ9tcNz6JP+2vjXiLSks0ybdPdova7C//Trfpf016Vqt/a9av6m7
YwvzRopOlq3HZVt7avl9+nZKrrVwrsn5rOARq/niLxSdQE60nqv1ePJcdl6x
rbFq3M2v+U1iCx536nyUvmnadErmrHiPV+0T+eIuOWNdqvo+eipVYwJsTEr9
ztHGJPleh8sL+9ZeMwY6w3fyfkrvHtOdDaLrmxx3/CD3+LK/0fn9JbHs6ZAn
fuzR83Lh/UPSn2XGUip6WPufJLtR9ImqcXlR6wvSubvRcd6guG2NnH1a9nu8
lUnnJvGLwpg9EritRz4XNDifyJP3QZJbK/6/wky36JSyZeYFVhcUrgHsX1Q4
xlsaHWdqZXvUy9+6v1oyN3Of1xsdE97Bvjlh5wHt95eMJewCx7xzssm55x73
fxR/RGGMjRH9U3qXa31V9EJuuSw3jsHzDuXuq9T2HxRtyR2rVtGJNfciehL6
yBPYejB3rh8QnV0xFndp/26jcUJst4Qf+Ls7zuATj1NRD7dFzIk9GK8HDkYp
lztkz2jRMZkxOlZ0XeG8PCp71sm2/bKtjZqW7s+j3onNkcDzgYgh+b2VWv7b
3HVCzADvzMzy6Aav4PbuwtjCxsGFa5jc31m4rojB8+Q04ky8+6JP0i/HZcbh
Itm2I/ok/ZKeQ5zA+fDo7S3R56hJ3h4WvX1I9DlwwNtgeWX0nGrh+mkqjLkp
0cNf0P4dyQ/LXQPYgC0PZ65r6ntAcT5TcY9cHG90Fs4jd/ENip30xq1hF7Vz
r2L4he7dJ/plyTYTxo0V1xW9ECyvanJffib3vNis96/n7qPMuskVy2Azd8En
fa254jziU1voo/+Acewlv1cDzzdy23B/2bZ9lHr9oeh0nZ2X/U/l5l2I2geT
1CE10ltxbWMHvM9K5reU3aeOhQz+UAPYgk34wMzEB+znPmv8hXbEen3U6bTw
pT3udlTdE3+rebbAZ9aOS13fH4hekd1LdP9y7hnNLBgc/bA15ia4XhL/D+Bo
a8QQui1yRg77Y8ZdjFnATGc2UjPEk36yKeoRe3uixw6tuG6pWfw9ETbgF9ij
/1Cj6AfPtcL1zizlHeYAb9Ej10QMh8aMY9ZR670xR//QnXWSv1xz/ruj3zZH
790Ts3Vt9Drs7Qkb0FGPeQoewQS53psa82AfzMIHq+NTzy/m4c3ovbdy9wX6
A32FHJJL/O7IbNMjov/kzi3/HXnh9/mnIIdtkUdiuD5sI/70RuIDZsEQGJiZ
O/fdmWOGPDi5JzMOR6aum46woSnqPS1cC/xjEAfi0Rcxog/1xz8B530hg3+9
gXPwzppcIHMyYkutgCuwT+3Pjn7O+UD0iixmR577Dfo1/Qgf8GVzYR83Rt3+
/x55pP7x563CtvL2npjFyIPbeugkj9D+WA+NeU1OoRtCHrvO6hsVc/Bs+EO8
sX9uzB3uc5ccNse75Il89YROZMD5ztT/hMNT60Mv+j9O/S/1SWr76xHDr7Wf
Kv43qWMyK97tCjvRiZ6BsI27zRGTVYFxesiZkOGtqVFr8Ik7Z9TGf1MOoHQ=

         "]], PolygonBox[CompressedData["
1:eJwllEtIlGEUhs84Mzbzz/dbUOmUOmoRdHNR0KIcKzcVlGlFtalNUHSdyjCF
kCwygqbQRWmXRUR3Khch3a9KELWKgiioMBCchHRhSaX1HA/Mgffcz3++90zJ
pt2rU1kisgYJIZc9kY6gyBfwJfAzpALHR2zpiEg5+htwZ1hkrhOZiX4PnZ/M
AM9x5ptNzlHin2IbCFuN5+B6X6Q7W6SBpnXgXuIrwc3EZMA+tjT+Aeo58ANy
LgREFpL/CHwVmQW+T8OD1P9HzmHie4gvjYpsI+cD+nZqbgVPQk6hd+OPgwed
4TpsP8HLqHGe3ueQPPRiYs7g20h+EXg+/V7R6zXSRGw/MTX4bzLDvBgzOpv9
HTUr8E8gpwX/IPp4cCH57eQmiH+Ifxrx7WGzTSFffJtVvyEA3uxb77PEbAGP
EN+I7w75SeJ/O/vWBmx/wB4xx7Jth1HfemivNqSY+Cf0XxSyHeouy2NWS99E
3yZFzifya8nfBb6CLRO2HV8Dr6PHRXKH0Nc744By4Qjyg32vol4nvnr0JL4e
bCuo9QJbNb4RauSBO5h52LOd6e6UY1PR75ITR++lZyX1F0csV2tq7e/UayR2
AzUz4CD+Q0F7M327IWdvmWbGX+AuYo4HLKYP/C1qs5WR3w3ewTd2iX3zTnAz
khDjTItvnFXuliLXmW8Ptq/4P+PfC65F9F6Uw/vB/VHbRSm2KnKT5BSJ3Yje
ygli+qg1Tu8L/0nfdpmj/EZfyze+DNk3LkEf4xv39U0j4CL8rfiX0zQfXICc
DlmO5hb6xjXlbAI82bfbUs7nKx88ux3lkHIpRY/3YhxULuY649pbbEvxTSTn
QJZxOBe8z7dvV1sNOMc3ruiNjgXf8GxXunPdfQH67aDNnGC+YWdcVQ79dXaz
erv6nzGd2AXe6AmM3lgZuMrZW+rOqpXf1GgKGUeUK/qG+pZqi8XsJvU2leOP
PduR7kp3VAguidktKCeVmyudcU05qdzMR24FbWadPe7sv0BvQG+hFekUi2nz
jIPKRf0PGCD2Pz7DsjQ=
         "]]}]}, 
     {RGBColor[1., 0.9, 0.65625], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNVFtLlVEQ3eczv3PUb2dSSRe6/QCzTOi5px6LHrq+pYVhnW5mBmFgvZzg
WBYVlP8h/0DlwUxRsIcoCIoSA6leIkjDilqrtUThDDP7O7Nn1qyZ2duOnz1Q
TEIINyBVkAoO7ZA2yDF86IWex/e6XAh9sBdgN+dD2A4ZxvkgfJ5CV+fk+wyS
wr4K3Q+pgT2YhvAw1bkQQyjBzkOPJrK7oPcWFKcxC+F+qjiMV8D9VZDvyHsE
ufrxX7fjlp23IxG2POz6KJ+V0K3AuAsyhf9eJtIJfCagJxPdYw0V11vxeSao
9gepMGyOwr8pipuKfVgPvxPHxij/DVH4Ro2dmHkmfmJugMwF5Z8wn33GQ5vc
rcyJc/pHyDTsImK/hjxx3AzyCt/vmFfyfRS57qayc8BxHXYg366ftRNX1zJe
C47zG7xfg/8f6F+QXtgLmfr7JlVvmKds7hc5Zaz6nLkPwsv/2ZeRRHHI88dU
+MYS1cc68QtNNSF04tvfTD1v8/zM43wFd35CN0bVtRZ6C+QR7K1RvNU5d4Pz
TpvDWsc/XCUeOj0fdcbZgrnYmVcPTkbVeAI6g5Rhx6j6Sq5xdRTXa6BPQ94x
ZhTmnlS42ZOSeV4XNcfrzX9mrmtwvonvtc7DfnS7d+wbZ+M/l5BZ2IdQ/7dq
9AF6P+Qr7H2ZdpD2LdwZgr0Dcs9YS+4vd5R+9FmB/WqCXUbePbAHcDdDnKyg
u/1RnDAX4yzyRQzM89hxyt559pe+Q877PBHXs57JQc/luN8RzjP3segZ7jZG
7sWXTN8/Z+KxPVnqYbt3jfmbjGHS+8654sxOLNtl1kx/3qv1nL1PtYcvmBd1
zuB8Cfo85APsc1F7nnrvWAfrZy3s1ZR5fZvqP9bKWIxJ/CPOT746ovxOQV+I
mvuL0AOQ3cB2OwovZ4/7fiYKXzFq3oe9A3y3yBe54ryTc3I/l2nefnguWvJL
8VrcC/ar2e/zlGNxJlnTiHFeRr5PiNNjzR6N+x2p8RvFnrT6/eTbw5khnjHP
K33+AdvfwvQ=
         "]], PolygonBox[CompressedData["
1:eJwlkktL1VEUxXf35l9v92yDHlqmpTQKEoSgx6cwGljZrDBfqVS3m4FY0Kjg
ChYkaN8hP0EJPW3gLEFQDHSiThxoahb1W+zBgrX23ufsdfbZLbeHrg3mzOwi
OAi63Gw+M+vIm50rmD2qMftIQT9oRXcks80qs+/oWXJr6EHq59Bnyc8Qm4E/
IbZDrsR939Ar6DL8L7Gn8B5ieyl6qNcUsTPkG0GF3CT6NHybmmH4B2Il7m4h
9hb9ChyFb5G/k4uaXyk8yMtLdIF8L1iAfyLWDf9NzWgWb9Lb5EFeFNtP0UO9
3qBPUD8EvqKX0ffhZfKf0RV0Qg+D1SzeqLf2gS/wRWL34E0eb5FneX8IfmZx
p+7+l2K2z4kdQJ/H/418eO7x8Czvl6rNxjUb0Ap/B54VzcbQbfBpUEFf5nxn
Pno8IHcBfRO9hB5AH/OY3Qh3HvG4Q3dt8KdX8dKegusP9Zfu8dYyugg/5DHb
Ejrz6Kne2onrnE1gHP6DmiK8gZoJ+C08XCkExDWzx+RqwVgWHuVVZ3RWO7Wu
3fLwrplqtnXE3udiR++i68FoLnqc8thJ7aZ27E8Kz/KuHofhuyl2Uzuj3dEM
NIvXxOo83qS3vUDXwI975DRTzdY8/kp/pL+q9qjVTmg3TnrsjjzJW7PHbmun
tdv/AYTBcgU=
         "]]}]}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{False, False}, {False, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.964665014676282*^9, {3.9646650869665956`*^9, 3.964665108265971*^9}, {
   3.9646651786660557`*^9, 3.9646651990234165`*^9}, 3.964665250056817*^9, {
   3.96466530208712*^9, 3.964665334297651*^9}, 3.964831285247879*^9, 
   3.964831569169511*^9, 3.964831805875045*^9, 3.964834842980039*^9, 
   3.964855501190892*^9, 3.9648561721520705`*^9, 3.964917344826539*^9, 
   3.9650297007954865`*^9, 3.9650311369476123`*^9, 3.9650904170126514`*^9, 
   3.965091315752821*^9, 3.96509666457802*^9, 3.9651142705228977`*^9, 
   3.9651173072224298`*^9, 3.965123824648073*^9, 3.965179720066498*^9, 
   3.9652169031914177`*^9, 3.9652194410234995`*^9, 3.9652202500795956`*^9, 
   3.965221668481392*^9, 3.9652468253227816`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"06cc30a3-7e91-496c-b688-e9e0329f71ed"]
}, Open  ]],

Cell[TextData[{
 "This is the contour representation of the effective 2D potential of the \
coupled oscillator system, for typical values of \[Omega]\[CloseCurlyQuote]/\
\[Omega]  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "/", 
    SuperscriptBox["\[Omega]", "2"]}], TraditionalForm]],ExpressionUUID->
  "0e3a5a47-2c22-4eb8-a981-3d82c91aa4a5"],
 ", when the system is in the uncoupled phase."
}], "Text",
 CellChangeTimes->{{3.965077097838771*^9, 
  3.965077126206442*^9}},ExpressionUUID->"49922bc2-4dd7-4511-b2ba-\
7c7f3e060276"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"V", "[", 
     RowBox[{"x1", ",", "x2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x1", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x2", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", "None"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(x\), \(1\)]\)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(x\), \(2\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"{", "Black", "}"}]}], ",", 
    RowBox[{"FrameTicks", "->", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.964665009940346*^9, {3.964727575431472*^9, 3.9647275840849037`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"f900f1c1-1346-4f94-851b-5a9fb3ed4ab4"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
l+/AD2D9HyraI/d6vxgw/ONeO39eJM4n4MQ8b65vz7485B/9AAYf/AP77yhP
tN+5ng/gx/i4V0/PRTAuYOQFusNflWPopnSFP4n/25Djxw896QdYz4FCP+i1
OPZcbC4b8XD3Kx8Nztf7c8/zXm0/YEuQFzw7PTL4hbFFXk7v2DCx3Ip9wTyj
zuLrqv7atshW+yK77vmVkv+vtcmCFlMbX1ZkDx5udc/VW4N9XRe7cg9Hi/d5
7qPawX6KL68r/s6Zn673sOfHs5szts8K4vyjrl+b5cqT/i/15tfS72zx5gl7
gRunrwffzt+WWDj76Rx79My3b6m7L5gX0/8FDq/gnoreHXa2qZpjOzk6+PYH
TvTPOvj6jqTz7+03FY2aNSnDtnHPpP/165liv+u184Dt5p5J59lz3Lh8f8fd
d2xlxxcfN2dd9NSdtZoHecboH5Ub3ZkR5N0Yf9n2yzMG9lnj45SFeyMjaq6b
7/1ISVdvOjq6+HnLXCcXHu7xQJMNT9UN8pLwp1ujP1JWD17v+XqoyaJnL6oc
7MN5x9HP+4VcN05fH+eXyXbveT7U2Rcbp4f5XqGTG0+37m5cvv9MRxdTf/Ip
5hflWJ67Rk+fc8/SX82vX7XYP752jun48HsHvl2ZZxrXLLf80auy/JPy0qP7
p7zR6aQp656WJ+X4t/YLZnbstiE479nOwT4OfbX2rQPGzi20P9h9tZ/cEKyH
gv9NDZ89f8DcoB/6/enCcUsX9ki3FRfNLX/zC1E7ekLpmeeYY7b0qlrZpU7B
lNOOctp9Nea5SZ07B+uo8XrzpKv3T8r9/wS490za8dfWHqyzz7a5re3idcWi
dv8HqWV7Hs4zOa+Uu+bMR/aam1y5me/amRtWHlkze9MS+9dNp9VfNf2k3dRs
zte/z9lo+g/f+/UdvQvt592WnvbY+s1m+g1jh6767aQt8/Ocmn9d8509MWjH
2Wmls+1zvc7/+YqiU3HJ6iNfNqq/z05z7cw37j3fL9/hPfrJdbBZsDoGm9vn
f9PnzSEnzcxd9/csaJZm/nTvm4vc+35cjJNxMU76od+3LyvTvEXfvebb49+e
8dShPNPSjdOMcOP242TcfJdx8F3GMaRlz02TFmfbUr1mPbKwZJ5/Ul7aweZx
B/sn5di1q+ZMHjOkZq7342P6Xzj8l7OiNi7PNi7PdsG7/56Y9+pxO+TzHq/d
XiJqr663Ztsrh1aaVp2+qrz9X0FeceT2AykX/lJkLxs2+Jsnahw1L587aNWb
ywvsw0MvHfPXOfvNhW/dOr/tkqh9emW1r6eeEZwrGDcuY+Wj52eZTTXPqVIy
ctLmfVSrUtb6PFPryLymLR4+aX/8q3yj5RuPm2N1p9561iN5du7fs/qV+DHP
fOWetrprZ/Ldez6v/X6Vnx8ufCrXzqv91tNnvPanOe3IgIy9jYP1zj01x49t
2CXP3vhW8cjWCcF6Z/YbDW+4+txg3+WsTndUm7I93ax7Z2/LXY9m20NuHGa1
G5fd4MZtJjg87NORcs3nbN9jxlzeaE/fs4N7JMaNPdp607lZ9ry1BY0iq4P1
0tP/tWTrS4uDfZdr3HfMHPddO8rR0TRzdLUT5v/81JQHgvv6cntc1r1rtU3m
nC47027fcNQ2f6nXxJV3HDMR9/T+8OCi8j2PLTpqh05f26bYjf/X/Xy//nj+
iePB/Xx1HJ/MYMc3+6/o2BNN6u01tdzTvuTwMqMcnnbnzL9njr45eb31sxKf
RKrfu9eOcHLh60eXmPnU8A2FSffnvX5s0Nhyp+KMv6+p+Ot7RUWejxUcXqbM
AzE8bdHhGB/NcsdX29LJoenh5NIm+ongXq9Nd5W7pt+hOT4OTsu+NrNPlwV2
baNu/aNpwfonco2cIzfIEXSG7vAZvkMn6Jb629Z5vbvkJd0nN8Hha3Y4fH08
hp6gN+gRegW94vT1eocewnfkALpBR/zt5BMLaw9+K91sdvz380/0EL1E7tED
9BC9RA6QC/QWPcbe/HH4wZYbh2abM5y8+/kJeoxeI/foAXqG3sF35GDo+Cmz
5373pZ8nYAewC/ixhwe+d36H3VETdfrt87HoLXqM3KMH6B16iJwhd/7/c51e
Bues3pp9X4vDJ83CvXtfqX44uLcobv+S7p1ET5AD5IJ45TsnR3b6iNLppUfu
sjc8eOOUD17Ks2Od3fZx/TBnp80MZ7cNdl3XQ3kPO4/dx85j95c1ue+0vR3X
2cYXb7inxds5NmdcyuG0Z4O8OnqK3hIn6r1F652e2fmOHkn3be1xdsTLIXJZ
+7d/H1//eKGZMGt/j7mXFNhRM8p90bhP8v1YpZsU1Zk1ONfudHYuaf15uLN7
Xu6QQ+zE3JYDHjyWfdx+3zVmJ5LWmzsUdBu07vFMO9rZ8aT14xrOrnu5Qs6i
97xcYsHdwTrk387vJK0H3+78UHA/S1xu8hy9ra7Plu8W69eWdHgnrc++6+jk
8djj9MS2c3h4e/fmDx890/e7YF9B7XFTvyzbKJq0XgvdwfvC00tetvfGZZ4u
vL/7oxcjHy9LT7r3CzrAl9z600uUf2yb5xt8zNzSMVp1arB++szybWcW/hHs
e0ZOkJuSTs+S7nFDzhg/fn7r3fsPb3oh2IeMXPj/BXV2IuleYeIC6Ikfx4+t
Kbrh1QGr0j1f6K9x5Xe2tL18WVL+Bj4gN8jRRmcnk+79JU6Anvhx7MMxRzdT
vkGMrknracjJWDdf9vMi6I5eI4fI0XvOTyTd40vcgP0iDoAeFzg58nKo90G9
5uTO2ynsFnm0ZreUemvhk1H79reRYbetSrf5fctUW/9M1JfT7tM7R1X/YXCG
nRF7Rm1rZxfNW85O+rzWg4vatbw0Zb8pPvKDX5s0C9ajxjm7Yuo4O2OxM9gd
ymlH3vYqNw4z033ffOK+7+d3jQtvHvHTsnzb7PGCcxaWDO4ZYN6GH7/Rwd4f
XPHjk0dH3hDkY690sM9TUU476AKd/P1zLV67c1eN4+b85pvvG9o0uA8I/WWe
93OzCnMG3bnePjb817zPryuyvVvNGf9Tv832w54VU244Zc+XTx4z4Oemv5sK
71XMbbi4yH5fZWTq8MZTTeOl96/qfzDfkgcAn3I3z+21suB3c/DlVWd/elXU
3r1pXMq7DQ+Y1pUqrszcWmgffqzuzasyT80HTnb7umNWoa1Sv3Nm60q7zNSF
g8ut+D3fnrj7iXfnzcsw/Zo2Lvtq3yKfJ0+//ox90/YX2Scu/PuGJ4bnmCUL
S71a5oMiW7vZ8K6LnsowKT9N/fDmqSfsHx/mtB+Rf9g021VzYKdpuTYxj1As
Lbt5td21SuSbGs9/XqbfG0W25uKu34wdmmPalDy0df0Z+Za8Au23/FGpz+Yj
BXLerMCMu6z3F+9UKrQv7K1Yfme9fDPaPe2i7kcmN6q6wzboOHp+v+xcu7He
q79eN3O7bTr6oysqHMy1P3ZpXrR4/w5zR6nOKVdfnGPLNhrw+86LcsxZ7mnz
0qbVyb/suClwT3u9G5ep68Zp0xzeZpijg727eu1dc7p8ae5tNnzCs7cet6O2
nHh/wK+Lzb3vTLum5/pMa8eVmnL3nF9Mwy9yP1jRP8Pm3L7s4ftmHzTTH83q
OuxAhu3r6GYudHS0lzu6ma2OjvZhxwdz0vHF3j/tpq/aPb7TzLnykcLNbx+0
H7h+TKHr17Z0fDbdHd9tBcdnM8Xx3b7j+GyqO757OkE36ATdZrrvmD7uu7aj
o5v5zdHRyy1yjNwix8QtxDH1HR3MbkcXe8jJqSnt5Nae6eTcrHFybxs5OTdH
zo7JvUXu0QP0Aj2BD54vcT7Al66u3kx39babqzeTXL1Fb9Aj+AYfBzt8zfcO
X/O+w9e0d/h6PUKv0Dv0EL1DD5FD5BK+wucLHX/M544/Js4fE+ePz7c3KDOu
3Ynbdni9RY/RQ/QSPUVvkUPkEj7Dd/QcvUdP0Vv0BL1Bj9Ar5BI5he/IAXyA
L/ABvmAnsBvoOXqPXqKn6A16hF6hZ8gtcjzbyaW52MmppzN0h87QnTy53qNx
sfM33k5ht7BT2K08h4et7vDydgS7gp6j9+gpeoteo+foNXqOHqFX6A16hF6h
Z5rnx2/iR7c5PKze+zLG4WXI2+M/ybsDEyccdf7DkNemHj1Cr9Aj9Mo4ufbr
eDvebP34RS9Ek+6roZxxMm7Gybg/WTanTd0OUZt+5x8TvhqUaWfc13Nt0T1R
e1XXcmcsrJxp7zuWubPDqTjm/tgzw650eVpTyeVtzQTn581J5/fNkbUL1u7I
ywv2VY9onjn4zSLz1VWf/NKwZL7tsO3C7+6/J2pWX/DI8fNPO2Te/v3jTuWu
iZpDFRvcO+q2A+aCVS/Nr36oyKy/qle/V1YU2vjT1HTlwJZ2Um4e/aXBlRlV
oqZk5qAVVbsfN20fOnra0NtzzXMba8+a+PYms+787l+dVz/XXFz/7y9rlNpo
eg07u8kt0/aari+8u3jgriJbo2X590+fcchUqllqzfPrTtqRQ3K+/WR/pnng
4gff7H5noV15/Y7tQ29KNzNO3LK4yYIgb6H3ENz75C7T6NgJ2/SSi29s8Fmu
OfZ2qYLXXyi053zcZ2WV9tnmt8rXj3iufnAvwcjxpVq1XZrv9QY9+m7skplb
CqOm89xy1xZvG9wzcG7lzdO6FSuwtaq8suLpWZnmrxEP/efgi1E7c82yt7d8
kGtaZp15SfGDUVt1XImRE0/LNrPmdqj6dftcn/fQew3q/Zgx/pL3cuxt7jsm
zX3XXuP6MZ+7fv3372z82lfdW+Xaww4v09zh6fXknQdTZ46+PdfOcN8157lx
2J8d3qaao4Pd4MZt6jk8fF5E7zl47eU1I3tsPuXvHR/Mi44v/nsPfVa2Qam7
Mu1Hji/mF8cnr1fkOdA79PAsx2dT1/Hd50n0XoPxKz+bvf7SAz4/SN6YOBC+
93HyZO9y8mQW3DulQe/cPL+f5BuXd7eTXR7ebm+94999n8+zKUt/T3ti3C77
S887V5bbHfw/04Muv29OvyqW37eDpnQaUXxlofmk1qItqRM32FaRXst6b8o2
1SaUrX/v3av8e/TDeuzgsgNXPFY6z2YvbDej+sfZdnjdlBXfV8qz1+3bv+CV
4tn2X+/fOaHVwDzfjvced3DS/TSU73T9mZdcf+Za15851/VnWrd5t6DO3UXm
eve0PCnv0rxFveVPB/fNHK03ZOVTw/cnncvZ+kCx5XubBvmV3xx+doqjgxns
6OLn4XG6mx6Ormaro7Ofv75UZ3huk+l5tubM9EW1vgnuY4Eu0Am6QCfe03tc
6Ac6QBfoAF1edu8n3dtS373vy2mXWB7kaci7kz+r+mydsxquy7Nd7xrbu/oj
eUn3KmSUPnbV2Fejts3Mrb/trhH8TwJ++D+2Xp/OC4L2RY3y9rdtn2VTHu63
9vgfyfcotFgb6VrjrwB++s1p5to3j3q5Rw8u/2rjjeVXF5htK5bl737yC88n
+IbdxQ5jV7Gz2FG932Wo+563o9hV7DDr+thV5HaQwyfpno6rHT7eTmI3sYt6
/0u+o4+3y9hpvs++Aey0v0/Q0T/pXpCnHP29ncXuYqfZJ4Ddpb97Hb+T7hE5
4vjt7Sp2Fjuq98dUcvLj7Th2ne+zDwG7jl28Z/IvL/znheR7SwYNbbL+ZNPA
TmO3sevsQ8Bu09+xVmWebfRu8j0nza9ok1JhZ2CnsdvYZd5n/1Ll1DFbjmUW
eLuJHcVuYkfJD7EvocSm8659pXFwPw37n64/54c1db/Is/F1Y9aRbddiF495
6JY9dl6zjVVL/phnt/V645m1N+2yH9esn7PhmTz7+u4rOp83LLifZqaLr0wT
F1+ZeHxlerj4ykw8d8jqKo9ETcoP5Xd8c+KQ6T2j2CMZT0TNRXMLG9aoHJxX
OHbj3uJvRIPzTuc4fO0hR7+ke1yudfTzeoPcdXX8S7qn5THHP68n6A16ovfb
INfIMfXoid5ng9wip3r/DXKFHFGPnOr9N8gNckI9coBcENcR50E36PhT9Xk7
pvUM7sch7iMO9Ocr43SGrtCZOIy4DLvs/7c3vi+B/CtxIXEi/cMX+ABfiOuI
87Dj2H3sPO2Ju4jDsOvUE+cR9/lztnE/gV/AzhO3EcfhF/AT6heIw4jL8BPU
V9k2ZvhDHaKm+6Avl+UOyjSTK9Z7tsWp+UDPY5tHLFmeaUr0OzD7pwGbbfMq
tccsLiqyFy+8+puPZ/1q5xypvXnOY4X2wr2Rsu+3Cu7TKdoY018fP7MuSdzm
7/uI5+knOvvh2/d09sjDcXvn4UEDP+u/ZHSuvWjrC3Uveyg4d53Tp/K1z72Y
Y6tF32w6tctaM6B0XsaXDYJ1C9YxmnR/xXZM3WJue+vvgWdfmuvXHfRcV+vG
b5wxaWxwfw7rAOOd/fb7yjs5f+DhKs7fePjgzd/N2HTOUvPAp7lXbu4ZrJPo
ObYXr/+lxbLpGbZvqY+rt+y7y1S5Ju1AlzrBugfrILvW7yzqUyG4T6dYyUc6
Vuiw3yw+NuH+x4sH57T2DPmy8WvTgvtzWEeo5fypf/9Z55+De2j/euzj20v/
YcZ9sarkmIHBus1at55h7yo8/N0V/X/z8fv0Tc2zllbcZtq2XdenhT3s6Xf6
Ra2fKcg4ZO9rcO4z75Y6Ym5cdMfvg39Ot2kzbu98W5fD/v1Wrtz0du18nPGT
a+fzGqw73O3iEf8+66B6jyzz9Nq/n9Nj17pd5pZqn466pPd+++OURddtq7LL
78u+0ZWbhq6dp98a184udHQ1ZRyd7d+Orv79io5P5lHHN7/uoueejji+2VaO
TuZrRzdb2CBGJ7/v+xVHd/OT44NfR9JzX/0dH2x7J8emlZNrz2/WfVo6OQ7u
c3R6YZo4PfHrMnrfDX74Pie3pkL7mBx7fejo5NiOdHLr9xmvb/FY5v3v5Jgy
uw981K3dOvOFsxPmLGc3/HpI3G6YCb8Vu/+udQV27Vlbh1R/fof3W383L7v6
ZOOd5vfozqfP+fmEfef40uglk/eY7zNH3PWva4L7a94dv2j2vQtOzRvmvvFJ
+3EH/T4evcdg/5IhG6c2OWyOTxyV1fCUXg9u22n4sAeC/01inXh5hVeOjz8V
X+GPNhS76dZnOmfZyJaCxXeXDfbt6L0Hz720Lzo9O9Pc4NrZte49r+esE7/g
2nl/NNyNw6a7cfl9OXrvwRI3LjPK4WknO7z9fIR15AyHp/cv0x3d7C+Ojj6e
Wuzo6PehsC+FvK3P4zo7awY6u2tOODvr9wX/5fhmxzk+mkOOb96/sO+HPEBe
35g/MVc5f2LY90K9P6f16Ih3n5hy0j8pv8Ptg7Nr3L4429TNb2zfH2PzG7/u
XP37Jvf+2TbbtP52+PwrphWZCx498OrBCsH5hhPX2GMt84P7ZOLzYJt9W8l1
s4cctWM6rM4fPjJqRy1fXPvEvcdtxgeDx6+vcsqfuHW0pHtdqrl1Nd8P/dIP
/dIP/fr/b4r3Sz/0G3/fZLn3/TydeTvltIv3a+Lf8et++j8grAPG42p/Hmau
i6NNexdXm00uT2hvcXlDe9DlCW08b+jPd3Qv1S96/63BPUEXOPrb/W6/rF3j
9svahyrVO/b0A6tsrYqRWT03Zvt2vEc73qMd703JXvB4+XeC/62etn9G5dW7
k///eqKTGz/vZR5M3EAcMWpYuyMvL8lOuhfl0mcuLv3s1FyL3KMH7BvWe5vQ
C/RmrOvX/Nv1488B9HfzChufZ9ir3LzC9nHzDBuPw2w8LrMpLg6zb7i4zJ+/
WT+sf0rGqTi3w+xJ5522bmnSvSOHCnsfvbxlcL8veIIXeGI3saPYSb3/ZeF3
t31bqXPU20HsInZP73+Z3+a2Rpdfnm1LV23x+ZG7orb33OuqFisd/D8beSby
SvhT7CB2Ebun97/Ufe+itbdPTvd2DTtHvMA+cOyc3gdT/Ja965dt2+vtFnaM
feB6zxZ2jfnOvA4Tjw3vucUefX1iRl6p4H4Y4mLiZPgCn+ALfCKuJs7mXAH+
uMdFWeVqXpplsi59ucGLqyabMhXGdH1rZnC/y8jczt90L5lvMjvnnLaw4Dv7
Z4/J3S4ZmXyfy3Wdh0TmrPrRTr25x4ZW1xXIfsgCs/TV8g9++uSH/tyG3otJ
XI/dxo7f5fhqSjk+myWOr0n/WxXns9cLvecIPYGueu8OdGbdg3UQ1j1YB3m9
+5SsYUU5/omeoXfoGXrHPJ95P/N85v34GfwOfga/Ax0/dHS1XcbH6OjPd053
fDEvOj7Z8o4Pfn5A3EMchD/mnARxEP3NdPRJuqciw9HHx0nETZyj0Hv/iKNy
O8T0IOl+l1Fb1tZb1DHPnmx+Vo9eYzcG59/icRNxFP6IuKmm00s/n2j275jc
2l5Oju1XrT5d/8jWz4yeuy7r5NrWvfSsTltX7E66J6PrNwfr7pgZ3Ocy88W3
nvzz0+N28/snr/m25z7fH3EXcRhxFnHXHGeXku4FWdEhc8wDPx/zfsRumNd4
6KEj9olBuY9nHgjOeX5TPKXo/tlHk+6xqP3i1I1znwzuf/nBtbM1XLl/n7iN
OM7nh+Nx2wJnZ/384slWl7S5fMiepHs85kfuGXTmon2eHs+5dnaWK/f27mNH
p6R7JvY4uvn80iWO7vYOR2f//oLSl98yoUOuzbi1yvOXfLrJn6v6jzuvY5u7
/UzB/TKObkn3brzs6Gito3PSfTJnXx2TM/u8kztfzzyeeT1yCd+YVzPPZh7N
vJp5LPNa+Kz3vzR19tkccPY56T4Y9A49Q+/II5BXIG+g98OgR8zrmef7e6Hi
83rkHj1A7uE782zm3cT/nCNj3s33kWM9r4xcMy9mnoycIHfImd4fg93w/xtI
HiceJ2D3yUuQp2A+xLk58hS0R6/13ib0nDwCeQXOyek9vOQZ0FP0Fj1FLpn3
kwfA73OujjwA40PP9Dw3ese8nnk+eoBeoAd8n3OReq80eTDkA7vq/6cknoci
ziLuIo9CXsXfTxM/R0hehfbYKb23CrtF3oM8COcK9V5g8iLID3YHO4PdIa9B
noM8ht5ng50g70AegnOjeu82eULOeep9NuTpkA/8gL+vKZ4XI64kziSvQ56H
PA712E29hws7Sl6GPA3xDHkZ7B52sIWb55gabt7jz01yrvIvZ4fNPGeX/TlW
vcebPCTnUPV+G/J+/l7nuN+BPuTZiJOJI8kbkUeCX9ht8jzkffQcKHkf8kDY
Xb2HCzscK04pMh+mtBr34Q1FtsbdT/y0YFxw3w3zIPScPDZ5bfLY5LW572ZB
mYbv7+0btcWfnDZ3dMVMu7XF6oaNu0dt6TGX7W6alWF3tnrfHn4gau/aeNfr
7/fJsL3eGFlnzWNR+4lbVzLb3TqTqdbq59bnXRE17125vsuo0gdMtMXT32ed
F9x3w3028e+Z3GGx75nt7nsm/j0T/5651X3PPOi+Z/C7+GHiKOIq4kriTOYJ
zBuYFzBPuGB2SteHtgX/N8+Tcu5vaX3pzPWRkcG9KDVcvX9Snp866vQ7DgX/
x3Pf+TPSj9bNMT2+PpbZacOv5qH1+Ze+fV2OmXZd09GNL//N3LLk9Le3HQ3+
f6TfFZ3r1k4N/n/k9LR7ZtW+NTvp/37uN0erNuzyk6nh8jjmepfXsb2WFvzV
MDP4/77/A4safZo=
    "], {
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFm3e01dWVx3/39967v3t/d2woGEfHjCWjgo4g6DhKkaaiE9qjq5T3QEWl
pJhYQBEEAQVBUCMJCJrMGpeKirNiyVoKGUss0ViwoIBKBxEEQbEx38/b37v4
46yz7/mdss8+u59zj2sY13dsmiTJX2uTpEb1wGKSdMuSZKoadxSS5AuVB9Q+
UvV3qpeozBY8S6W5yp0qQ1X2qP1Qjdmt+maVxZrvRk14g8p8zfcfdUnSv6L2
PEk2C75I9fCy1hQ8QvWLmqOPygaN3a/6R5WNgtep/kxlsuBCGn02Cf6b6r7u
85Ta/yq4p8oAwa+6zzFa92iVltrTXLVPUduvVVbp+02qx6lcJjyXCcdjVa4U
/IzqU1Su9/yb2a/KIpWFKo1q+5b9qWwoRPudKj/R/PtU369ynXFhL38rJclD
mq+X6lJNrD9KZWwSOExUGaB1H9G3I1UuEF02iCYXqp6pOS5T+VJ9Vqv+WOWX
4KO1fsWZqLQUfI7am6m8ozWu0xxtVd+mfU/SPF+JtlcXIF6SLOf81H6c6htV
X6F+L6r/p6rfUP2s6PSI5puk0qDfJ4Krvr0guIXObrTwXKg+z+p3X/2+VnUb
fZ+k9r8UY44enK9+99K6BfW5T+2J6i7F6F+vuburz6fCrZvqs1S3UfmNvn2g
b79VPZn1s2gDl1GCR6p0UFmgua9Q+wlq71kJ+DThUKwEbnW0aa8/aNnHVa6E
l1Q/ofK1+u7R769UflUb+2qrcozm+l7fH1P5THM86vPepn5LfabPqM8ylWvU
9q+q96vteZUv9fs5jy2q/XX97mr4EpXP4cNS0PVF4d9f319T6az270Sj6dr7
9+WgIfTrrHK7+s1WeyL6jBM8VmVQFvwCL85SWVsIGFl7S/BglW2CszTWZt3T
VK9R+xEq5TT6bFf7u6qHFKLPDciMxw5Wn38I3iq4Lg1cgS8V/J7HXiD4I8E7
Bd+u+j9VDlepUXuqskXth6g+WGWX4Gn6drbKYSoPq9zotR9VmaByqcqp6ntY
GvP8u+qlqturTFRpsLwdrvZmaeiZM1SvV3sLlU9VhnGmau+l9uZp/D5d9SeF
0EebVI9Q+VpwO7VvFLwXthSco+cEH6m6hco3go9Koz/yvF31KOMwCrq6fatx
o//Rav/nNPTjley7EPy0U/Xl1pv/ksY8tJ8i+KA0aPKhaQAON7k/vDtAPPGj
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
2P8DK95sIQ==
         "]], PolygonBox[CompressedData["
1:eJwllllsV0UYxS/9L/fe+SsmiuKDLxgeJKAsbolhDy1LUSvQUkAWK+sDYGIQ
VDRETWQRQyJSAVt2I0mrSMNWDEJkcUtK2cJiWAxqWZQ1YFDA38l5mOScb5u5
M9+cue2qpg+ZVhRF0VpGlrE6jqLGfBRtZ3QoRNEIxnEc6wmqBJ8PUbQxE0Xz
8F8E/5REUQX+emzl4GnYJuSi6Bvip4JXpVHUgv8z+ErwLeoPgr9G/iH8F4Jr
jcbWnHhOzT0H3gKfiL+G3BPUnAR+B1sLc43D37fgHOU2YBsJzjHGwJdRowj/
DvhAeAf4XPLLsT2b8zcNA4/Hv5vc1+Ft4UuIaWC+vcRUgy8F115I/hXwXtZ/
k9gbyud7+mA7SWzAvx/fF9Q7Sn579nIdOMMYTux8/H8RuxX+Ar5V1NwGHkGN
rToAaowC9w7+1p2tougr6t2FbyN2KfmtWF8bYuqody9jIflRwb7J8GPwy8Fr
1R5oL8rwX4efpsZb8E6MZVnXUK2rzNEPPJmYH8ltxF8M/5g1LMDXLXgvdjFV
LXywzgzej/jOiefU3I3UHwu+Ts052jv4NfBy4p+EX+d7loErEveK9uQk/EFi
ZsFz8IfAg1jvKWpPZb5FzLeP8Q++57AtJr6U/DUZ99AR+Lf4L4EPM3qkPhOd
jXKUO5h6Z8mtY48fIXcLtgv4VjLuIXZj7LWpRwdS7z9sc3M+I53VyNRnM4M5
u8AbGD2y/sYPY5+xzroaWxGxm7CdB59jlCk3eC9ryb+bek7NfQnbZmLz+Ffj
q4bH4HPU20HabngX+Gx4M+tvYvTkW+Zh6wieQcxt8lunvlvnqHEfeDRjG7yI
/LHgcuJvgIvJeY/4YfC1RbZVgEcwboG/xDYc3I35Zmbcw7OJD9S4yf7cwlYA
Dwn+tmvkDAVnCr5r6lH16vOMizn3iHplBaMMXwt8Jfg89Zsy/kZ9a9fEe9uX
Gk+AxxKzgbkz8HHgT4PPXjU+AVcF92Ie26vgdxN/u860H2t5HD4p4x5Xr/fH
dpTY9tQsAXcvGGuNPcBniNlDfD01Tyf+Jn2bNOcl8JjUe6maa9iPPYl7sw6+
FzyAmN/x72aP4tSaJe3SN04H3yGnU95nprOTBkmLtOeV4J2xtVUx84PvjO5O
FXwX/Da8Br6A+Dvg+bGxelC9+DDfMCVrDZsAP0DOtLw1T9q3MHZv6U7rbjcH
a49iDgb3pHpzCvwX+BuMtnnfKd2tn4N90ghpxc7gtXWHX4zdU+ot9Yx6p7c0
DV7J2ERsHfzpyLbN8M9T35Uq4jsm1kxp5w724AC4NLhX1HMN8P2pte5R/E2p
e0S9cpaYkmANkhYdo94s9RK2y0X+hpng7sF3X2/aY+xVdWytWUd+G909aj6T
853V3Z2s/mLuU9imgP8O1m69eXr7ahlncp6jJngNWot6oD+4MvXbJ02XtmcL
1sYaauTBfYNr683Q2zFKb1BsDTzI+l+WJhX5Dusu92IcyVqT/gW/mVjLpQl9
yO0crBV6k8rxf4D/eN49X6y7Gbu3pYHSwsPBb680R9pTH/ut0Ruht2I4Ne5Q
awvz9wfnCl67eqy13q7EWiGNlla/QkyG+RuxDQbX41+U8Znr7P/E9lTWtj/A
hxK/3YvxHwC/n1hbtOYB1Hub9bSL/A9xgvh9ibVuPTE/SL9Z88i8NWw7sacS
v926wxMT95x6TzF99NZRo2vOZ6yz1hq1Vr3xpeClqXtRMcv1/hasteqBXuDa
1L2nN2wFeEywNmmNTbF7SL2kf4rF8LWxe1F7Mi71m6S3SWfYM/Weam+lcSXg
74Lv0hJySljvldRYe3YVvIF637dyzxUTOzSx9uif61f9fwW/3dIIacVH+H/L
OOdrcu8P3rtS4h8Ah2CsNzQFN8e+ezrzCvLLgt8m/WO9CE5Sa5tqpuAJwdqr
Hh0ffIY6S/Wwevl/7Rtxhw==
         "]]}]}, 
     {RGBColor[0.3991098848368522, 0.443968330134357, 0.5844529750479847], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
PlsI59AGbDOxlDxuLHXuVvvsHW/8tF+ki5o6++iBuz3mc5lyfoON5zY0Prag
i9cCrgDzsh6w5+hCZ4yzRt8FHmdtqXN2ZaG29OmWyd8aZp3wM9YAv4yrhxoD
3+c2YNTbYtyPWP/v5fZg5mvr6v9z2yz4j926pi6+w3N4iY6YlcnfYm8+6v2h
vDbqp7g9WH6ax+SsokvQFfSH1/AX21SPvf54zHVdrK976KuH4/s5UT7J+IS+
+DVgI3yc02OMw5uyi+Oj3S1R91zkU6JubfT9SfxeldTmllK2epvt9U8j/btt
ExgN3AZOu87jYw7BU0dE+k1DvF9q/rPeq73Gvq4H162oSb6R7SEuQ+/iusZl
zFkul/5On57uDw0bos0phfYcOnfiSHyTHjVhTWzsm7Guy2L9f0uS/RssAxfk
Whf7gg45PNce4/8tiNStIVleZZnHZj1sXm0uhJEfSJKpJR7z+LrKnb3HC80r
sPcxTeHvhdi/pnDyFWDPpjAPug/+3WGeLDJ/7uD8IF8x52Fgs4Z8yeuDxsne
v5fclzHgEXi4MF396qJtoHUSZxCfCn8QvxD+fakpHrZKrfvvsa4DatJ/sa0d
vv9Ut38xvp0e7deV0mPoMPYIOaEenk73fiJ7xCeYG/8MnwA8y/nlTHNmONf4
Idi3kZnwJnGTs6wDe3os9Mdg09/De4sdx+8e6t/oB/yeAZnw1Jim5PbxoPUy
sG3Q/vWg+exIwwvZs/fMi08X0lv42guNe8eDP5uyE/hiYBrsH7bvftehM7BR
O+MNp7fFz/Ux58Mt+cn4yFMsE8jDTMt2r5psDXzG1v8tVyyAWM+gJCxwcCnd
DG5CP0/yPqDzX4g2t0fd6FJ8v93yjL4Aj1A+CVmN/k9F+hjxnaZ81O3GGmCP
/aL+UscXfpSLb3caE6FXwUXojh80hKuRZeIgyPMvkuoHBg0rCtntcaGfjom+
RS4//hu5Yib0AeuDJZcVws3wD32LP3GvfYpDW/Kv8HHP93lCD4N3hhr/7FcK
n57P3to35Uz9xfgRzLZ3zHFwTbGfyQ35W49G/cpcMSzOEnEd5I39BqMjg8gi
855rWUUeioZ8KOR3guu7WE5ngA8r2apnKvnocy3b3QrFDMF99DvH8rlP1M+2
DsKmfK2h+Ab+x+umdWMlHfFqJZs11PzirJ9hXTEgV3yS39ge2qNPRhU609gs
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
         "]], PolygonBox[CompressedData["
1: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
2j7K3Ed99R/AdvTLi64dyrHV6P8/bD1tJQ==
         "]]}]}, 
     {RGBColor[0.5868498080614204, 0.509947216890595, 0.47408829174664113`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
H4V7xF3m/+dz6X0c/P8BhAuNZg==
         "]], PolygonBox[CompressedData["
1:eJwtlnuQzlUYx3+9u/u+v/e8Ye1uxpLLWtduhiKly3SZSQ2JymXkMjWVxi0s
ujG5VRqtXaxoGKGIctkolhQWMSpmanRzS2mppqaS1Uj6fH3745n3+fye533O
+Z3znO/5FT08qvfIRBRF67BsLDdE0ZKcKFqeFUW3p6NoGlycjKIBxGpTUdQO
3kq8Cj4RR9EauCfxQng1fkNsFfEZ8Dzyc+C5cD94C/nXwDvgvfBC4jXwdP7/
MnyA+MfwY/DdcCX8B1wKFzOfNHwCngo3gBNwMbyReivJPwR/CY8hniZ+jvpb
4cHwDcRXEv8MLiP/PC/9Kf46rDfxr+Ej5K+HH4Tbkb+I/CZwJfkL4INwA3gF
/CJcQf61mSjaTf6tjNeY+E7if1JrOjm78M+m7Xcjfwb5BeR3JPdN/nMZfh1s
FbGlcF38Gmpsht+DW8B5WjPyl8AZ+JHY/vvULKL+8Ni5G7Ai4oVwV/LXw83h
YbH9D8hvQ/4p5vAz8xvCsw/hetjrxHqw+dvIPar9S/gdj+GP5FkVuRuxVhnv
ufZ+G/GriC9OeS/3wtfBd8auPUhjwlcG536EXRG8Rlor1WxDvZGsTwFcQJ2+
8Ag4D86H+8A9yB9L7mL+X5f/d4Mfhx/FdgfvsfZaOV/Bv8O1CefsCe4p9dYU
+IfgHlIvlcGn4b6xY5Ox7+FW2Gb1N9YyuMfUaxOIfwP3gsfjP8B67cXvxBy/
pf4ennXGL+FZddI9frV6K/Z/x6nH4HHwLvydWMeMz4TOxiLy6xA/j7VlvLnE
/8UvIn5Plmt2IH9Q7LmvI78x8UuD/7sQy+DPT/nsrYYbBa+h1lJ7uv3/NdZa
vw1X85ufcS+qB/MynpPmpp4ez1jT1e8Ja8AL+K2Jb0q6R9WraXhx0j2qXs3N
uJf1DvXwm2KVSfekerM9vD3pd9K7dcl47dYyxvX4UxhjOX4znk3F/yd4LV5j
vHP4l9Afg7O85hF+y4x7X2eqGL+cms/h82pRmXz+0x+/MTkTgzVAWpAPjw3W
GGlNIfw0/FawlnWHVwZrgLQgF34S7gL3Slrz3oGPphyrh40K1iBpkXqodbBm
SDs2wM3hZsH+eqwp/nfBeyHNPI6/TD1OrTz6aw7/PUj9fQmPuZbYrynPtSH2
FPxjyu+Sh42Bl2ITs1zjDfxbqNFH/Yq9G6xx0rr74Ur4ptj+MMY/wnoeJ344
4f9sIL4g+Gyv4dl8/DPBe1FOvBb/JNaE8abBp4LH0FjS0Jtj11Tt4djRtM+w
zrI0R9pTQU4B7/oEfJj4bPUq9e7jWXVsDZGWSMPvgLPgOTm+U7KDNUBaoDvj
LuKzsfr8Nx+bi78Ca8t8x5H/E/VLqD84xznKvXgmkz7TOtun0s4twU6mPSfN
bSh2KG0Nk5aph0dr7Xi2O+GaX6StkdJKnZERsTVX2qs7sy3+Xzx7JdsaIC2Y
xbMOSWuetG9ycO+rZ5/HL8c6Jq2R0spJWu+kNU5aVwIXJL1n2rtn4EZJa7y0
fjRcP+keUi9thmvwJzCfLfhVwe+qZ5vwq7EpOb7DdgT3oHpxEuN3in3n6O7R
ndsC/5e0a3VhvlNT1iRpk+7My/GPpb332gPtxXCeDYSXUn+Y+je4d/QN0F9r
E3wX5TJeBM9M+e7UnZ0gNjbls60an1N7X+y7uAX5n8Q+Uzpb0qQhuiuDx9KZ
0NmQxkvr9Q3RT/0V+9smm/hW/MJg7dQ3xwD42WDt0JqfZuAqbFnCe669r0j7
bAzg//Pw9wd/W6hHDwT3jHpH3xhdqXch5XfryTvODD6zOrvawxrdpSlr4UPk
DAw+4zrr2tPfUtYYaY329FjKmi/t1zdP99h3lu4uae5QuHPsvdMZWy79jH13
XTxj+Nuxe7P9zVdKvTNwKXyQ+CL4VebfntgsntXq+0b6l+2eLAs+ozqrK8if
Rf6O2O+mni4l/lLKvaGeOpN2DdWqwC7gzyF+INs1VVvfnPr21B1wm3or9lx0
Zopjr7HWWnOaj981eGzdUTfqWybltdM76F3K4f3Zfke969/B2iXNOivtDdZ6
7ekq/P8AYz5vaA==
         "]]}]}, 
     {RGBColor[0.7745897312859884, 0.575926103646833, 0.36372360844529755`], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
+P8PfdPRbQ==
         "]], PolygonBox[CompressedData["
1:eJwllVdsjWEYx196es73vaeiLqhRbRErKGK1sVoj6oKIGzFDkRilSm9aSpEY
qQixaiQuJLY2MUNSI8QMEltIqAsrVFNtExLh9/dcvDn//zPe9/medbrkF05d
3tI5V8CJcHqGzvUDbEtwrge4VwBPdO4ZshHwifCD6IbDL8D3cV7jl4lNJfiY
d24d+klR506AB8SdK8P2KbKV+H7H5mtLe6MOXBdzrgmeDS/Bvhneirty4Rex
n8+5gW8BPM5dafC8BLtzE/7t4NnwFfKHjw4s9m7wM/Dj3mJpB69Edw6eBq7A
ZiT8FzbNvJ+F7De4gJOUaDEoFn2zvv0BfAi+mZybygf+/cC9OWukh/cC7wkt
F2+QjZMvdyTCq+Ep8Dm8eRHbefBG7Hcj2wqepnyjmwr/ptxwruA7G9kFdPnw
S+iS8XkFXkzOt6P/yPlC/JnIVnl7U2//4txFlwrvDN7IHZ3A2YHh9siOwrvh
UxixHHcFNyp/Eau5ar8eWQb5a4F+HTgP2QFwju6HFweWiy3wgdRnPHw3fAD8
LPenx60295EtRtc9sG/VG7vQLw0sdyXwDGwb4BURy/Eh4i/UN4PbcJLQrebN
v3xvKjGVgW+pf7D/g34mfH5otX+LTS26Bm+5Ps8bM/Ff4813jPIJ7wN/kmA1
7Auuwace/JKTo/iRXUO/QPGBqzhT8F+P7DR4UWjfqp7+jO8pZJOjNgOaBfWc
ek8+Z+D58OvoliGrwbc7snsJVoMe4IGh9eL/HIb2Tfq21pyb3D8IPh3dffhg
8AZOl6jFrNiXhjab6ul6+EPemw4/hf3emNVQtZTPRnATsrSo9bx6Xz2j3hmB
rNJbjpQr9UA5/AU25fi3VY7Axdjz477DnwEuxwyrh9XLh2MWq2qq2h4Jrfd0
xzB4nDM0ajVWrdXz6n3l8CTv7QvsLc2QZumOt12hHpyALgVeDS7H/oO3mql2
mpFcxYesb8Rm5BP+RfAO8Dfw9/AO3nqjivs7glcFtqs0k4/w3+8tF8q5ct8/
br2uninC9l3M7tJOWYE+K7De0BvV8FGB7RrFcF7zCd+lb4dfhbdWD8IXwot4
7yeyGRGb+VnoKmMWm2qoWvq42aqH5sF3euuNEmqwA1zq7W7t1B/4Lgls9kqR
3db8h7ZbtcOzwGu9zbJmqhH7Gm+7RDGOxTctbrOpHl0Er/WWa82cZq82tFnT
jvkA3hzaW9rR6dh39jY72nmpii+03tfOTkHf3ltvqoaq5crQdp1ykhzYztTu
nIvNc3AYt/8CzeTcwHaCdoNy9hj8DxKv3HY=
         "]]}]}, 
     {RGBColor[0.9099568138195777, 0.6448920345489444, 0.320866122840691], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1lV1olmUYxx/m++y9771BoeEqV+ZbOtuyWZE5HUnlpOVBGswk6sCtIFdN
smxoRLRsQmAfVEgdRFAZBZXMUmhN+pBpmzMGmR0Fq5MOKos+qA6i35//5cHD
9X+u+7qv7+u6F/Vtu32woSiKT/jm8LVUiqKrLIqn+TknFcVi6LZcFEegc+G/
jcxx8AXgw+C10GX87wMPcncFuIPv62pRfInifehYzf1+zk4l3zseMn9VbfSB
0C+Zy6GLkJmBdoWdC8PWzmw8Hz0XlT6TnqPc2wudxV4PvFuDL196Arcis6a0
3PmlY5GtHeicD34E+kG2zPvZsYh/VoeoYpePild3H0JuHmfnJuubF/n5KvKm
/D2G/LqIZQT5OjKXJOd3jLMFyH+H3+PgGWhjab7wXcg911gUvzcVRa/uwz+G
/AnODoBr4FXQv/k/0+DaSa90HgSPhv5m6DD8yQbzhkOmXrFt2VINVIs/qcnK
0volX8XIa/iQoJeVro1imYk6yR/RemD5qDPhYXQuhP9kdh6E10VdBirOlXwZ
DVtbiPd1bDVh61CyP+qRDXFPPdAEvgb5n5DfDO8Z8HroeHbd+0JHT9RC+ahH
Pq8jj3eqFtlxqyfaIw+DpXmjnN0I7kbPt+A+8I6q/WyJfMr+TfBfhvdhNj4I
/SFbz+PInwHvAu+uurbSLVvfw38Q/mx2nYWl87fkWP5L7uedpeVVf82Y5uuX
bP7P2T3QHHn7iP+b4fck121L6d6YqDgWzUVHxf4ob9MVy6tnTmfLfwM9lT2z
zdDDfN3w707Wo3ur0fkv/D3w/4Ee5bsN/AV0tNF1Uo2UF/Wl9I9FTyr/Y8jd
gszH2fUX1ty/khzLq+G/YpsMP+SPdsmKbJ2jyfO3NuZXtDuwZltxKl71YW/s
kZPcvQP8sGIBbwQPJMekWiquqYrjElavbYg+F90Y+ES2zinoUMWxa5fprmJW
vJ+Th00xC6Kyq/7U/G4KPB0zux6Z7cl3ltecA/Wbem1rck4Xwv+V+Gvw78++
Nx25PVkxlh6dTwVfuT0S++pAo3eZ/HwCPZ+B27L9nYrYLy0dj+LWeUfs0+bS
ujSvL3Knnf/FkbeJyPP1yfviDc5XZvvUCX03+x15B/potq6h7JmTbvV2Lt3r
0jMUPqp/NAfKl3I1gs+T/F/L3f3qAe50YnNp8iz/Ab0SXlvkdgj5Q9o1yN7D
V4V/L3S26t3aD36e7wrwC9pPyXttT7bdpaVtS5/iPY0/C7L3aUv2zmkL/qeN
3mvqseZ4k3Zl7zP5qR4+L/m92Q5/a/b+GoAu0ZuHXCt0Od8x8NXQp7LrsRv6
Y9U5ui/7DdabUtObkO3nsxHHSORLcdfPztsc+9YV+065Us5kczz2XmfpnaZ+
U+7VJx3Rp72xw/fG+9oee099o55RXltjr82NOdYMqodUS9XxPezewNma5Pgm
ot+W1Zy7q+Jt6Y9+VV43R92XRF1fyu5H9dxsvJPSqX2ivlgVPr2ZHc9b0Jaa
+/5i6P+OqQxG
         "]], PolygonBox[CompressedData["
1:eJwtlW1ol2UUxm/237P/c+//IUtxOpfTOZ3NpktN8wWl0nD6wRS0EP3gLNBJ
K+fL1Ih83UDwpdLEkBAs30ATXyZqjXy3qRM/2CRRWEZE5Bv6wfoQ/S6uPlxw
rnPOfZ77nPuc8/St/XB6fV4IYTnIBwfSEIYgnAGfZkOYA5+YhDABtMQQjoI3
kIdi/w37q/BnBBgNH4E8HFxBzuHzCPtW+MvIUzIhlBHrFroS7KPQfYPtK3RF
8KvE6MC2BF13bPXobmOrAW/Cr8FHYlsMRmTssxT5M/AS8gx0G6PvpLsVolsA
LwZH4EdBL8mp79oGmvCtQnceOeL/h87Ct2Wc4zHk8fiPQ/4Bn/7wm/i0KV90
e+C/wG/k2ecg/BqYiXy2IIQGzvYBTfm+4xZsq8BbxC+Fr0G+AN5GPoL/Anzv
Ea+TeK9Lh21iavkiMYYoV7CR8+PRfYfcAxzG9hp8JL6jUt9NOSv3fuA0cgG6
TmL/CR7muabHse0HYxO/id7me3gNfBf3mUus3dGxlbNyVw+oFzZjn429A+yl
b7qiW4TtNj4VxMrC34M/l9r2AvgIvlx3Ri4GRdjWw/si9wOlqWusWreCAciH
onNVTMXuDV+f8Z0PIH8OKhP32ADOHwdTuE/ApyV1zVS7S6AaeRe6MuQW0Ei8
HvBG5D6cX4v9HJiaWCfbiznqS66XiXcW25foUIW5+HTA98EHwVfAH8DLwV1q
VQ+/h1yHfVriN9Zb34/2Vc+p9xRTsfXN88hddWf4ZPUcvDm6NmPRFWN7JTqX
MXzzMPwKfEbiHlOvtcFvZKy7Gn1GZ3WHi/Da1LH1xnrr0px77wTx7mBbR01W
Jt4B2gWfZJ2LaqbalUbXTm+gt3iKbhZyB+efIFdG7w71qHq1MOdeUo+oV54U
une2w9vhJfH/2YTvhP8LNsDf5XwF8mDO/1jgnJRbRXRvqOaqvc7o7Afc8Vds
P0e/jWZCs6Gdo93zDrp2eE+wBl4Lv4W8LvrtNZOazeqcZ/cSMX/n7NKsfbWj
dsC/jd5diqFYi1PH1sxr9ldG97beUG+pHJVrf/h15E3YBybO8bH6Xf2TuIfV
yzfh87B9zR2yOc+MZqcb6JJ6x2nXKcZm5DRn31Z0J+Hb8fkpzz2qXn0e1BGv
CP9l0TtUu7RdO0P7EvvH+a5xVc45K/cy9RT23qllzahmVTtZu1kzUYL/aHRV
Gd95THQPqBeU0xeqVfS3NJOaTfWYeq0n9hXY3o/eFZoZzc786F2sHahdWBe9
y/+CD0ZeGP1v0Q7TLtMMaBaa0f2DbVj0btcO1y6fF737tKO1q1Uj1WoSutPI
p6Jl1Ui16p76btpR2lWN0bXTP0f/Ht1Bd9GMPEReHb3LVUPVshCUZ/zPPIGt
IfrtpJPt7+i76h+pf2VndO9qR2tX/wfIWOeC
         "]]}]}, 
     {RGBColor[0.939947216890595, 0.7198680422264875, 0.4138363723608445], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVEtvTWEU/eLe03N2jomBhD5VqOJqUkKkJZF0IAYMVPwAz9BEB9yWRFvl
puJVhAkjA2+iikpKE6UeLRUlHpVOJDUm/oBYq2s3Bl/2Pt9ee++1H9+p3Na8
ed+MEEIBJ4NzMBtCA5Q6nFrowzi/ABjDd3kUwmtguuIQ1kA+SEJYZSGMArMS
sgr2AvTGjHxGoE9CHjH5FiBvwyfHfIixH9+zcd9q8qEv4zdBfsJZjbuhrHh0
Q692Sf/SNITHkBOIVw//j7DVQe4x5fyJ+Ekknx/43hIpB+OfAWYRvs+bcMQ/
hF6Pu0rgCxnleZVVro5YktznJOrNEPBnPQ7jsT/sHW0XII/jbM2IH3keYK5E
+Tvdj/YNOKMmfm9Nvc9n5bMsFZ5+R72H7OUuU227IW8475uMCdxF+P6F/G3i
X2Pq43pgcpDPisSTfE/5zE5DHjNxZ33M/yYjDndxvxaYO6ZerovUm0em+S6H
PIT+9EOfD/07znZgWmL1kr5d3kv6sdclWWHY5xHfL+5TT5Fmz9zPEWcjMIOQ
3xCrGPeXE/V1YfR/X8Z8pleBe48448CeNGFOQHbG2qEc9HOmfs/zOI3e/6md
jRSLd5wF7zmLTZH6MmLCDEO245RB7zD1ijzJmfPkXL+CT3GqekpSYfP+rmq9
3qkdhX8zbO3g+MKUqwz4qqzuubcv/Z52zq00UpxZieb5hG8Kpw+2clOPa/3d
tZnwhyE/eN/Zo0l8D0BfYNoPzmavqQa+R859Mb4Hcb/EfXuhzwyyE8fcO2D7
DNsE+Pc4ftqP3PlmmIfzJ67ftIdJqr3h7FdAtpjisaYmf/c531nq14N2f8z/
S5UeszSoZtZeYeJIrqwx7/8W/mMqsqqdNu5cn/eBdTAfc7XGincFHMY91lyT
H32Ip42Ytlg2Yq6Z5sV6WSN58Zs676r9H/In0V50m95KlddQ8HoYN05V65dE
e8yct4Bfmurd5lLtGHd3eo8p33kPCt6TXtM7vQ95KdHc8rHmzXns9J1q8DdO
HgPOgZwHnf9Tnxfnxhnz7p7pP8U3UgM+/wAZ08g6
         "]], PolygonBox[CompressedData["
1:eJwlk8tLVWEUxT/ynM75OE2b6DW5QSZ5CyJo0AOEBtGgBtVf0BMLcpJalIp1
sydW1MSCRvY0UntBD7CwUsmgIiOjQaDz6g8o+i3WYMHaj2+fvdfep7yrbfuh
BSGEFpCAxXkI7ZD6NITuGEI/+Ip/OfZF+BzxI8THFobQXIQwjm9dTQjbiL+B
90S/3YTvmDiownfjm4WPgQnsrdiv4d+pd5B6w9Srpd4Evo/EdxCfgk9G86p6
Ivc99hbiO/FNqzZYkrqHk/COzN+qI/+6ZsFeRP+j2N+IPwcVcjeT8wJ+F3xA
gCfE78G7yC+R/xJ7DvssWEbuaezf1LuDvT71TJotL1zrFm8y+Bn1W+M35+AP
wBfqv9KM8FnqlxPXuB2tkbQqYXfB6wprIY2k1TW+WZt4hgH4zehZ1PMg/DB4
qr3xvh0+RM5q4uOgl28NgM+JNZbWM7l7/aQeyG+Inl0zd5JbiX7bz/eb4UvB
M+w+7LK0K7x77Ui7+ke9q4lv5A98b7R2mnkPvAn8hLfR3zx8DZgivoH8Pr53
Ofq2tNNL8APgrbTnTSt8RbR2FfJ7yD8erZVuULd4AbsxtebSXj2q14347sN7
wbvgGzkBX1X4duRbWfimdFuqcV73WviWpWkJ3p2590ZyBsntjNZaN9QB368b
SD2jZn0U3btmfAw/xfvJxDvRblRDtaTpUWJD0b3qJnQb1cyzSoNf0TesW24A
N+Aj+FrIb8L+kXlH2pV8o/CHubWdJr42+mZ1u1fA39xv9FY975O20f+i/nn9
+/8BKaWETA==
         "]]}]}, 
     {RGBColor[0.9699376199616123, 0.7948440499040308, 0.5068066218809981], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtUz1rVFEQveTd9d3LktLGsJBIAkJinT+wksbqYWObQtdGuxCNieiysH4U
iZ0sCImBBGOhoCRdEkESO3FJkWCVpPMDSz8QPIdzimHemzsfZ87MjEzfqm4O
hBCmIQVkNYXQgF4oQ7iWQzjA4xd896GPCr2Nw/4+hjABPVQLoQn7JGQJthPI
DXyvIM8Yvl9Az9tvDnoU+grepyCbeL9aU+4H+J6JysV3+h0E1TnG+8WgfMdR
OA6B6RPsG8h5CHkLeyMLKzG/xvcFyDbs17NiGcdaLehuIb8V2GPU/2f8D0fl
pQ9j2e9HxFfAswddRMV0jbMT1cvtUr7kj3iJm/mP8P8O9md430X8ZeTZdr4K
cR+C6rSM5425JccjkC18n3d/xEdsXfP4BHq8rhwnqPM0Cg9xPbIPfc8mzWcn
y4/+d7N8K8+CdcgNexiN4oH1yHfP3HGuTWN+nBXXQL5Xxkm8e+5toq55XvJu
3CnFXSepf/IwVJemDzlibu4J8596dpzhQlYO9rEI27pxf03am2/QPcgg4mZK
Ye+bq39Je/QzqYeeuX4ZFcuaG0n71UFsO+qt6R2J3j9iJFbiWI7qhXl+JMV8
hz5XVx+c+W9j/QV9JqtuLetGyCPxs48l98I7GDNu8tY3d3O+nXtZ+Fu+QcaQ
5yn3tGw8vL+2a3A2fN/3rBddq/IsyTN7ZH/cvcJ7zTz3S3FCbujbNicU4pv0
vXAvyfufpF7+Jt0h7etZvJP/h1m9bfm+hrPufxZ11rJsvOnnniPnyTlumpP/
+VSdlg==
         "]], PolygonBox[CompressedData["
1:eJwlkT0vw1EUxk/0X/43Tb+ARoLUpGaJL2AxdbMa2NgahGorHbwMWDuICho1
kBA2L4mETSIdrNi8rd4Gv8cZnuR37rnn3uec0zM2lZ9sM7MsilCtw+weKKDH
2OwNLcJPaJfcNnEfPJo0K8FFzrqoO+fsOZhdoMGE2Qj5S/gGDRPniW/hV2oq
3N1HFfgDVeEN9AsvcaclP9xfhpOoJi9oh78+ubMWeY1q0+TrcALNks8RX8ED
vFEmbhLf0eAZZwfBe1Jv8vAC51Lu7Zr7/Sn3JG/q+T32ntX7OvombvDGceRv
7gX3JG+aSZ38RPBZtMiPwwXyafOaB+LV4L1pJivwXPC/M5zNw9XYe9lCQ3Bv
cO+a8QxvTaNT4m60Sb5EHEU+A81CZ8pl9QacSfkuTqjvhA+De9OMjuCF4H9r
Z8XgO9Vu//8I7kFetIN24p/YZ9FA5dgl1k6+4D9by1HP
         "]]}]}, 
     {RGBColor[0.9999280230326295, 0.8698200575815739, 0.5997768714011515], 
      EdgeForm[None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNUrtOQkEUXODCXbjRL1CjJS2dFCYmllaWln6AtsYKSAxRP8GCqCgifoad
rY0BKQjYqDxEiK/CmZwxWpyc3bOzc+Y8lrZ2Nrbjzrl1WALWDZxr47Aac24I
P4BlcS7DR/ALwDSAycCmiL3C1hCfg41053mscy5mOOLnFU8H9ofcQ+XajJzz
iNdC5+LwMdgb3mbSlrOAeBWxR9iDdPFfBtb3hi3Bh4HlYN5UYPzUn0pbDXlg
JgnDUyc1jlXDoTdtl8h1Hhp3Ev8KiPeBOfOmgflb4qDOG2eaycsaI/WGnLSJ
cl2B8z7p3ErG/sXVkwF478Dx7q2uvjT3AuMiR181UxNndJuyObE+9o29yGkG
5KoFFud7PjL8cmS6JtJ2gnyzwFbUk6n0s09NzbutWsmflQ7+Kannz95qqgZ/
2Kbw9GVp5hsxv+8t8TNvXLNeTBs/+826G+pjPbC5jP/xkvPDW71Fb7V21YeK
6toNLc+Dcl2HxnuE9463uR0j9qRzR/tTV66i+L+87VJN/TxQPu4s94k17sOf
etPF3eFejbSH1N7THPdC22fu9UVoe/GCf5/ezox9ax+4Fz+mjIHm
         "]], PolygonBox[CompressedData["
1:eJwlkD9OQmEQxEd4f773XkJAEitj8BiQyA2k4AgeAFpjbx7KLdQEAY9BZ2tj
QyU0IokJhUDjb7PFJLM7u9/sfJc3w/6gIukMRGATpF1VWsC/4XEm5SdSSS+B
d3PpM5aW1Ffw11TKWJyCU/QjO79o5+wc4O1Cek+kL/Rr9AaYwBNQos/Zz+Fz
0DSNOkQ+Y7NjZgr4CvSo6+Al8htmqd9gt5hHB69bejVu39JrMTulXke+Y7vm
YV725hvac/BZy/gEvw+e9YI37lL3NG/L+Ij2Ezyb/dEW/gc+5Jn3wTNaVsvw
EPxP7G9SMKL+ByKQL7E=
         "]]}]}, 
     {RGBColor[1., 0.95, 0.75], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtkLkNwlAQRNdGyP52wJWS0IDtFCToAAIawKIAKIOrBCRC7hAqIYBymNFs
MLL/eOb9XQ+W6/kqNrM+1IB2qdkLxjSY/ZpmX+gcmXVxPuF5TcxqaAEVUAf+
Ef4F7+9YmQ84pX9vmbLskNsO4t2Yj9RhvkrU4X2F88ktvUtvnyo/C8pzPjLv
iZhkjzP5k0zdyu+lVzmfu9Eb5mKReQC7FzTTA7ltql249yhXn+za52SfrNJ3
3KSal//j6buR9wcyuSqI
         "]], 
        PolygonBox[{{1959, 411, 1887, 2906}, {2622, 1496, 422, 1962}, {2187, 
         693, 437, 1964}, {2873, 692, 1496, 2874}, {2906, 1887, 692, 2185}, {
         1960, 414, 693, 2186}}]}]}}], {}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(2\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(x\\), \\(1\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{False, False}, {False, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.964643728515645*^9, {3.9646438579543176`*^9, 3.964643921030221*^9}, {
   3.9646649303996716`*^9, 3.964664946066082*^9}, 3.9646650191162834`*^9, 
   3.9647275955138273`*^9, 3.9648312920358343`*^9, 3.9648315746180944`*^9, 
   3.964831806046895*^9, 3.964834843138918*^9, 3.9648555013841686`*^9, 
   3.9648561723245726`*^9, 3.964917345185364*^9, 3.9650297011342373`*^9, 
   3.965031137296399*^9, 3.9650904173477545`*^9, 3.9650913160541487`*^9, 
   3.9650966648165407`*^9, 3.965114270817255*^9, 3.965117307531251*^9, 
   3.9651238249399586`*^9, 3.965179720244053*^9, 3.9652169034409266`*^9, 
   3.9652194412151265`*^9, 3.9652202504136314`*^9, 3.965221668712972*^9, 
   3.965246825633707*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"7346f28c-a979-4504-97b0-a789cd35d211"]
}, Open  ]],

Cell[TextData[{
 "This is the contour representation of the effective 2D potential of the \
coupled oscillator system, for typical values of \[Omega]\[CloseCurlyQuote]/\
\[Omega]  and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"k", "/", 
    SuperscriptBox["\[Omega]", "2"]}], TraditionalForm]],ExpressionUUID->
  "c0d49723-1ce0-4b98-bd1a-6bf6b3daf759"],
 ", when the system is in the coupled phase."
}], "Text",
 CellChangeTimes->{{3.964568625007003*^9, 3.9645687046931734`*^9}, {
  3.964569555090255*^9, 3.964569558466347*^9}, {3.964643966915529*^9, 
  3.9646439679930077`*^9}, {3.9650771304413123`*^9, 
  3.965077135422783*^9}},ExpressionUUID->"54aafa90-8884-43e4-bf18-\
1c991698b922"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["The Ermakov Equations",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9644794865786*^9, 3.9644794911955023`*^9}, {
  3.965077418231356*^9, 
  3.9650774258945923`*^9}},ExpressionUUID->"cdfef44f-7851-4473-b11b-\
949dd2463012"],

Cell[TextData[{
 "Let us consider a Gaussian wavefunction ",
 StyleBox["\[Psi]Diag = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"-", "m"}], 
      RowBox[{"2", " ", "hbar"}]], 
     RowBox[{"(", 
      RowBox[{"Aplus", "*", 
       SuperscriptBox["xplus", 
        RowBox[{"2", " "}]]}]}]}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"4fe33f93-fb68-4307-a5c5-06896849a2e4"],
 StyleBox["+ ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"Aminus", "*", 
    SuperscriptBox["xminus", "2"]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"75f62870-070f-4ca2-83b8-57de13a7994a"],
 StyleBox[") ]",
  FontWeight->"Bold"],
 "  of the system. We define the diagonalized quadratic phase coefficients of \
the  wavefunction ",
 StyleBox["Aplus = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "i"}], " ", "m"}], 
     RowBox[{" ", "hbar"}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Mu]plus", "'"}], "\[Mu]plus"], ")"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"d1edb5bc-3997-4203-a4e1-b4764c3bae37"],
 " and ",
 StyleBox["Aminus = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "i"}], " ", "m"}], 
     RowBox[{" ", "hbar"}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Mu]minus", "'"}], "\[Mu]minus"], ")"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"053a632f-6497-4446-ae47-e4f5bba6d1c7"],
 " .   Substituting this Gaussian ansatz into the Schrodinger equation and \
simplifying, we find that \[Mu]plus and \[Mu]minus satisfies the classical \
harmonic oscillator equation ",
 StyleBox["\[Mu]\[CloseCurlyQuote]\[CloseCurlyQuote] + ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], "\[Mu]"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"dd58b042-9222-4e62-ae8a-9b484faef7fa"],
 StyleBox[" = 0",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{
  3.964474390340563*^9, {3.965077178707388*^9, 3.9650773303897676`*^9}, {
   3.9650807092622128`*^9, 
   3.965080710267716*^9}},ExpressionUUID->"ffe700a0-45d7-40f7-a2fb-\
03d5ba659dbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]", "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{"b", "[", "t", "]"}], " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"I", " ", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.964476218172813*^9, 3.9644762561255813`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"e8e1d0ef-55f6-4aec-9ad2-a6e306f0a4c8"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
  RowBox[{"b", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{{3.9644762472998486`*^9, 3.9644762569509735`*^9}, 
   3.964483366471204*^9, 3.964557738280173*^9, 3.964644108360344*^9, 
   3.9648313880823035`*^9, 3.9648315933729362`*^9, 3.9648318061174436`*^9, 
   3.9648348431984425`*^9, 3.9648555014612503`*^9, 3.964856172389919*^9, 
   3.964917345323943*^9, 3.965029701248087*^9, 3.965031137375925*^9, 
   3.965090417443286*^9, 3.9650913161387496`*^9, 3.9650966648961754`*^9, 
   3.965114270896886*^9, 3.965117307620262*^9, 3.9651238250386896`*^9, 
   3.965179720330393*^9, 3.9652169035172577`*^9, 3.965219441306424*^9, 
   3.9652202505084763`*^9, 3.965221668778737*^9, 3.9652468257230597`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"c7b3ada7-e4a6-424d-b419-367897303bdc"]
}, Open  ]],

Cell["Putting this value into the classical oscillator equation,", "Text",
 CellChangeTimes->{{3.9648376299050894`*^9, 
  3.964837653073675*^9}},ExpressionUUID->"61870200-cbc5-4316-a38b-\
2ac0eed7cdf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{
     SuperscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"\[Mu]", "[", "t", "]"}]}]}], "==", "0"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9644763203027115`*^9, 3.9644763835380683`*^9}, {
  3.964476915355113*^9, 3.9644769198516693`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4129a03b-683c-46a7-aed4-a35121bbff68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["b", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["b", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"b", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.964476625091708*^9, 3.964476920598552*^9, 
  3.9644833745510225`*^9, 3.964557743162679*^9, 3.9646441246129017`*^9, 
  3.9648315977836685`*^9, 3.964831806276865*^9, 3.964834843346693*^9, 
  3.964855501647822*^9, 3.9648561725688415`*^9, 3.964917345714164*^9, 
  3.9650297015282817`*^9, 3.9650311375702434`*^9, 3.9650904177543297`*^9, 
  3.9650913163366394`*^9, 3.9650966651353464`*^9, 3.965114271102249*^9, 
  3.965117307815216*^9, 3.9651238252379303`*^9, 3.965179720650073*^9, 
  3.9652169038080587`*^9, 3.9652194415227327`*^9, 3.965220250699198*^9, 
  3.9652216689724016`*^9, 3.965246825933346*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"4d29a1e4-62c8-41f4-8493-b32f344933ce"]
}, Open  ]],

Cell[TextData[{
 "Let us divide this equation by ",
 Cell[BoxData[
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", 
    RowBox[{"\[Theta]", "[", "t", "]"}]}]]],
  CellChangeTimes->{3.964476625091708*^9},ExpressionUUID->
  "ba847a38-82b7-4e01-9a84-1179d7b1fb6a"],
 " and then separate the real and imaginary parts.  The real part becomes,"
}], "Text",
 CellChangeTimes->{{3.964476799892956*^9, 3.964476863035206*^9}, {
  3.9644770340919466`*^9, 3.9644770424755273`*^9}, {3.965077441645852*^9, 
  3.965077444930185*^9}},ExpressionUUID->"e5351093-40e5-4151-8fc8-\
af7a87ad8adb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["b", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "+", 
    RowBox[{
     RowBox[{"b", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], "-", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], ")"}]}]}], 
   "\[Equal]", "0"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9644770723553257`*^9, 3.964477096282976*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"78b1e6e2-258b-4fe5-a954-22c4645ba352"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"b", "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["b", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", 
  RowBox[{
   RowBox[{"b", "[", "t", "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}]}]], "Output",
 CellChangeTimes->{3.964477097131718*^9, 3.96448337922913*^9, 
  3.964557750309697*^9, 3.9646441292059984`*^9, 3.964831604217887*^9, 
  3.964831806391396*^9, 3.964834843401409*^9, 3.964855501775676*^9, 
  3.964856172632701*^9, 3.964917345858427*^9, 3.9650297016291666`*^9, 
  3.9650311376470833`*^9, 3.965090417843533*^9, 3.9650913164183006`*^9, 
  3.965096665215263*^9, 3.9651142711798573`*^9, 3.9651173078999863`*^9, 
  3.9651238253326435`*^9, 3.9651797208286667`*^9, 3.965216903874691*^9, 
  3.9652194416092863`*^9, 3.9652202507638035`*^9, 3.965221669040062*^9, 
  3.965246826014249*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"60bde2f7-697a-4fe8-a22b-3acff84c8914"]
}, Open  ]],

Cell["and imaginary part is", "Text",
 CellChangeTimes->{{3.964477105859621*^9, 
  3.9644771117372627`*^9}},ExpressionUUID->"683b8252-d4d9-43e6-ad20-\
ff0b5ba3a7c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{
      SuperscriptBox["b", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"b", "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], "==", "0"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.964477128216342*^9, 3.964477182164049*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"0a837b8a-bb27-4138-ae2d-d284cb90d1fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{
     SuperscriptBox["b", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.9644773119606905`*^9, 3.9644833826413574`*^9, 
  3.964557753780132*^9, 3.9646441326868114`*^9, 3.964831607340966*^9, 
  3.964831806452234*^9, 3.9648348434525933`*^9, 3.9648555018545213`*^9, 
  3.9648561727192698`*^9, 3.9649173461158223`*^9, 3.9650297017279787`*^9, 
  3.965031137714487*^9, 3.9650904179342933`*^9, 3.96509131648958*^9, 
  3.965096665279314*^9, 3.965114271252943*^9, 3.965117307976385*^9, 
  3.965123825411518*^9, 3.965179720900489*^9, 3.965216903937899*^9, 
  3.9652194416911383`*^9, 3.965220250852725*^9, 3.9652216690991325`*^9, 
  3.9652468260963306`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"c72b106c-04df-45ca-a169-8e651ad3de79"]
}, Open  ]],

Cell[TextData[{
 "The LHS of the equation is nothing but ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "b"], 
    FractionBox["d", "dt"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]", "'"}], " ", 
      SuperscriptBox["b", "2"]}], ")"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"0bc4f091-2ac7-4f82-87bd-5b8006a55358"],
 ". This gives ",
 StyleBox[" \[Theta]\[CloseCurlyQuote]= ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   FractionBox["c", 
    SuperscriptBox["b", "2"]], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"f3e09aae-bc69-4b30-b62a-e8d88fad3099"],
 ", where c is a constant.  Substituting this value of \[Theta]\
\[CloseCurlyQuote] into the real part, we get  ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", 
      RowBox[{"b", "[", "t", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["b", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     FractionBox[
      SuperscriptBox["c", "2"], 
      SuperscriptBox[
       RowBox[{"b", "[", "t", "]"}], "3"]]}], "=", "0"}],
   FontWeight->"Bold"]],
  CellChangeTimes->{3.964477097131718*^9},ExpressionUUID->
  "c6e03a60-e56f-403e-a4cb-7f0d73115630"],
 ". This is the Ermakov equation.  Let us now demand that the wavefunction \
approaches the local ground state at ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{"t", "=", "0"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8985f473-ff30-4254-b3db-365309d0d2f8"],
 " as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", "->", " ", "0"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "871e540f-b7d3-4539-b94a-f5fa7298aa90"],
 ". This implies,"
}], "Text",
 CellChangeTimes->{{3.9644773334504166`*^9, 3.964477363169287*^9}, {
   3.9644775182205534`*^9, 3.964477573815594*^9}, {3.964477779940708*^9, 
   3.9644778285818496`*^9}, {3.9644779773919015`*^9, 
   3.9644781870615835`*^9}, {3.964478231382082*^9, 3.96447825409503*^9}, {
   3.9644784711254654`*^9, 3.964478475748935*^9}, 3.9644787803403425`*^9, {
   3.9644788303315363`*^9, 3.9644788556258793`*^9}, {3.965079205582199*^9, 
   3.965079229511077*^9}},ExpressionUUID->"9f8a9680-7168-4ef6-aef1-\
71e0511ce98b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"b", "[", "0", "]"}], ",", 
    RowBox[{
     RowBox[{"b", "'"}], "[", "0", "]"}], ",", 
    RowBox[{
     RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], ",", "c"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", 
    RowBox[{"\[Omega]", "[", "0", "]"}], ",", 
    RowBox[{"\[Omega]", "[", "0", "]"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.964478935711628*^9, 3.96447907542326*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"10f72b10-40b9-44db-a987-423bd55119ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", 
   RowBox[{"\[Omega]", "[", "0", "]"}], ",", 
   RowBox[{"\[Omega]", "[", "0", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.964478944617222*^9, 3.964479076155305*^9, 
  3.9644833927554984`*^9, 3.964557760065138*^9, 3.9646441458375316`*^9, 
  3.964831610201524*^9, 3.9648318065102234`*^9, 3.964834843529521*^9, 
  3.9648555019283886`*^9, 3.9648561727720327`*^9, 3.9649173461991735`*^9, 
  3.9650297018284225`*^9, 3.9650311377863874`*^9, 3.965090418019395*^9, 
  3.965091316567345*^9, 3.9650966653428636`*^9, 3.965114271317976*^9, 
  3.965117308054989*^9, 3.965123825503104*^9, 3.9651797209754333`*^9, 
  3.965216904000181*^9, 3.96521944177343*^9, 3.9652202509240503`*^9, 
  3.9652216691585455`*^9, 3.9652468261730676`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"ea0d517e-e054-49ec-a279-5c9fa41bb435"]
}, Open  ]],

Cell[TextData[{
 "So the Ermakov equation becomes ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      StyleBox["b",
       FontWeight->"Bold"], "\[Prime]\[Prime]",
      MultilineFunction->None], 
     StyleBox["+",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"b", " ", 
       SuperscriptBox["\[Omega]", "2"]}],
      FontWeight->"Bold"]}], 
    StyleBox["=",
     FontWeight->"Bold"], 
    StyleBox[
     FractionBox[
      RowBox[{"\[Omega]", 
       SuperscriptBox[
        RowBox[{"(", "0", ")"}], "2"]}], 
      SuperscriptBox["b", "3"]],
     FontWeight->"Bold"]}]}]],
  CellChangeTimes->{3.964477097131718*^9},ExpressionUUID->
  "4d134081-d671-4580-9384-300de8f353d6"],
 "."
}], "Text",
 CellChangeTimes->{{3.9644790921484265`*^9, 3.964479104538314*^9}, {
  3.9644791709112577`*^9, 3.964479248818285*^9}, {3.9650782931643925`*^9, 
  3.9650783197417164`*^9}},ExpressionUUID->"326fa5d5-eb29-4aaa-b979-\
d0b7729e5fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Expressions for bplus and bminus",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.964481996559161*^9, 
  3.9644820158265676`*^9}},ExpressionUUID->"e09c41e2-c73e-4427-98ec-\
404f52ec248f"],

Cell[TextData[{
 "The solution of \[Mu] when the system is initially at ground state, when ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", "->", " ", 
    RowBox[{"-", "\[Infinity]"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "554e5301-515e-4ae6-a905-fa8c75123823"],
 ", can be called \[Mu]in and when the system approaches ground state, as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"t", " ", "->", " ", "+"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "920da2ab-c41a-4beb-9b08-3c6dcdd536f3"],
 ", can be called \[Mu]out. So the solutions take the values: "
}], "Text",
 CellChangeTimes->{{3.9644823797368994`*^9, 3.964482619928477*^9}, {
  3.965078513623472*^9, 
  3.9650785403494873`*^9}},ExpressionUUID->"735691c8-1edf-44e4-9ce2-\
9b1975ccef04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Mu]left", ",", "\[Mu]right"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"I", " ", "\[Omega]minus", " ", "t"}], "]"}], ",", 
    RowBox[{
     RowBox[{"a1", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{"I", " ", "\[Omega]plus", " ", "t"}], "]"}]}], "+", 
     RowBox[{"b1", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "I"}], " ", "\[Omega]plus", " ", "t"}], "]"}]}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.9644749685859737`*^9, 3.9644750560233817`*^9}, {
   3.9644751223722754`*^9, 3.9644751368901176`*^9}, {3.9645941203466253`*^9, 
   3.9645941438354692`*^9}, {3.9645942154366884`*^9, 
   3.9645942165123234`*^9}, {3.964728974722927*^9, 3.964729081885517*^9}, 
   3.9647300451443777`*^9, {3.9647302768811474`*^9, 3.964730326365034*^9}, {
   3.9647305191321235`*^9, 3.964730576682122*^9}, {3.9647367883078527`*^9, 
   3.9647367941988173`*^9}, {3.9648134247963877`*^9, 3.9648134346789503`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"7948c19d-bbe4-4372-af14-7e92079f3baa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]minus"}]], ",", 
   RowBox[{
    RowBox[{"b1", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]plus"}]]}], 
    "+", 
    RowBox[{"a1", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]plus"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9647305448137274`*^9, 3.964730578487331*^9, 
  3.9647368136082463`*^9, 3.9648318065685654`*^9, 3.9648348435812564`*^9, 
  3.964855502002127*^9, 3.964856172824696*^9, 3.9649173463044724`*^9, 
  3.965029702037156*^9, 3.9650311378534603`*^9, 3.9650904181010847`*^9, 
  3.9650913166269755`*^9, 3.96509666539027*^9, 3.9651142713862133`*^9, 
  3.9651173081315584`*^9, 3.96512382559156*^9, 3.9651797210521836`*^9, 
  3.9652169040612545`*^9, 3.965219441872903*^9, 3.965220251002331*^9, 
  3.965221669212132*^9, 3.965246826250303*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"22c4a68a-5336-48ec-83e9-b1c492faa782"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Mu]leftdot", ",", "\[Mu]rightdot"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"\[Mu]left", ",", "t"}], "]"}], ",", 
    RowBox[{"D", "[", 
     RowBox[{"\[Mu]right", ",", "t"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647303310318375`*^9, 3.9647303332945423`*^9}, {
  3.964730593744944*^9, 3.9647306540903654`*^9}, {3.9647367983351727`*^9, 
  3.9647368092351956`*^9}, {3.96481344072047*^9, 3.9648134618697214`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"98727a48-601a-4a65-994f-b83c25e400fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]minus"}]], " ", 
    "\[Omega]minus"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "b1", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]plus"}]], " ", 
     "\[Omega]plus"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]plus"}]], " ", 
     "\[Omega]plus"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964730655086206*^9, 3.9647368190791063`*^9, 
  3.9648318066343484`*^9, 3.9648348436337748`*^9, 3.9648555020792246`*^9, 
  3.9648561728774033`*^9, 3.964917346390334*^9, 3.9650297021314783`*^9, 
  3.965031137922973*^9, 3.965090418275226*^9, 3.965091316718112*^9, 
  3.965096665469759*^9, 3.965114271459577*^9, 3.965117308212576*^9, 
  3.9651238256726522`*^9, 3.9651797211276307`*^9, 3.965216904125882*^9, 
  3.965219441955695*^9, 3.9652202510715475`*^9, 3.9652216692718744`*^9, 
  3.9652468263353186`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"39ae52a8-6154-4853-9bb8-78d8d4813afb"]
}, Open  ]],

Cell["\<\
Using the continuity of \[Mu] and \[Mu]dot, we can find the values of a1 and \
b1.\
\>", "Text",
 CellChangeTimes->{
  3.9647308304638247`*^9},ExpressionUUID->"be7a4485-9fcb-44be-a888-\
68f83dbdb2d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]left", "==", "\[Mu]right"}], ",", 
      RowBox[{"\[Mu]leftdot", "==", "\[Mu]rightdot"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "b1"}], "}"}]}], "]"}], "/.", 
  RowBox[{"t", "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.964730679491482*^9, 3.964730758087648*^9}, {
  3.964736822968384*^9, 3.964736836971772*^9}, {3.964813469393208*^9, 
  3.964813488182276*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"ba6400bf-5e2f-4242-b145-2a2724d04fde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a1", "\[Rule]", 
     FractionBox[
      RowBox[{"\[Omega]minus", "+", "\[Omega]plus"}], 
      RowBox[{"2", " ", "\[Omega]plus"}]]}], ",", 
    RowBox[{"b1", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "\[Omega]minus"}], "+", "\[Omega]plus"}], 
      RowBox[{"2", " ", "\[Omega]plus"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.964730732427574*^9, 3.9647307587814865`*^9}, 
   3.9647368388196383`*^9, 3.964831806696341*^9, 3.964834843686582*^9, 
   3.9648555021516886`*^9, 3.964856172939888*^9, 3.964917346483532*^9, 
   3.9650297022354655`*^9, 3.965031137991583*^9, 3.965090418357562*^9, 
   3.9650913167950945`*^9, 3.965096665533058*^9, 3.965114271534053*^9, 
   3.965117308289561*^9, 3.9651238258596044`*^9, 3.96517972120052*^9, 
   3.965216904193445*^9, 3.965219442033539*^9, 3.9652202511447344`*^9, 
   3.96522166932436*^9, 3.9652468264141035`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"e0af84d2-a17b-4def-bb9f-2a7f7ce9fde5"]
}, Open  ]],

Cell[TextData[{
 "  Furthermore, we define ",
 Cell[BoxData[
  FormBox[Cell[TextData[{
    "\[Mu](t) = b(t) ",
    Cell[BoxData[
     FormBox[
      SuperscriptBox["e", "i\[Theta]"], TraditionalForm]],
     FormatType->TraditionalForm,ExpressionUUID->
     "363ccd95-4dc8-4980-a615-418504c48682"]
   }],ExpressionUUID->"36f2082d-a5fa-4d49-82cb-00e84a1f708d"], 
   TraditionalForm]],
  FormatType->TraditionalForm,
  FontWeight->"Bold",ExpressionUUID->"3ef31f65-fc2d-4b12-af2f-e267a8d648df"],
 ". Equating the condition ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{"|", " ", "\[Mu]", " ", 
      SuperscriptBox["|", "2"]}], "=", 
     RowBox[{"|", "b", 
      SuperscriptBox["|", "2"]}]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "8db189e8-3734-4cd2-b4fa-2ea6f177287d"],
 ", we solve for b. "
}], "Text",
 CellChangeTimes->{
  3.964474515084284*^9, {3.9647397128810067`*^9, 3.9647397221780643`*^9}, {
   3.9650794950705605`*^9, 
   3.965079525955724*^9}},ExpressionUUID->"02daddc1-4c6f-4b72-8712-\
991f218ff533"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Mu]real", ",", "\[Mu]imaginary"}], "}"}], "=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", 
    RowBox[{"ReIm", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], " ", "t", " ", "\[Omega]plus"}]], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Omega]minus"}], "+", "\[Omega]plus"}], ")"}]}], 
       RowBox[{"2", " ", "\[Omega]plus"}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]plus"}]], " ", 
        RowBox[{"(", 
         RowBox[{"\[Omega]minus", "+", "\[Omega]plus"}], ")"}]}], 
       RowBox[{"2", " ", "\[Omega]plus"}]]}], "]"}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9646658436517086`*^9, 3.9646658568911953`*^9}, {
  3.9647368482587676`*^9, 3.964736851932615*^9}, {3.9648135027983017`*^9, 
  3.964813508049038*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"14fa5c82-280a-484d-9591-cfdd59baaa37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"t", " ", "\[Omega]plus"}], "]"}], ",", 
   FractionBox[
    RowBox[{"\[Omega]minus", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"t", " ", "\[Omega]plus"}], "]"}]}], "\[Omega]plus"]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9646658594449015`*^9, 3.9647368692908754`*^9, 
  3.9648318067569313`*^9, 3.964834843739262*^9, 3.964855502230029*^9, 
  3.964856173003758*^9, 3.964917346590683*^9, 3.9650297023361654`*^9, 
  3.9650311381203394`*^9, 3.965090418447549*^9, 3.96509131697429*^9, 
  3.965096665628295*^9, 3.9651142716165495`*^9, 3.9651173084970675`*^9, 
  3.965123825940096*^9, 3.965179721308047*^9, 3.9652169042867703`*^9, 
  3.9652194421241817`*^9, 3.965220251288436*^9, 3.965221669407449*^9, 
  3.965246826606005*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"a752bc8a-f520-4299-9dfa-9b74e410d345"]
}, Open  ]],

Cell[TextData[{
 "Note that we have \[Mu]plus and \[Mu]minus for the two normal modes. For \
\[Mu]plus,",
 StyleBox[" \[Omega]minus = \[Omega]",
  FontWeight->"Bold"],
 ", and ",
 StyleBox["\[Omega]plus = \[Omega]p",
  FontWeight->"Bold"],
 ". For \[Mu]minus, ",
 StyleBox["\[Omega]minus = \[Omega]",
  FontWeight->"Bold"],
 " and and ",
 StyleBox["\[Omega]plus =",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Omega]p", "2"], "+", " ", 
     RowBox[{"2", "k"}]}]], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"afa4b0a1-87fe-47ae-8dd1-5c9e5416028d"],
 ". If we define ",
 StyleBox["\[Eta] = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]],
  CellChangeTimes->{3.9631776428271894`*^9, 3.963177719022374*^9},
  FontWeight->"Bold",ExpressionUUID->"68f89a70-fb50-4d7c-9b3c-d0f93dde0f35"],
 ", we can write"
}], "Text",
 CellChangeTimes->{{3.9644745583346086`*^9, 3.964474562914666*^9}, {
   3.9647369825518293`*^9, 3.964737005500453*^9}, 
   3.9647397351605396`*^9},ExpressionUUID->"c915f0ab-1aa5-4751-a82b-\
61b71ea6bbe8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellLabel->"In[44]:=",ExpressionUUID->"8be439a7-6229-4f8a-8636-b66e20e129ae"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{"2", " ", "k"}], 
    SuperscriptBox["\[Omega]p", "2"]]}]]], "Output",
 CellChangeTimes->{3.9644745783328247`*^9, 3.964483462750906*^9, 
  3.9644835599234695`*^9, 3.96455822514296*^9, 3.9645958780861235`*^9, 
  3.9646443536115294`*^9, 3.9647368954324245`*^9, 3.9648318068163867`*^9, 
  3.964834843791324*^9, 3.964855502304595*^9, 3.9648561730602407`*^9, 
  3.9649173466698637`*^9, 3.965029702434714*^9, 3.9650311381803555`*^9, 
  3.9650904185219884`*^9, 3.965091317049663*^9, 3.9650966657394004`*^9, 
  3.9651142717548156`*^9, 3.965117308582223*^9, 3.9651238260316253`*^9, 
  3.9651797213819323`*^9, 3.965216904417721*^9, 3.9652194422047005`*^9, 
  3.9652202513524504`*^9, 3.9652216694631586`*^9, 3.965246826679292*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"d18c46c9-e65a-4ee5-931a-1615a73951f2"]
}, Open  ]],

Cell[TextData[{
 "From \[Mu]plus and \[Mu]minus, we will have the corresponding values for b, \
They can be called bplus and bminus for the two normal modes. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"bplus", "=", 
    SqrtBox[
     RowBox[{"|", "\[Mu]plus", 
      SuperscriptBox["|", "2"]}]]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"a1146450-ad4e-4186-9e89-1349205908d3"],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"bminus", "=", 
     SqrtBox[
      RowBox[{"|", "\[Mu]minus", 
       SuperscriptBox["|", "2"]}]]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "1ecfd0bd-8a1d-499e-9447-ac06d07983e3"],
 " :"
}], "Text",
 CellChangeTimes->{{3.964837699210752*^9, 3.964837754153633*^9}, {
  3.9650796314770584`*^9, 
  3.9650796455689526`*^9}},ExpressionUUID->"a709eb9e-5ac6-412c-bc21-\
657deb3cdced"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.964558188146736*^9},
 CellLabel->"In[45]:=",ExpressionUUID->"7926125d-34f5-46c8-b3f3-b53d62cdc46e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
      SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
      "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", "k"}], 
             SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
        "2"]}], 
      RowBox[{
       RowBox[{"2", " ", "k"}], "+", 
       SuperscriptBox["\[Omega]p", "2"]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9644745932066927`*^9, 3.964483567083435*^9, 
  3.96455822849034*^9, 3.964645697135644*^9, 3.9647370333884945`*^9, 
  3.9648318075743012`*^9, 3.9648348444087563`*^9, 3.9648555030628743`*^9, 
  3.964856173207282*^9, 3.964917347725413*^9, 3.9650297032018642`*^9, 
  3.9650311389413953`*^9, 3.9650904192806644`*^9, 3.9650913178272767`*^9, 
  3.9650966664271717`*^9, 3.9651142725284204`*^9, 3.9651173093294535`*^9, 
  3.9651238268012733`*^9, 3.9651797221480846`*^9, 3.965216905199022*^9, 
  3.9652194423741765`*^9, 3.9652202521280036`*^9, 3.9652216702085614`*^9, 
  3.965246827501086*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"5987475b-5762-4cf6-abae-2baac9483e08"]
}, Open  ]],

Cell["\<\
Taking their time derivatives, we get bplusdot and bminusdot.\
\>", "Text",
 CellChangeTimes->{{3.964837799211938*^9, 
  3.9648378436947365`*^9}},ExpressionUUID->"df6bc578-9b3c-4c79-af3e-\
e5da75f4c6e1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplusdot", ",", "bminusdot"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"bplus", ",", "t"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{"bminus", ",", "t"}], "]"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964495135914375*^9, 3.9644951835462027`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"16a65e58-c411-4643-8fd5-1442ff92ff08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
    RowBox[{"2", " ", "\[Omega]p", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "k"}], "+", 
       SuperscriptBox["\[Omega]", "2"], "-", 
       SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", "k"}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", "k"}], 
             SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
        "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"]}], 
        RowBox[{
         RowBox[{"2", " ", "k"}], "+", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964495186004126*^9, 3.9645582671654577`*^9, 
  3.964646293285062*^9, 3.964831810332361*^9, 3.9648348467292485`*^9, 
  3.964855505722943*^9, 3.9648561752846017`*^9, 3.964917351097037*^9, 
  3.9650297059109526`*^9, 3.9650311414848356`*^9, 3.965090421998844*^9, 
  3.9650913205214877`*^9, 3.965096668768569*^9, 3.965114275076191*^9, 
  3.9651173120527325`*^9, 3.965123829539001*^9, 3.9651797248554077`*^9, 
  3.965216907776097*^9, 3.965219442763753*^9, 3.965220254656254*^9, 
  3.965221672907506*^9, 3.9652468301860423`*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"ee34cc58-73fd-4539-a08d-dfbabb2ac00c"]
}, Open  ]],

Cell["\<\
Now, the  argument of the exponential of the wavefunction can be written as\
\>", "Text",
 CellChangeTimes->{{3.9647381255930786`*^9, 3.9647381522499385`*^9}, 
   3.9648135274670434`*^9, {3.9650806161353235`*^9, 3.965080621113693*^9}, {
   3.9650806724959774`*^9, 3.9650806802587876`*^9}, {3.9650807593004446`*^9, 
   3.965080767695283*^9}},ExpressionUUID->"ae18176d-ae13-4c2b-8c87-\
83977bdf2ea3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SInitial", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A11", " ", 
        SuperscriptBox["x1", "2"]}], "+", 
       RowBox[{"A22", " ", 
        SuperscriptBox["x2", "2"]}], "+", 
       RowBox[{"2", "A12", " ", "x1", " ", "x2"}]}], ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "->", 
       FractionBox[
        RowBox[{"xPlus", "+", "xMinus"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"x2", "->", 
       FractionBox[
        RowBox[{"xPlus", "-", "xMinus"}], 
        SqrtBox["2"]]}]}], "}"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964738162851751*^9, 3.96473822126211*^9}, {
  3.9647385209087334`*^9, 3.9647385511056504`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"26f5ebb3-13df-4bfa-a31a-e2372ab4d7ca"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "A11"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xMinus", "+", "xPlus"}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"xMinus", "-", "xPlus"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"A22", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "xMinus"}], "+", "xPlus"}], ")"}]}], "+", 
       RowBox[{"2", " ", "A12", " ", 
        RowBox[{"(", 
         RowBox[{"xMinus", "+", "xPlus"}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.9647382122827206`*^9, 3.964738222595234*^9}, 
   3.9647385522463574`*^9, 3.964831810541772*^9, 3.9648348469188566`*^9, 
   3.96485550595316*^9, 3.9648561754871664`*^9, 3.964917351348937*^9, 
   3.965029706234807*^9, 3.9650311417389507`*^9, 3.965090422229639*^9, 
   3.965091320753312*^9, 3.9650966690401077`*^9, 3.965114275297353*^9, 
   3.9651173122912455`*^9, 3.9651238297637205`*^9, 3.965179725085699*^9, 
   3.9652169079882812`*^9, 3.9652194429177103`*^9, 3.9652202549267225`*^9, 
   3.96522167315681*^9, 3.9652468304188967`*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"4b03b864-5ef8-449c-865f-0dbd57128cd4"]
}, Open  ]],

Cell[TextData[{
 "The  argument of the exponential in the diagonalized wavefunction ",
 StyleBox["\[Psi]Diag ",
  FontWeight->"Bold"],
 "can be defined as,"
}], "Text",
 CellChangeTimes->{{3.964737308554451*^9, 3.9647373134357214`*^9}, {
  3.964737346191949*^9, 3.9647373721935177`*^9}, {3.964737447102619*^9, 
  3.964737485774849*^9}, {3.9647375192118587`*^9, 3.964737541557146*^9}, {
  3.964737705887577*^9, 3.9647377456942596`*^9}, {3.96473804873491*^9, 
  3.964738064725273*^9}, {3.964837854793743*^9, 3.9648378567352753`*^9}, {
  3.9650807793394413`*^9, 
  3.9650807934689984`*^9}},ExpressionUUID->"b56d5c02-cc86-4ca1-aa9f-\
7b03ae0f898a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SDiag", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["APlus", "2"]}], 
     SuperscriptBox["xPlus", "2"]}], "-", 
    RowBox[{
     FractionBox["AMinus", "2"], 
     SuperscriptBox["xMinus", "2"]}]}], " ", "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964737752389822*^9, 3.9647377689193373`*^9}, {
   3.964737858394515*^9, 3.964738025185735*^9}, {3.9647380741807404`*^9, 
   3.96473808980719*^9}, 3.964738515680705*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"5b938cfb-d4b8-412a-bcaa-26ee1fcb21d1"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "AMinus"}], " ", 
     SuperscriptBox["xMinus", "2"]}], "-", 
    RowBox[{"APlus", " ", 
     SuperscriptBox["xPlus", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9647380301557035`*^9, 3.9647380970368395`*^9, 
  3.964738232439561*^9, 3.9647387335522285`*^9, 3.9648318106037736`*^9, 
  3.964834846971526*^9, 3.96485550603015*^9, 3.9648561755441394`*^9, 
  3.964917351428585*^9, 3.965029706342267*^9, 3.9650311418142123`*^9, 
  3.9650904223024864`*^9, 3.965091320829238*^9, 3.9650966691194477`*^9, 
  3.965114275384656*^9, 3.96511731238358*^9, 3.965123829851055*^9, 
  3.965179725164118*^9, 3.965216908065482*^9, 3.965219443029209*^9, 
  3.96522025500602*^9, 3.9652216732167*^9, 3.9652468304944506`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"4617f2ce-e7f7-41e2-8a34-dda6394b315a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"SInitial", ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["xPlus", "2"], ",", 
     SuperscriptBox["xMinus", "2"], ",", 
     RowBox[{"x1Plus", " ", "xMinus"}]}], "}"}], ",", "FullSimplify"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.964738319601721*^9, {3.9647383881121206`*^9, 3.9647383950472083`*^9}, {
   3.964738592081937*^9, 3.9647386283453255`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"2ca11587-674c-47f2-805e-dc530a13a157"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "A11"}], "+", 
     RowBox[{"2", " ", "A12"}], "-", "A22"}], ")"}], " ", 
   SuperscriptBox["xMinus", "2"]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "A11"}], "+", "A22"}], ")"}], " ", "xMinus", " ", "xPlus"}],
   "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "A11"}], "-", 
     RowBox[{"2", " ", "A12"}], "-", "A22"}], ")"}], " ", 
   SuperscriptBox["xPlus", "2"]}]}]], "Output",
 CellChangeTimes->{3.9647383227706766`*^9, 3.9647383958105936`*^9, 
  3.9647386289366584`*^9, 3.9648318106687717`*^9, 3.9648348470240197`*^9, 
  3.964855506108304*^9, 3.964856175597584*^9, 3.9649173515086384`*^9, 
  3.9650297064456577`*^9, 3.9650311418883643`*^9, 3.965090422390274*^9, 
  3.9650913209039745`*^9, 3.9650966691990604`*^9, 3.9651142754403863`*^9, 
  3.96511731246712*^9, 3.965123829921046*^9, 3.965179725237597*^9, 
  3.965216908125306*^9, 3.965219443112323*^9, 3.9652202550854073`*^9, 
  3.965221673272738*^9, 3.9652468305767145`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"03040f84-8f47-42cc-aa18-acf030cbd784"]
}, Open  ]],

Cell["Comparing the coefficients, we get,", "Text",
 CellChangeTimes->{{3.964738765317667*^9, 3.9647387761668606`*^9}, 
   3.9647391571648026`*^9},ExpressionUUID->"bf6f4864-aa64-46ec-93b3-\
1eac5f04223b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"-", "AMinus"}], "2"], "==", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A11"}], "+", 
           RowBox[{"2", " ", "A12"}], "-", "A22"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["APlus", "2"]}], "==", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "A11"}], "-", 
           RowBox[{"2", " ", "A12"}], "-", "A22"}], ")"}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"APlus", ",", "AMinus"}], "}"}]}], "]"}], "/.", 
   RowBox[{"A22", "->", "A11"}]}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.964739181760558*^9, 3.964739202725849*^9}, {
  3.96473924834061*^9, 3.9647394306762915`*^9}, {3.9647394728117085`*^9, 
  3.964739482447325*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"50f23f8f-3e1c-4fd9-9531-67c93c6ff005"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"APlus", "\[Rule]", 
     RowBox[{"A11", "+", "A12"}]}], ",", 
    RowBox[{"AMinus", "\[Rule]", 
     RowBox[{"A11", "-", "A12"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.9647394314340763`*^9, 3.964739483952938*^9, 
  3.964831810730524*^9, 3.9648348470771875`*^9, 3.9648555061783886`*^9, 
  3.9648561756552477`*^9, 3.9649173515881395`*^9, 3.9650297065553465`*^9, 
  3.9650311419423733`*^9, 3.9650904224762783`*^9, 3.965091320979164*^9, 
  3.9650966692791758`*^9, 3.965114275523649*^9, 3.9651173125495276`*^9, 
  3.9651238300234103`*^9, 3.965179725309677*^9, 3.9652169081963315`*^9, 
  3.965219443188901*^9, 3.9652202551656017`*^9, 3.9652216733339243`*^9, 
  3.9652468306513844`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"677ac72f-defb-4060-b685-f7e076901ae1"]
}, Open  ]],

Cell[TextData[{
 "But ",
 StyleBox["Aplus = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "i"}], " ", "m"}], 
     RowBox[{" ", "hbar"}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Mu]plus", "'"}], "\[Mu]plus"], ")"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"a2f9cac2-e7d1-48be-9cbd-e8eb6ecfa290"],
 " and ",
 StyleBox["Aminus = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"-", "i"}], " ", "m"}], 
     RowBox[{" ", "hbar"}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"\[Mu]minus", "'"}], "\[Mu]minus"], ")"}]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"470f4f28-bbee-40eb-b225-1c75eddcab7c"],
 "."
}], "Text",
 CellChangeTimes->{{3.9647395564618855`*^9, 3.96473958501136*^9}, {
  3.9647396181075134`*^9, 3.964739639831212*^9}, {3.9647397913342423`*^9, 
  3.9647398641613812`*^9}, {3.9647408538986278`*^9, 3.964740864962189*^9}, {
  3.9650785740644903`*^9, 3.96507859249537*^9}, {3.965078628859289*^9, 
  3.9650786688232737`*^9}},ExpressionUUID->"7ae4dca1-0650-4fc8-829d-\
97b8acd471cf"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "\[Mu]plus", ",", "\[Mu]minus", ",", "bplus", ",", "bminus", ",", 
   "\[Theta]", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.964740508259905*^9, 3.964740514821556*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"1b09ba90-a0e6-45e1-9f5b-bedfea1f7f2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Mu]plus", ",", "\[Mu]minus"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"bplus", "[", "t", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], ",", 
    RowBox[{
     RowBox[{"bminus", "[", "t", "]"}], " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647405224836473`*^9, 3.964740527502818*^9}, {
  3.9647406744944825`*^9, 3.96474071385329*^9}, {3.9647410399279013`*^9, 
  3.9647410431481676`*^9}, {3.96483813562819*^9, 3.964838152483915*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"4b2ceef3-9e67-4844-af2c-aee62ba7fe23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
    RowBox[{"bplus", "[", "t", "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
    RowBox[{"bminus", "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964740710152787*^9, 3.964740784575509*^9, 
  3.964741044113427*^9, 3.964741104071045*^9, 3.9648318108050165`*^9, 
  3.9648348471391835`*^9, 3.9648555062703695`*^9, 3.9648561757209187`*^9, 
  3.9649173516869326`*^9, 3.965029706671261*^9, 3.9650311420688057`*^9, 
  3.965090422607111*^9, 3.965091321102253*^9, 3.9650966694065447`*^9, 
  3.9651142756513715`*^9, 3.9651173126804605`*^9, 3.9651238301592426`*^9, 
  3.965179725442131*^9, 3.965216908309371*^9, 3.965219443288096*^9, 
  3.965220255245299*^9, 3.9652216734037604`*^9, 3.9652468307432218`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"2fdae35b-80aa-491c-bd9b-186256d934c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Mu]plusdot", ",", "\[Mu]minusdot"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"\[Mu]plus", ",", "t"}], "]"}], ",", 
    RowBox[{"D", "[", 
     RowBox[{"\[Mu]minus", ",", "t"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647411780852966`*^9, 3.9647411823996625`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"864e36d3-a4dc-4feb-9f52-58b173edad85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
     RowBox[{
      SuperscriptBox["bplus", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
     RowBox[{"bplus", "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
     RowBox[{
      SuperscriptBox["bminus", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}]], " ", 
     RowBox[{"bminus", "[", "t", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9647411427466793`*^9, 3.9647411830359564`*^9, 
  3.9648318108714685`*^9, 3.9648348471922445`*^9, 3.964855506346774*^9, 
  3.9648561757736893`*^9, 3.9649173517628975`*^9, 3.9650297067728777`*^9, 
  3.965031142135784*^9, 3.9650904226885653`*^9, 3.9650913211801157`*^9, 
  3.9650966695018415`*^9, 3.9651142757198963`*^9, 3.9651173127558537`*^9, 
  3.96512383024339*^9, 3.965179725518388*^9, 3.965216908375286*^9, 
  3.9652194433712096`*^9, 3.9652202553294344`*^9, 3.9652216734622307`*^9, 
  3.965246830826413*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"a0ba1053-0657-4819-b2a4-e2548a482ba7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Aplus", ",", "Aminus"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      FractionBox["\[Mu]plusdot", "\[Mu]plus"]}], ",", 
     RowBox[{
      RowBox[{"-", "I"}], " ", 
      FractionBox["\[Mu]minusdot", "\[Mu]minus"]}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964740764571638*^9, 3.9647409006059875`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"81d57ccb-8519-43c3-84a3-2b86348cebdf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        SuperscriptBox["bplus", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"bplus", "[", "t", "]"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{
        SuperscriptBox["bminus", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"bminus", "[", "t", "]"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[Theta]", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964740901394447*^9, 3.9647411941339293`*^9, 
  3.964831810936908*^9, 3.964834847245658*^9, 3.964855506419483*^9, 
  3.964856175838395*^9, 3.964917351855392*^9, 3.9650297068745365`*^9, 
  3.9650311422027855`*^9, 3.965090422776392*^9, 3.9650913212649574`*^9, 
  3.965096669582247*^9, 3.965114275796549*^9, 3.965117312841155*^9, 
  3.9651238303388696`*^9, 3.9651797255913124`*^9, 3.9652169084523277`*^9, 
  3.9652194434589205`*^9, 3.965220255411521*^9, 3.965221673523527*^9, 
  3.9652468309070883`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"faf89293-1c06-40dd-8d93-6839adfa28a8"]
}, Open  ]],

Cell["Now we have Aplus and Aminus. But \[Theta]\[CloseCurlyQuote] = \
\[Omega]. So,", "Text",
 CellChangeTimes->{{3.9647413024349146`*^9, 3.964741327098213*^9}, {
  3.965082669453645*^9, 
  3.965082691421144*^9}},ExpressionUUID->"50927533-3ec5-475d-98b2-\
44c75c3c5ad3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["bplus", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], 
          RowBox[{"bplus", "[", "t", "]"}]]}], "+", "\[Omega]"}], "==", 
       RowBox[{"A11", "+", "A12"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{
            SuperscriptBox["bminus", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], 
          RowBox[{"bminus", "[", "t", "]"}]]}], "+", "\[Omega]"}], "==", 
       RowBox[{"A11", "-", "A12"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"A11", ",", "A12"}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9647409505492*^9, 3.964741018282732*^9}, {
  3.9647413476506786`*^9, 3.9647413945083203`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"297e8322-a564-4d83-8cc7-1b6aea5e16cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A11", "\[Rule]", 
     RowBox[{"\[Omega]", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox["bminus", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"bminus", "[", "t", "]"}]}]], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{
         SuperscriptBox["bplus", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"bplus", "[", "t", "]"}]}]]}]}], ",", 
    RowBox[{"A12", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          SuperscriptBox["bminus", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], 
         RowBox[{"bminus", "[", "t", "]"}]], "-", 
        FractionBox[
         RowBox[{
          SuperscriptBox["bplus", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], 
         RowBox[{"bplus", "[", "t", "]"}]]}], ")"}]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9647409805915494`*^9, 3.964741019501731*^9, 
  3.9647412088932667`*^9, 3.964741396245863*^9, 3.9648318110436926`*^9, 
  3.9648348473466945`*^9, 3.9648555065394735`*^9, 3.964856175946786*^9, 
  3.9649173519873185`*^9, 3.965029706992403*^9, 3.965031142322543*^9, 
  3.9650904228882427`*^9, 3.9650913213783197`*^9, 3.9650966697409143`*^9, 
  3.9651142759167724`*^9, 3.965117312955372*^9, 3.96512383047085*^9, 
  3.9651797256988816`*^9, 3.965216908570516*^9, 3.9652194435680027`*^9, 
  3.965220255526332*^9, 3.9652216736642923`*^9, 3.965246831033263*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"05dfb622-5ed9-46f0-98d5-31f67481f6ae"]
}, Open  ]],

Cell["Or equivalently we can write,", "Text",
 CellChangeTimes->{{3.9647419603938055`*^9, 
  3.9647419695435953`*^9}},ExpressionUUID->"b17b7a1c-113e-4380-afd5-\
81e6b4696a1d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"A11", ",", "A12", ",", "A22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       RowBox[{"I", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]], "-", 
       RowBox[{"I", " ", 
        FractionBox["bminusdot", 
         RowBox[{"2", "bminus"}]]}]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       RowBox[{"I", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "-", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["\[Omega]", 
          RowBox[{"2", 
           SuperscriptBox["bminus", "2"]}]], "-", 
         RowBox[{"I", " ", 
          FractionBox["bminusdot", 
           RowBox[{"2", "bminus"}]]}]}], ")"}]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       RowBox[{"I", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]], "-", 
       RowBox[{"I", " ", 
        FractionBox["bminusdot", 
         RowBox[{"2", "bminus"}]]}]}], ")"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellLabel->"In[56]:=",ExpressionUUID->"08ba9d29-b845-4d37-a283-d88473113c03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Omega]"}], "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "k"}], "-", 
        SuperscriptBox["\[Omega]", "2"], "+", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Omega]", 
      RowBox[{"2", " ", 
       SuperscriptBox["bminus", "2"]}]]}], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Omega]"}], "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "k"}], "+", 
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], ",", 
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "\[Omega]"}], "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "k"}], "-", 
        SuperscriptBox["\[Omega]", "2"], "+", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964741988483882*^9, 3.964831973829274*^9, 
  3.9648349977553277`*^9, 3.964855668509482*^9, 3.9648563358467073`*^9, 
  3.964917524952736*^9, 3.9650298598386087`*^9, 3.9650312939856124`*^9, 
  3.965090577435388*^9, 3.9650914766031723`*^9, 3.965096810751566*^9, 
  3.9651144340799985`*^9, 3.965117472079565*^9, 3.965123986831916*^9, 
  3.965179887680395*^9, 3.9652170644767265`*^9, 3.9652194501767635`*^9, 
  3.9652204092889853`*^9, 3.965221830622796*^9, 3.9652469878021994`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"edf9a1c0-5dc6-4bde-9e88-9482b25fe375"]
}, Open  ]],

Cell["And their complex conjugates as:", "Text",
 CellChangeTimes->{{3.9649201468420196`*^9, 
  3.9649201554240675`*^9}},ExpressionUUID->"8a95a739-67de-472e-b4c1-\
34217d883d9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"A11st", ",", "A22st", ",", "A12st"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      RowBox[{"I", " ", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]], "+", 
      RowBox[{"I", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      RowBox[{"I", " ", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]], "+", 
      RowBox[{"I", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      RowBox[{"I", " ", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["\[Omega]", 
         RowBox[{"2", 
          SuperscriptBox["bminus", "2"]}]], "+", 
        RowBox[{"I", " ", 
         FractionBox["bminusdot", 
          RowBox[{"2", "bminus"}]]}]}], ")"}]}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellLabel->"In[57]:=",ExpressionUUID->"ed0f306b-c343-472f-98a1-bfee68763805"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "k"}], "+", 
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], ",", 
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "k"}], "+", 
        SuperscriptBox["\[Omega]", "2"], "-", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["\[Omega]", 
      RowBox[{"2", " ", 
       SuperscriptBox["bminus", "2"]}]]}], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bplus", " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
         SuperscriptBox["\[Omega]p", "2"]]}]]}]], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "k"}], "-", 
        SuperscriptBox["\[Omega]", "2"], "+", 
        SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
     RowBox[{"4", " ", "bminus", " ", 
      SqrtBox[
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"2", " ", "k"}], 
         SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", 
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox[
              RowBox[{"2", " ", "k"}], 
              SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}],
          "2"], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Omega]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", 
            RowBox[{"t", " ", 
             SqrtBox[
              RowBox[{"1", "+", 
               FractionBox[
                RowBox[{"2", " ", "k"}], 
                SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
            "]"}], "2"]}], 
         RowBox[{
          RowBox[{"2", " ", "k"}], "+", 
          SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.96474201867905*^9, 3.964832081108872*^9, 
  3.9648350937947235`*^9, 3.9648557713713846`*^9, 3.9648564341705976`*^9, 
  3.964917618669427*^9, 3.9650299544146247`*^9, 3.965031387342136*^9, 
  3.9650906721629486`*^9, 3.965091565095961*^9, 3.965096897605033*^9, 
  3.9651145307527595`*^9, 3.965117576618132*^9, 3.9651240846586475`*^9, 
  3.9651799894692473`*^9, 3.9652171601669817`*^9, 3.9652194554459376`*^9, 
  3.9652205053955936`*^9, 3.9652219342297354`*^9, 3.9652470831400967`*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"35fac682-074f-4596-95d7-d838063df2a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 3: Evolution of the density matrix for \
randomly chosen values",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.964565501497383*^9, 3.9645655054570107`*^9}, {
  3.96456553970008*^9, 3.964565583590362*^9}, {3.964594900335518*^9, 
  3.964594900918564*^9}},ExpressionUUID->"a4214920-3244-4310-b7bc-\
2bd9e669dfef"],

Cell["\<\
Here we plot an arbitrary (uncontrolled) evolution of the oscillator, for \
arbitrary values of k, \[Omega], and \[Omega]p.\
\>", "Text",
 CellChangeTimes->{{3.9649204082704053`*^9, 3.9649204646309834`*^9}, {
  3.9649205375667114`*^9, 3.9649205837250633`*^9}, {3.96492299642689*^9, 
  3.964922997690259*^9}},ExpressionUUID->"e995efca-bbe5-4d98-b3d1-\
28aa96b4e519"],

Cell["Recall: ", "Text",
 CellChangeTimes->{{3.9647421540042205`*^9, 
  3.96474215687689*^9}},ExpressionUUID->"22cb9053-1724-4cb2-88cf-\
583fdc780640"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964742191719839*^9, 3.96474220656281*^9}, {
  3.964742267163758*^9, 3.9647422686893654`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"8625a163-0076-4d08-aaf9-9a627de8857d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
      SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"t", " ", 
        SqrtBox[
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"2", " ", "k"}], 
           SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
      "2"], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Omega]", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", "k"}], 
             SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
        "2"]}], 
      RowBox[{
       RowBox[{"2", " ", "k"}], "+", 
       SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
    RowBox[{"2", " ", "\[Omega]p", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "k"}], "+", 
       SuperscriptBox["\[Omega]", "2"], "-", 
       SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "t", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "+", 
       FractionBox[
        RowBox[{"2", " ", "k"}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"2", " ", "k"}], 
             SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}], 
        "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"]}], 
        RowBox[{
         RowBox[{"2", " ", "k"}], "+", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9647422748401437`*^9, 3.9648320823782244`*^9, 
  3.9648350950267015`*^9, 3.964855772868492*^9, 3.9648564354217167`*^9, 
  3.964917619880497*^9, 3.9650299557357187`*^9, 3.9650313887143373`*^9, 
  3.965090673424257*^9, 3.965091566231372*^9, 3.9650962225233436`*^9, 
  3.9650968988065653`*^9, 3.965114531820506*^9, 3.965117577775614*^9, 
  3.9651240858795705`*^9, 3.9651799906683035`*^9, 3.9652171613662095`*^9, 
  3.965219455667626*^9, 3.9652205067155356`*^9, 3.965221935468808*^9, 
  3.965247084371172*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"821a0bca-949b-4551-b7ea-34b8570f4ddc"]
}, Open  ]],

Cell[TextData[{
 "Now we can obtain the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "e855bd4a-bd01-413d-b6a3-8426b14895d6"],
 " for the particular values k=1, \[Omega]=1, and \[Omega]p=2."
}], "Text",
 CellChangeTimes->{{3.9648387594667215`*^9, 3.964838843756851*^9}, {
  3.9649215373618593`*^9, 3.9649216149722276`*^9}, {3.965079966890761*^9, 
  3.965079991566249*^9}},ExpressionUUID->"844cdf49-0fda-4af6-8c21-\
222bf40a2067"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["\[Omega]", 
         RowBox[{"2", 
          SuperscriptBox["bplus", "2"]}]], "-", 
        FractionBox["\[Omega]", 
         RowBox[{"2", 
          SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", " ", 
         FractionBox["bplusdot", 
          RowBox[{"2", "bplus"}]]}], "+", " ", 
        FractionBox["bminusdot", 
         RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "->", "1"}], ",", 
      RowBox[{"\[Omega]", "->", "1"}], ",", 
      RowBox[{"\[Omega]p", "->", "2"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9646489972717476`*^9, 3.9646491185638776`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"b3291e36-0066-4e2d-abce-104fd2ede1f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["4", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "-", 
    FractionBox["6", 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "-", 
    FractionBox[
     RowBox[{"5", " ", 
      SqrtBox[
       FractionBox["3", "2"]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["6"], " ", "t"}], "]"}]}], 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964649122437808*^9, 3.9647422867377453`*^9, 
  3.9648320845257*^9, 3.9648350971057277`*^9, 3.9648557750694876`*^9, 
  3.964856437509536*^9, 3.9649176222844048`*^9, 3.9650299579893527`*^9, 
  3.9650313907650447`*^9, 3.9650906755168514`*^9, 3.9650915681818376`*^9, 
  3.965096900694168*^9, 3.9651145338792257`*^9, 3.9651175801765614`*^9, 
  3.965124088187644*^9, 3.9651799928042493`*^9, 3.9652171634630327`*^9, 
  3.965219457730147*^9, 3.965220508908555*^9, 3.9652219376832285`*^9, 
  3.9652470864891877`*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"fb4300d1-4977-41db-84ff-b9f317d7f2ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "+", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "-", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ",", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "+", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "-", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "->", "1"}], ",", 
      RowBox[{"\[Omega]", "->", "1"}], ",", 
      RowBox[{"\[Omega]p", "->", "2"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellLabel->"In[60]:=",ExpressionUUID->"ada9dae5-0791-4d2a-818e-e0ff6efe0ca3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["4", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["6", 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      SqrtBox[
       FractionBox["3", "2"]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["6"], " ", "t"}], "]"}]}], 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}], ",", 
   RowBox[{
    FractionBox["4", 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["6", 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}], ",", 
   RowBox[{
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], 
     RowBox[{"5", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}]}]], "+", 
    FractionBox[
     RowBox[{"5", " ", 
      SqrtBox[
       FractionBox["3", "2"]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["6"], " ", "t"}], "]"}]}], 
     RowBox[{"7", "+", 
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.965079980442916*^9, 3.965090676927523*^9, 
  3.9650915694771194`*^9, 3.9650969019562263`*^9, 3.9651145353111763`*^9, 
  3.965117581761086*^9, 3.9651240896513753`*^9, 3.965179994285308*^9, 
  3.9652171648837347`*^9, 3.965219459678348*^9, 3.965220510304049*^9, 
  3.965221939190235*^9, 3.965247087895382*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"82389da9-ea2f-4164-9fb2-7d4c25d2866e"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary terms of  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["A", "12"], "2"], TraditionalForm]],ExpressionUUID->
  "4e0fcb14-3eb3-4b61-8a13-0a1f40f1bab3"],
 "  is given by:"
}], "Text",
 CellChangeTimes->{{3.9650799528948793`*^9, 3.965079959623951*^9}, {
  3.9650799986123004`*^9, 
  3.965080005334078*^9}},ExpressionUUID->"4c7d058d-5bd3-4edc-bc8e-\
7494f78cb54f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "->", "1"}], ",", 
      RowBox[{"\[Omega]", "->", "1"}], ",", 
      RowBox[{"\[Omega]p", "->", "2"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964559195322569*^9, 3.9645592961022177`*^9}, {
  3.9645599838067446`*^9, 3.964560042911912*^9}, {3.9645601795924253`*^9, 
  3.964560193610013*^9}, {3.9646467409972086`*^9, 3.96464688331141*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"25050b8c-541e-4441-af94-7b1b72fdd123"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"9", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"4", " ", "t"}], "]"}]}], "-", 
          RowBox[{"10", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], "2"]}], "-", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"7", "+", 
             RowBox[{"5", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"4", " ", "t"}], "]"}]}], "-", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{"5", "+", 
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "t"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], ")"}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"5", "+", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"4", " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"7", "+", 
       RowBox[{"5", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.964559976795805*^9, 3.9645600463213477`*^9, 
  3.9645602245181737`*^9, 3.964646920420253*^9, 3.9647423330438275`*^9, 
  3.9648321206722984`*^9, 3.964835129083316*^9, 3.9648558098700085`*^9, 
  3.9648564724267516`*^9, 3.964917654211591*^9, 3.965029990204995*^9, 
  3.96503142289301*^9, 3.9650907094965577`*^9, 3.9650916027807226`*^9, 
  3.9650969312786684`*^9, 3.96511456756279*^9, 3.9651176186765604`*^9, 
  3.965124122978123*^9, 3.965180027139743*^9, 3.9652171978674912`*^9, 
  3.965219589750355*^9, 3.965220542465167*^9, 3.965221975279139*^9, 
  3.9652471202544904`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"825eb23d-4f7e-4faa-9408-af341f01f24a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
         RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
      RowBox[{"2", " ", 
       SuperscriptBox["bminus", "3"], " ", 
       SuperscriptBox["bplus", "3"]}]]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k", "->", "1"}], ",", 
      RowBox[{"\[Omega]", "->", "1"}], ",", 
      RowBox[{"\[Omega]p", "->", "2"}]}], "}"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9645593158546805`*^9, 3.964559344751009*^9}, 
   3.9645602474597616`*^9, {3.9646487307952175`*^9, 3.9646488491151433`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"3b5a0614-9d06-4f42-9bb8-c96cfc7b6374"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"9", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "t"}], "]"}]}], "-", 
        RowBox[{"10", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"84", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"4", " ", "t"}], "]"}]}], "-", 
        RowBox[{"50", " ", 
         SqrtBox["6"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", "t"}], "]"}]}], "-", 
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["6"]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             SqrtBox["6"]}], ")"}], " ", "t"}], "]"}]}], "+", 
        RowBox[{"15", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["6"]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"4", " ", "t"}], "-", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", "t"}]}], "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"4", " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"7", "+", 
         RowBox[{"5", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}], "2"]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9645602543787746`*^9, 3.9646488643132224`*^9, 
  3.964742339953634*^9, 3.964832127724284*^9, 3.964835135552762*^9, 
  3.964855816901422*^9, 3.9648564792823687`*^9, 3.9649176611451683`*^9, 
  3.965029997177958*^9, 3.9650314298866615`*^9, 3.9650907161843047`*^9, 
  3.9650916113293505`*^9, 3.9650969374373827`*^9, 3.9651145743644037`*^9, 
  3.965117626472208*^9, 3.9651241305855675`*^9, 3.965180034081131*^9, 
  3.9652172046150737`*^9, 3.9652196139574223`*^9, 3.9652205492935467`*^9, 
  3.9652219825411987`*^9, 3.9652471271027975`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"60d936de-7d3a-400a-80ee-0eab16e1adc2"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "c44f0775-e845-42b8-9b8c-4532474d377b"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{{3.9649216360721617`*^9, 3.964921729409125*^9}, {
  3.9649222120024157`*^9, 
  3.9649222695723114`*^9}},ExpressionUUID->"5c91eb46-eab3-476e-8ea4-\
557c195e51ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964560745795092*^9, 3.9645607667217426`*^9}, {
  3.9645616336547256`*^9, 3.964561648120287*^9}, {3.9645644118292713`*^9, 
  3.964564417755742*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"d21e641c-3bed-4a99-b487-905cfa8a65b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"926", "+", 
      RowBox[{"42", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}], "-", 
      RowBox[{"50", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}], "-", 
      RowBox[{"15", " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"2", " ", 
          SqrtBox["6"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["6"]}], ")"}], " ", "t"}], "]"}]}], "+", 
      RowBox[{"15", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "5"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["6"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["6"]}], ")"}], " ", "t"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"16", " ", 
      RowBox[{"(", 
       RowBox[{"29", "+", 
        RowBox[{"9", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "t"}], "]"}]}], "+", 
        RowBox[{"10", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "t"}], "]"}]}], "+", 
       RowBox[{"5", " ", 
        SqrtBox["6"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}]}], 
    RowBox[{"29", "+", 
     RowBox[{"9", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}], "+", 
     RowBox[{"10", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["6"], " ", "t"}], "]"}]}]}]], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "158"}], "-", 
      RowBox[{"42", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "t"}], "]"}]}], "+", 
      RowBox[{"50", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["6"], " ", "t"}], "]"}]}], "+", 
      RowBox[{"15", " ", 
       RowBox[{"(", 
        RowBox[{"5", "+", 
         RowBox[{"2", " ", 
          SqrtBox["6"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SqrtBox["6"]}], ")"}], " ", "t"}], "]"}]}], "+", 
      RowBox[{"15", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", 
          SqrtBox["6"]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           SqrtBox["6"]}], ")"}], " ", "t"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"16", " ", 
      RowBox[{"(", 
       RowBox[{"29", "+", 
        RowBox[{"9", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", "t"}], "]"}]}], "+", 
        RowBox[{"10", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["6"], " ", "t"}], "]"}]}]}], ")"}]}], ")"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.964560773227908*^9, {3.964561636670295*^9, 3.9645616533720045`*^9}, 
   3.964564818398667*^9, 3.964649143099015*^9, 3.9647423518388023`*^9, 
   3.9647442787164173`*^9, 3.9647446937409906`*^9, 3.9648321403317823`*^9, 
   3.964835146345582*^9, 3.9648558293606234`*^9, 3.9648564916838417`*^9, 
   3.9649176730259094`*^9, 3.9650300092881465`*^9, 3.965031441683386*^9, 
   3.965090726549468*^9, 3.965091624330229*^9, 3.965096946777299*^9, 
   3.9651145847576213`*^9, 3.96511763838932*^9, 3.9651241421976833`*^9, 
   3.9651800448270836`*^9, 3.965217214854194*^9, 3.965219699394786*^9, 
   3.965220559380769*^9, 3.965221993777565*^9, 3.9652471376694355`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"3a0fe69e-ea77-44ac-93dc-9f9bef7ec5ec"]
}, Open  ]],

Cell["Here, we consider the evolution for a time interval T = 20.", "Text",
 CellChangeTimes->{{3.964922287544798*^9, 3.964922335173007*^9}, {
  3.9649223794124374`*^9, 
  3.9649223845869045`*^9}},ExpressionUUID->"6a60ea14-4ead-4acd-a8ee-\
1d6244089f18"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", "20"}]], "Input",
 CellChangeTimes->{{3.964744158258173*^9, 3.9647441642771034`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"a003e521-3589-45c1-a86c-d12bd41de054"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.9647441656664033`*^9, 3.964744693934078*^9, 
  3.9648321404266176`*^9, 3.964835146548583*^9, 3.964855829531769*^9, 
  3.964856491772577*^9, 3.964917673229782*^9, 3.965030009424551*^9, 
  3.9650314417753344`*^9, 3.9650907266485577`*^9, 3.9650916244475374`*^9, 
  3.9650969468563733`*^9, 3.965114584849501*^9, 3.9651176385086517`*^9, 
  3.9651241423180904`*^9, 3.9651800449314184`*^9, 3.9652172149534802`*^9, 
  3.9652196994904137`*^9, 3.9652205594680843`*^9, 3.9652219938807096`*^9, 
  3.9652471377598133`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"8308a3a9-9911-40d1-844c-d7ef0ec21f1b"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t=0 be Xi, Yi, and Zi. \
\>", "Text",
 CellChangeTimes->{{3.9649223988092885`*^9, 3.964922437850222*^9}, {
  3.964922503330377*^9, 3.9649225125016956`*^9}, {3.964922637712041*^9, 
  3.9649226472802563`*^9}, {3.964922817603629*^9, 3.964922825564541*^9}, {
  3.9649228810754833`*^9, 
  3.964922885888174*^9}},ExpressionUUID->"1e4c442c-f84c-4876-ba02-\
8a987904af60"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964744177935873*^9, 3.9647442457157526`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"379318d8-e84d-438c-a690-c7ab38986005"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.9647442411527214`*^9, 3.964744246535447*^9}, 
   3.964744284515112*^9, 3.9647447248793*^9, 3.964832140494794*^9, 
   3.964835146597106*^9, 3.964855829634015*^9, 3.964856491849262*^9, 
   3.964917673335372*^9, 3.9650300095354195`*^9, 3.965031441849496*^9, 
   3.965090726736515*^9, 3.965091624535684*^9, 3.96509694693614*^9, 
   3.965114584921005*^9, 3.9651176386197777`*^9, 3.965124142416661*^9, 
   3.9651800450050144`*^9, 3.96521721502122*^9, 3.965219699564814*^9, 
   3.965220559541175*^9, 3.9652219939555016`*^9, 3.9652471378451147`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"36d26ea7-7f85-4b68-8543-a79f4307eee1"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when when t=T be Xf, Yf, and Zf. \
\>", "Text",
 CellChangeTimes->{{3.9649228554498672`*^9, 
  3.9649229198807807`*^9}},ExpressionUUID->"44b739d0-b6ee-48d2-9408-\
f15014ef7f23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "T"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647443074798665`*^9, 3.964744341361928*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f496b906-671a-4c10-9efe-338d70ef2336"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"463", "+", 
     RowBox[{"21", " ", 
      RowBox[{"Cos", "[", "80", "]"}]}], "-", 
     RowBox[{"25", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", "80", "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"40", " ", 
        SqrtBox["6"]}], "]"}]}], "-", 
     RowBox[{"30", " ", 
      SqrtBox["6"], " ", 
      RowBox[{"Sin", "[", "80", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"40", " ", 
        SqrtBox["6"]}], "]"}]}]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"29", "+", 
       RowBox[{"9", " ", 
        RowBox[{"Cos", "[", "80", "]"}]}], "+", 
       RowBox[{"10", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"40", " ", 
          SqrtBox["6"]}], "]"}]}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9", " ", 
        RowBox[{"Sin", "[", "80", "]"}]}], "+", 
       RowBox[{"5", " ", 
        SqrtBox["6"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"40", " ", 
          SqrtBox["6"]}], "]"}]}]}], ")"}]}], 
    RowBox[{"29", "+", 
     RowBox[{"9", " ", 
      RowBox[{"Cos", "[", "80", "]"}]}], "+", 
     RowBox[{"10", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"40", " ", 
        SqrtBox["6"]}], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", "79"}], "-", 
     RowBox[{"21", " ", 
      RowBox[{"Cos", "[", "80", "]"}]}], "+", 
     RowBox[{"25", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", "80", "]"}]}]}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"40", " ", 
        SqrtBox["6"]}], "]"}]}], "+", 
     RowBox[{"30", " ", 
      SqrtBox["6"], " ", 
      RowBox[{"Sin", "[", "80", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"40", " ", 
        SqrtBox["6"]}], "]"}]}]}], 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{"29", "+", 
       RowBox[{"9", " ", 
        RowBox[{"Cos", "[", "80", "]"}]}], "+", 
       RowBox[{"10", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"40", " ", 
          SqrtBox["6"]}], "]"}]}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9647443607082925`*^9, 3.9647447316195703`*^9, 
  3.9648321649603176`*^9, 3.9648351591338243`*^9, 3.9648558522924805`*^9, 
  3.964856504664384*^9, 3.9649176967560015`*^9, 3.9650300332720523`*^9, 
  3.9650314658095293`*^9, 3.9650907500493135`*^9, 3.965091652180215*^9, 
  3.965096968863629*^9, 3.9651146089332952`*^9, 3.965117664116578*^9, 
  3.96512416821192*^9, 3.965180069108459*^9, 3.965217239023494*^9, 
  3.9652199951954603`*^9, 3.965220583137659*^9, 3.965222019393399*^9, 
  3.965247161542407*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"9c56b56c-4565-47e2-9a80-a0b9b6d62a34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Green", 
        ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9646505716886635`*^9, 3.964650581143256*^9}, {
   3.964666382884485*^9, 3.964666383114152*^9}, {3.9647445586111836`*^9, 
   3.964744570633337*^9}, 3.964744628025799*^9, {3.964744711769672*^9, 
   3.9647447133537936`*^9}, {3.9647453082754927`*^9, 
   3.9647453815092134`*^9}, {3.9648102865843515`*^9, 3.964810296271567*^9}, {
   3.9650960949076157`*^9, 3.9650960965321817`*^9}, {3.9650961672085123`*^9, 
   3.9650961884955482`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"e9c965a2-2de8-4962-9ca0-1b8c0316a60c"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
TpA=
        "]]},
      Annotation[#, "Charting`Private`Tag$109626#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$109647#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[0, 1, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[
         1, 8] (29 + 9 Cos[80] + 10 Cos[40 6^Rational[1, 2]])^(-1) (463 + 
         21 Cos[80] - 25 (1 + 3 Cos[80]) Cos[40 6^Rational[1, 2]] - 30 
         6^Rational[1, 2] Sin[80] Sin[40 6^Rational[1, 2]]), 
        2 (29 + 9 Cos[80] + 10 Cos[40 6^Rational[1, 2]])^(-1) (9 Sin[80] + 
         5 6^Rational[1, 2] Sin[40 6^Rational[1, 2]]), 
        Rational[
         1, 8] (29 + 9 Cos[80] + 10 Cos[40 6^Rational[1, 2]])^(-1) (-79 - 21 
         Cos[80] + 25 (1 + 3 Cos[80]) Cos[40 6^Rational[1, 2]] + 
         30 6^Rational[1, 2] Sin[80] Sin[40 6^Rational[1, 2]])}, {
       2.753576533027453, -1.600259856935338, -0.31682025994328006`}]]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{344.54491545540736`, 345.},
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{1.0000000000007496`, 4.897192883295908}, {-1.9362489706194776`,
    1.9437846061910982`}, {-0.8928216184278592, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{-0.031215024214223064`, -3.383046474192222, \
-0.06342062534285464},
  ViewVertical->{-0.010791952894015258`, -0.6059945175542061, 
   0.7953956112821963}]], "Output",
 CellChangeTimes->{3.9650969691188993`*^9, 3.965114609145161*^9, 
  3.965117664322522*^9, 3.9651241684931297`*^9, 3.96518006929775*^9, 
  3.9652172392146597`*^9, 3.9652205833481703`*^9, 3.965222019599699*^9, 
  3.965247161762679*^9},
 CellLabel->"Out[67]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXucX8lVH1iof91qSd1Sa0bz0Dysa3mwke0BgQDHEJuLGcYexhhhZ7DH
NvjahsFADAKMJxDIXB7JDo8g1gkhEx7tBfOaBGReTsIQmgBZHJggCGyWXTLb
yS5JCMajbB5LstlE6ar6Vt1zqr636t6fur3/5Pf56Dc993duPc751jmnTp2q
+uy3vusdX/TOt77rS97+1uaVX/XWS+/4krd/dXP/V3zV3qOVjzJmcXTv37HG
LPb+vm5M7eu4Mf///XTE/f+i2ftq8e/83r9j9ulKG6j+LX9t9SH8v/23vfev
EUXuit+a0YKOeuInBHG/92/dP95JHrtX/h0vY/Xk3tdTeLaLvpg1X1ArCgoN
M/8+LeiYL+geQbQTerWa92prtKANT9wl7FnkZYSGmf+QlrGZc8YSH/KPe6OL
dq/8P7yMNcqZvc9KKMH8Sfrm8ZwV2/jbHHIUK1tGfHgfTvhqJB/C2332dtZ6
X8HiKfF2lN1/4sSrVwVxlJ0j+I+8cWu/S4rfHn0JfJE9ssSd6NnFOl9cKY77
EOcV/GKbf36UIYDEM6LyrVjG6ha6nHc9qx/4fFQU1JuIz7OCE5dHy/CDZXEh
YR8GnGRQG14ZGXDZoDqsmbIrmTIy+hdSjLby9RpTMlWUCvm//3RAP624X1aa
zU0PaPtZp+Svsl8bW2tra5uWeuP8zTffvNGePn1642LTNEe65z//+YvO/nVp
76+VS/av3j7r9/5av2z/umz/2rZ/bdtfr9i/rti/duwbO/bXq3t/rV61z3bt
s1371zX717W9v/ZG6Ytf/OLrjzzyyH133nknbJto4TdObOG6beFiTgvXbQsX
uoXruoUL28L163t/bV7f+2vzuq33um3BdduW63uteoNtpftr0z47Zn89ZOnM
6vW9Dtm/3H/3OvjA3XffrTr487FvG7pvm8v1bd32bXW5vm3Ylm6O9Q3P3K97
vTls31i7fvbs2SPXQ1GHnt373zVX8m6Q9cLV+/TeD4un9l7zrboSW2rbvHCt
f88eaxaP3Xrrrevvvv3221fftrW1td5HyNnum8VDeyU8sEcS/q1bfh61qFl5
yd7/blw4derUpmXhwgF/xfLwWtd1lvV7psN+r1jmxiHhtaDXU5sTpeAadNQ1
zUrhyJgUhjEwSGFBxsCoFI5Zjm9a3r/eSmEzlYKjs6VEAaxfCyUfdXW42q7G
Fmje+7GwHVt/OeDqiGa777nlgeOG54vl0DHLK8e1n/LMtD9bJtt/uw8//PDV
173udfZvx3Kg/oxXTPb9KIWjeoCv2h8Pnz1+/HgiA7NimxKEb468Zg8oK6/Z
A8ogDd+Lx/cQsXjCYs6h6om9/z3ypP1fJ5Kn9v5yaulIIpJnLHyfPXfu3ErU
TY63a5bLhy3WN67vlXfo+l69x67vNSGR0KADmIR8eURC60RCR7SEVi5HpBEJ
ObYcKUrIKZtHvRnoL1y4EMR05f7777cPpaggqed4ST3+yZ/8yddf+MIX2u6b
w7YjG0QRlpng3jhKmCBUxEQmOAGvFpngzMKmMxBuIGsmuK+Xub4tbO8DJy6/
9KUv9V7eCsOt58biyfvuu8+5QHvotFhYi91LRmGqAYvdW9ej0HVvvTgKk+5t
6O65L3iaQf/Zf/bNlVof1ywnXB9BYv9/rJIPulfciJUVnTx8+DAaUKhpJdS0
a1EI/bzdtq2tKHEC3Ndv+9pSPePIV2u1edzv/WFZbBlpX7Wk73vFK15hG5xU
9luef+loOVyr54isxz6wzQ117bz61a92timp7Dc5INd1ZdI/AgtVZYcGaYQK
7atO2SYVPs3RcWR6hc5zGyoMr9iKWYX/kCPFye7o5Fq3nR/gi7J8DK8884Y3
vIHV+msFxBybV+sqr9X6HGmt/4BDZ3NehWtDhQEXlnPW00kr/BUOn+PVCi/d
e++9sUIP7VXLHFmhM71JhX+fwwfBCIvyKRWuDxXaYR9KYhX+YgE+W9NrtaDF
bFbWGH4XFf5CATkn51WImJfTdkI6rqik1r/LkXPz5Aqtm4PYw6p9FphlS2GK
529z5JyaV+HmwKygeMYq/DmOnFuqFVpUxAqP5xValLMKf7qAnFsn12ptNcJZ
Sr+Oqbv3F+Bz2/RaLXwQdpOKZ6zWn+TwOT2vwpPTK/xbHD53zKvwprxCKyrL
vLTCJzl87pxcoXW/jB9PkzTdjxbgc5eu1bW3UOupodaauvthT+peT+Fzd7VW
h7pQq8d4Td39EEfOGV2Xa2qhLo9spelsiUzTvZcjp5leoe337b7CKZruBzhy
njuvQj+UJmm67y0g5+zkWm3oxNyR1zqm7p4oIOd582q9c+hAzZ38Hg6fj55X
4V1DhTXF890cPs/3pYbHpELrsMcK/VCapOn+CofPC6ZVuFfB01YnPYdXyDTd
dxXg8zHzaj0z1FpTd99ZgM+5ybXaea9fB9DqbqzW7+DwedG8Cp+bVzimX7+N
w+fF8yr046mmWh/nyLm3WpcVfazrHt+5KU7ktxSQ87Hzav3oAQ41/fpNBeR8
3LRaraKxI8GP4tUpE+eeI+fjJ1dogzXGj+JVK9yapvsLHDmfMK/CjxlEVFM8
X8/hc2FehX7sTtJ0XzswI4PPJ1ZrtTXYWu1agHnh9FofLcDnk+bV+qK81jF3
8ms8c+WosrW8RFdoBzWrcI9Dz1r96tXGJHfyqzl8/tS8Cu8dKqxpuq/k8Hnp
vAr9AK5pui8vIOdTJldoA6luMXqiuvuyAnI+tVqrC2qGWr3amOROfglHzsvm
VejVxiR38os5cl7uSw2SGavQulkW/xfyCsc8yS/iyPm0eRV6jTFpzvy2Anza
ebV6jTFJ8XQF+Hz6vFo/eXqtX8Dh8xnzKnwJr5Bpujdz+Nw3XqHzGg/Zerx2
mqTf3shB85lTqnnpUE3NYXx9ASr3V+oyK3boXQ/rwKTWMV36UAEqr5xX66fm
8g/BX1Hh6zhKHphclxvXf9o3W/pI9lU25i9ylHzWvAq9Epyk1V7D8fJgvcI9
Sx8rfHle4ZjD+OCAnGff8pa3KOS8el6tXhPy+fEl+9OhrS1Z9T8pwOez51Xd
DlVnmuYr3G9r1/fq3N31/554wpjLl/d0XSfb89scXZ+jm2Jhkzbl3Llz1tty
TfE6kiu9d3r6PW1kbHPsP7Nwf8VG/BZH3MV5jXgFb4Rbnfuznr5tRSNW/PfV
q2b4DG36R75NKSg/d3KbXOc/Y2iT1JpOOXufZeXSpbxNV67QNv2GL82+neH2
tdWG2WmVbZjNqjBe53N1/qWe3oIlbZh9Rhr26740iurXzWvYZw4Ny1Sx97dW
dnbyhl2U6aBDw/yKYwbvh+a1yev1zPN9h3265uu3yCL1+7XxDNmfBw6jWax+
y8o91Lj6X+V5Qh3hR2IjUnEsJEYsZl4/r1ZvYbgj/IWe/vz58UGNtACZfxXB
+obJLXFLq581FJXZkrd7ejayLU6ITPzKrAKr1ReuYQ/Pa5gwJJkn7T1ZOrxH
RtGverGlYH1TtU02uyS2yRsw7my/1dNvb+dtunSJtgmryi7nRfgob57cJqd+
vWXj9qHz9DMG9S/7NqWq+fOntWlPzK5Nrym06S32p2RQeU5wPH9BvWoLm1D1
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\
\>", "ImageResolution" -> \
300.],ExpressionUUID->"cadc6e25-0646-48ae-ab97-fe1a7cdc531b"]
}, Open  ]],

Cell[TextData[{
 "This represents the evolution of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Rho]", 
    RowBox[{"(", "1", ")"}]], TraditionalForm]],ExpressionUUID->
  "6c8e2b04-053b-4cbb-99dd-55b158b3d7f0"],
 "(x1 x\[CloseCurlyQuote]1) represented in the R-space, assuming a randomly \
chosen set of the tunable parameters \[Omega]\[CloseCurlyQuote], k and \
\[Tau]. The oscillator-1 is initially in the ground state (blue dot) and \
evolves, at t = \[Tau], to the green point. The red curve is the family of \
thermal states."
}], "Text",
 CellChangeTimes->{{3.9648389287847958`*^9, 
  3.964839038472803*^9}},ExpressionUUID->"327d642c-6db5-4e28-90a7-\
e9fce160e583"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["C. SECTION IV: THERMALIZATION FROM QUENCHING",
 FontWeight->"Bold",
 FontVariations->{"Underline"->True}]], "Section",
 CellChangeTimes->{{3.9645701316718273`*^9, 3.9645701613685813`*^9}, {
  3.965087056870804*^9, 3.9650870585993567`*^9}},
 TextAlignment->Center,ExpressionUUID->"c6853a78-e4af-4da2-9d1c-94da3bd4bfb2"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 4: The Energy-Frequency diagram",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9645697998623753`*^9, 3.964569870070319*^9}, {
  3.964595110083934*^9, 
  3.964595111998764*^9}},ExpressionUUID->"41d99864-b7a6-4bfb-8092-\
3632255c2655"],

Cell[TextData[{
 "Now let us look at the energy frequency diagram of the oscillator when it \
undergoes our protocol. We will represent the dimensionless frequency \
parameter  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]tilde", "=", 
    FractionBox[
     RowBox[{"\[Omega]", "'"}], "\[Omega]"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c47d0434-ae03-4446-8890-fece4e015e4c"],
 "  on x-axis, and the ratio of average energy and ground state, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["U", "\[Beta]"], 
     SubscriptBox["E", "g"]], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2e1d301d-6c5e-46f3-8691-ec409fdf50e9"],
 "on y-axis."
}], "Text",
 CellChangeTimes->{{3.964925213685252*^9, 3.964925245364447*^9}, {
  3.96492742397324*^9, 3.964927432730919*^9}, {3.964928571047783*^9, 
  3.9649285895500975`*^9}, {3.9649287035726995`*^9, 
  3.9649288073708296`*^9}},ExpressionUUID->"0f848190-9e84-4a4e-a45d-\
352bc7520c4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"y", "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Omega]\>\"", ",", 
         RowBox[{"Rotate", "[", 
          RowBox[{
          "\"\<\!\(\*FractionBox[\(U\), SubscriptBox[\(E\), \(g\)]]\)\>\"", 
           ",", 
           FractionBox[
            RowBox[{"-", "\[Pi]"}], "2"]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", "Black", "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", "False"}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"x", "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"y", "==", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0.5"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.55", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQfU+iI4Wh663jlx33c0D0td5bhSDaZ5tWMYhesHJG
JYiO0voPpqve3KkF0V+VpDpA9AEui14QzbZRbDpYfoP4IhC9wUMDTGvtmmSr
AaRdrjq5gehb103SQTRXYGs2iN7B2lAOop8vz6sC0SVsu5tB9PowuxYQfS01
aQqI1lPQnQeiiyKeLQLRC67lLQbRX599WQ+iW75abATRB3YEbgPRHzLUtoPo
V9us9oDtCUg8CqKvzFA4D6KfmZ6+CKJ7Q62vgeg8Qe5bYPWv1Z6D6Ha79x/B
7mzt/A6iV5leB9Prf0ewagLpBIcmMP3OfZsQiFZa9BNM1zB06oBoc2MRYxAt
N5OvHkQbucaAaZbmG90getLB/vkg2nn6wSU6QNqs6MAKEP12mvsXayDt1bz/
N4gGABRdzFg=
  "],
 CellLabel->"In[68]:=",ExpressionUUID->"939b43f3-a1ef-4ec8-a303-fe64e14ada58"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxd0zlIQ0EUBdBgqWlsNGClBluDpQopNaVLbDUBKxVbxdIFS00lqEEEQVNY
CBFBEPWjKC5xjUvct8R9iaWomRtyH7wh4XPI/Jn37kwK/e21zVk2m82b+ppn
eny4M89EZzDeGXynt5OVkWSleLYtlvq80aNx84K42+fo8znELWb67Ctd5zVD
XB4xG7zQRZ6A0xMQZ1suu+USf5pyIs/0CQoSL5npdvFkyIwnesBpNhB3mHbj
j3SjKb9PXGXKcYpLzfJWgs4z033i3z8z4vQD8hRvIU9xGHk+qDzFPchT3Io8
7+l65CmuQJ53dDHyFOcgT/EX8rylT5GneBl5iqeQ5w09iDzF6Xav6SbkKa5G
nmIsb13R+cjzSuV5qe6jeAR5Xah8zmm0lzxT9+lM9Ruj0V7oVN2PE1W/GO35
jtV5H6n/S5TGdEdUnd8hjTgDB/Q3GthX5yFGOZ492o+CdlW+O3T6KR5Dftvq
/mzSiLNtg+5CHuvq/q+pflfpBvS3ou6bpepfpstQ7yI9jPoWVD3zdAH2n6Nr
sF9YrT9DT2C9aToX70+q+eN0CX4fon96jftVnpnx4f4HTCS8DQ==
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["y", HoldForm], "\[Equal]", "1"}]],
       Annotation[#, HoldForm[$CellContext`y] == 1, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxd1E9I02Ecx/EhXoRd9CDD22J0jPAgQsN1CmY3YR3qkpE3lzdhHjyIjegQ
MSwi1IMYjOgQI0RCLKwgDJo41MmGW20r+6NFQqdg7vl+2vsHv4ffeHix3+95
vt/v8yd8Y2JkrCMQCCRaP9er/Y7971+1vXUSzZ9Ef+HFr6nWc4xvlVaSpZUj
PJR3H/zEwTfnW4/nsns9+QM/e+radzxlE3zDw5lIPBPx3JceDaVHD/Fhyj7A
q2740hd8x70e8nwl4VoDn427Cer4r0s3X8NvXfhBz3MunPhnfNMNn/6E+y3h
KlZtPS9b/Q7wRatXGVesPiU8bent+/Iv4pf2+i6+avnt+PIp4IcW/zYesHi3
8BOL7yOuWTwfcNjmf4+v2Xzv8GMbfwPnbLx1HLHvV/GSvZ/DMfs/662/+RFW
/3yt7c3b9n9738aa5iye0fi4U/PjjOLDdxU/vqz8cLfyxwXVBz9Q/fA51Rff
U/3xsdYHj2j9cE7ri3u0/nhS+wPvaf/gQe0vPK/9h/81Xav44q3i69rf+L72
P36t84H/6PzgMzpfvvwaeFbnE7/Q+cV1nW/cq/OPL+l+8NXDc1b3Cy7q/sFd
up/wBd1feFz3G17Q/Yfzuh9xuz8FJAzL8Q==
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["x", HoldForm], "\[Equal]", "1"}]],
       Annotation[#, HoldForm[$CellContext`x] == 1, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxd0zssQ1EYB/DGSGPzGgweK2qlYcRaGqtKTIiVncZIJxKaMJXBICESCU1v
CEHr/X7Vo1dVETdW9P7L/4vv5DYnv/Tc853vf9qyzj5PV47D4fBmPvb8f7yv
Vvl9xX7fcOOf8+ExOlDZknmm6VJ8H6LHzYGgOTCn1s/T7V57LNAFeH+Jvljs
zTzL9BT2W6FrnIbLaYTV/hH60x2z3DGDbkW9NRrbX6zTJai/QfcH7YKb6jxb
dIO9vbVNT+J8UTo779K1OK/Yrlbs31Pn36ft1S7nAW2hHzGWBw5ptOc9oodQ
4Fj1K8Zxgyd0Efo/pZtxoDMay03xzKw9zunzbAE6Dw1c0vXIS9yDQK9Uftf0
Dhq+ob++7SFGfL5bGnEZt+r8cboDL8TV/YpHEegdjfZmxREUuFf9ij9wP+Jc
9P9AV+C+xFhuidtwf48qH/Eg7jNBTyAv8QLiF0eRn0knsheo8hQXIs8nuhp5
ipuQZ1LlmVR5ikeQ5zMdQp7iMPJM0WfIM6XyTKk8X+hy5CmuQ55iD/JM093I
M63yfFV5irM/ZzG2d7+p/4/4d6Z/ABZB5ao=
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["y", HoldForm], "\[Equal]", 
          RowBox[{"-", "1"}]}]],
       Annotation[#, HoldForm[$CellContext`y] == -1, "Tooltip"]& ]}], {}}, 
   {GrayLevel[0], Arrowheads[0.03], ArrowBox[{{0.6, 1}, {0.5, 1}}], 
    ArrowBox[{{1, 0}, {1, 0.5}}], ArrowBox[{{0.5, -1}, {0.55, -1}}]}, 
   {RGBColor[0, 0, 1], PointSize[0.02], PointBox[{0, -1}]}, 
   {RGBColor[1, 0, 0], PointSize[0.02], PointBox[{0, 1}]}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
      RotationBox[
      "\"\\!\\(\\*FractionBox[\\(U\\), SubscriptBox[\\(E\\), \\(g\\)]]\\)\"", 
       BoxRotation -> -1.5707963267948966`], TraditionalForm], None}, {
     FormBox["\"\[Omega]\"", TraditionalForm], None}},
  FrameTicks->{{False, False}, {False, False}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9647497614191217`*^9, 3.9647498692265377`*^9, 3.964749976999342*^9, 
   3.9647502340463753`*^9, 3.964750843537743*^9, {3.9647509507044916`*^9, 
   3.964751101257674*^9}, 3.9647573336646905`*^9, 3.9647887036638556`*^9, 
   3.9648321653166456`*^9, 3.9648351596298647`*^9, 3.9648558528901167`*^9, 
   3.9648565050190983`*^9, 3.9649176974087486`*^9, 3.965030033768693*^9, 
   3.9650314661593337`*^9, 3.9650907504547606`*^9, 3.965091652663387*^9, 
   3.9650969694220147`*^9, 3.9651146093073893`*^9, 3.965117664627494*^9, 
   3.965124168731266*^9, 3.9651800694544535`*^9, 3.96521723935324*^9, 
   3.965220583514011*^9, 3.9652220197677813`*^9, 3.9652471619280624`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"a63f76ac-66e7-40b7-ae74-5026b2fd2471"]
}, Open  ]],

Cell["\<\
This is the energy-frequency diagram for oscillator-1 as it undergoes the \
protocol.\
\>", "Text",
 CellChangeTimes->{{3.9648390777752376`*^9, 
  3.964839092188547*^9}},ExpressionUUID->"d704330b-2465-4689-9df3-\
e7b3f813d762"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Defining Dimensionless Parameters",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.964586110261017*^9, 
  3.9645861269238253`*^9}},ExpressionUUID->"a2bb324a-1ce2-4084-b4a7-\
b06803974bf2"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{"\[Omega]", ",", "\[Omega]p", ",", "k", ",", "\[Tau]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.964586800797021*^9, 3.964586819767909*^9}, 
   3.964751621142968*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"b23d279a-1d98-42f8-9fdd-521cb8f66f32"],

Cell["\<\
For convenience, we introduce the dimensionless parameters \[Omega]ptilde, \
ktilde, and \[Tau]tilde, such that:\
\>", "Text",
 CellChangeTimes->{{3.964586251174749*^9, 3.9645863709219885`*^9}, {
  3.96458643748542*^9, 
  3.9645864404970937`*^9}},ExpressionUUID->"5bf7cd08-a920-4b4f-8437-\
97d5f73fb551"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], " ", ",", 
    FractionBox[
     RowBox[{"2", "\[Pi]", " ", "\[Tau]tilde"}], "\[Omega]"]}], " ", 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.9645861674958096`*^9, 3.9645862167787113`*^9}, {
   3.964586396251195*^9, 3.964586431950867*^9}, {3.9645869422961273`*^9, 
   3.9645869487771797`*^9}, 3.964839752341467*^9, 3.964857298729246*^9},
 CellLabel->"In[70]:=",ExpressionUUID->"cc5d5283-bbbc-481a-9643-1e470cc2e82f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
   RowBox[{"ktilde", " ", 
    SuperscriptBox["\[Omega]", "2"]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]", " ", "\[Tau]tilde"}], "\[Omega]"]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.964586442798832*^9, 3.964586835124037*^9, 
  3.9645869512485847`*^9, 3.9647517144509425`*^9, 3.9648321654022026`*^9, 
  3.9648351597091246`*^9, 3.964855852974907*^9, 3.964856505116065*^9, 
  3.9649176974865994`*^9, 3.9650300338982506`*^9, 3.9650314663015866`*^9, 
  3.965090750593111*^9, 3.9650916528678937`*^9, 3.965096969533014*^9, 
  3.965114609440762*^9, 3.9651176647377777`*^9, 3.965124169307363*^9, 
  3.96518006960459*^9, 3.965217239474273*^9, 3.965220583615101*^9, 
  3.9652220198829346`*^9, 3.9652471620360484`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"f11b39c1-7bae-42d6-9645-e61723552a20"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" A. Special discrete set of thermal states", "Subsection",
 CellChangeTimes->{{3.9645870487243433`*^9, 3.9645870590118003`*^9}, {
  3.964649359136262*^9, 
  3.96464936045018*^9}},ExpressionUUID->"d8a198b4-da5c-4a5f-9f21-\
84df427f212a"],

Cell["\<\
The three equations that describe the dynamics of the oscillator are \
analytically unsolvable for arbitrary temperatures. However, exact analytic \
solutions exist for a special discrete set (SDS) of temperatures.  This SDS \
temperatures require  the condition that the two normal mode frequencies are \
commensurate (p/q, where p and q are integers). Furthermore,  if p and q are \
odd integers,  we get: \
\>", "Text",
 CellChangeTimes->{{3.964929800839158*^9, 3.964929871647009*^9}, {
  3.964929948060191*^9, 3.964930031211182*^9}, {3.9649300621851816`*^9, 
  3.964930071663656*^9}, {3.9649311032050457`*^9, 3.9649311251624804`*^9}, {
  3.964931182727391*^9, 3.964931204471326*^9}, {3.9649315431782837`*^9, 
  3.964931583925711*^9}, {3.9649316228011737`*^9, 3.9649317194373317`*^9}, {
  3.9649323067358084`*^9, 3.9649323209302626`*^9}, {3.965083709709157*^9, 
  3.965083713597828*^9}, {3.965083850763502*^9, 
  3.9650838521178164`*^9}},ExpressionUUID->"5bfc6611-2ef2-4598-bcda-\
8a802b8341bc"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Eta]", ",", "\[Omega]", ",", "\[Omega]p", ",", "k", ",", "bplus", ",", 
   "bminus", ",", "bminusdot", ",", "bplusdot"}], "]"}]], "Input",
 CellChangeTimes->{{3.964595354745954*^9, 3.964595396998203*^9}, {
  3.9645954687043247`*^9, 3.964595476696104*^9}, {3.964595565910806*^9, 
  3.9645955709758368`*^9}, {3.964596012400185*^9, 3.9645960171492915`*^9}, {
  3.9646510002669706`*^9, 3.9646510009580393`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"1b2a9b1f-28a2-4759-aad0-d3fddd5d3337"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Tau]tilde", "==", 
  FractionBox[
   RowBox[{
    RowBox[{"2", "l"}], "+", "1"}], 
   RowBox[{"4", "\[Omega]tilde"}]], "==", 
  FractionBox[
   RowBox[{
    RowBox[{"2", "n"}], "+", "1"}], 
   RowBox[{"4", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[Omega]tilde", "2"], "+", 
      RowBox[{"2", "ktilde"}]}]]}]]}]], "Input",
 CellChangeTimes->{{3.964588548697309*^9, 3.9645886050603876`*^9}, {
  3.964588650230585*^9, 3.9645886913321123`*^9}, {3.9645887389366083`*^9, 
  3.9645887417740765`*^9}, {3.9648573017457085`*^9, 3.964857304115979*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"01790832-d0e6-419a-93e2-ef654c541462"],

Cell[BoxData[
 RowBox[{"\[Tau]tilde", "\[Equal]", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "l"}]}], 
   RowBox[{"4", " ", "\[Omega]tilde"}]], "\[Equal]", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}], 
   RowBox[{"4", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"2", " ", "ktilde"}], "+", 
      SuperscriptBox["\[Omega]tilde", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{3.964588693995324*^9, 3.9645887425347414`*^9, 
  3.964588903046938*^9, 3.964595708834154*^9, 3.964650912033422*^9, 
  3.9647517202429533`*^9, 3.9648321654833546`*^9, 3.9648351597727337`*^9, 
  3.9648558530579395`*^9, 3.964856505204733*^9, 3.9649176975520716`*^9, 
  3.9650300340166225`*^9, 3.9650314664280677`*^9, 3.965090750730055*^9, 
  3.96509165304945*^9, 3.965096969644373*^9, 3.965114609569165*^9, 
  3.965117664850853*^9, 3.9651241698447433`*^9, 3.965180069740876*^9, 
  3.9652172395946407`*^9, 3.9652205837032223`*^9, 3.9652220199715137`*^9, 
  3.9652471621313057`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"688c2f0b-9514-47dc-9891-25a64605bcaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]dimensionless", "==", 
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Omega]tilde", "2"], "+", 
     RowBox[{"2", "ktilde"}]}]], "\[Omega]tilde"], "==", 
  FractionBox[
   RowBox[{
    RowBox[{"2", "n"}], "+", "1"}], 
   RowBox[{
    RowBox[{"2", "l"}], "+", "1"}]]}]], "Input",
 CellChangeTimes->{{3.964588780851746*^9, 3.964588877105361*^9}, {
  3.964857308751034*^9, 3.9648573124469094`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"2d8f936a-e1ff-4854-99af-22810c57d088"],

Cell[BoxData[
 RowBox[{"\[Eta]dimensionless", "\[Equal]", 
  FractionBox[
   SqrtBox[
    RowBox[{
     RowBox[{"2", " ", "ktilde"}], "+", 
     SuperscriptBox["\[Omega]tilde", "2"]}]], "\[Omega]tilde"], "\[Equal]", 
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}], 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "l"}]}]]}]], "Output",
 CellChangeTimes->{{3.964588879137721*^9, 3.9645889059335527`*^9}, 
   3.964593470324089*^9, 3.9645957127177296`*^9, 3.964650921199588*^9, 
   3.9647517235070696`*^9, 3.9648321655471563`*^9, 3.9648351598363647`*^9, 
   3.9648558531311755`*^9, 3.964856505284892*^9, 3.964917697615648*^9, 
   3.9650300341228423`*^9, 3.9650314665000625`*^9, 3.965090750811701*^9, 
   3.9650916531726074`*^9, 3.965096969692192*^9, 3.965114609640523*^9, 
   3.9651176648988695`*^9, 3.965124169942418*^9, 3.9651800698192697`*^9, 
   3.965217239666063*^9, 3.965220583778388*^9, 3.9652220200662675`*^9, 
   3.9652471622128415`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"1ecf899b-6423-4678-9e39-bded8777140d"]
}, Open  ]],

Cell[TextData[{
 "Now, we redefine the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "ij"], " "}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "df50874f-6581-4e97-a1ba-d1970c729382"],
 "."
}], "Text",
 CellChangeTimes->{{3.96493173133702*^9, 
  3.964931764082367*^9}},ExpressionUUID->"263f3115-aaec-48ee-b05a-\
f06f18a3bd20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "ReA12sqr", ",", "ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], ",", 
    RowBox[{
     FractionBox["\[Omega]", 
      RowBox[{"2", 
       SuperscriptBox["bplus", "2"]}]], "+", 
     FractionBox["\[Omega]", 
      RowBox[{"2", 
       SuperscriptBox["bminus", "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["bplusdot", 
       RowBox[{"2", "bplus"}]]}], "-", 
     FractionBox["bminusdot", 
      RowBox[{"2", "bminus"}]]}], ",", 
    RowBox[{
     FractionBox["\[Omega]", 
      RowBox[{"2", 
       SuperscriptBox["bplus", "2"]}]], "+", 
     FractionBox["\[Omega]", 
      RowBox[{"2", 
       SuperscriptBox["bminus", "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["bplusdot", 
       RowBox[{"2", "bplus"}]]}], "-", 
     FractionBox["bminusdot", 
      RowBox[{"2", "bminus"}]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.964834614419734*^9, {3.964834657482215*^9, 3.9648346895485306`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"4bc7243a-2dff-4e7b-97f4-0025f305a548"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["bminus", "2"]}], " ", 
      SuperscriptBox["bplus", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"bminusdot", " ", "bplus"}], "-", 
         RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["bminus", "2"], "-", 
         SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
      SuperscriptBox["\[Omega]", "2"]}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["bminus", "4"], " ", 
     SuperscriptBox["bplus", "4"]}]], ",", 
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["bminusdot", 
      RowBox[{"2", " ", "bminus"}]]}], "-", 
    FractionBox["bplusdot", 
     RowBox[{"2", " ", "bplus"}]]}], ",", 
   RowBox[{
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bminus", "2"]}]], "+", 
    FractionBox["\[Omega]", 
     RowBox[{"2", " ", 
      SuperscriptBox["bplus", "2"]}]]}], ",", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["bminusdot", 
      RowBox[{"2", " ", "bminus"}]]}], "-", 
    FractionBox["bplusdot", 
     RowBox[{"2", " ", "bplus"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964834691806672*^9, 3.964835159883898*^9, 
  3.9648558531965613`*^9, 3.964856505364467*^9, 3.964917697677494*^9, 
  3.965030034224804*^9, 3.9650314665717115`*^9, 3.965090750898035*^9, 
  3.9650916532958603`*^9, 3.965096969756344*^9, 3.9651146097213097`*^9, 
  3.965117664962123*^9, 3.9651241700293074`*^9, 3.9651800698966713`*^9, 
  3.9652172397310176`*^9, 3.9652205838587093`*^9, 3.9652220201734295`*^9, 
  3.9652471622954273`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"cfc58cdd-91b1-49e4-81b3-86acbdb945bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["ReA12sqr", 
    RowBox[{"2", "ReA22"}]], "-", "ReA11"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{
  3.9646509709348946`*^9, {3.9648336777440834`*^9, 3.9648336789840956`*^9}, 
   3.9648337861075706`*^9, 3.964833862591586*^9, 3.964834489241384*^9, {
   3.9648345294914646`*^9, 3.964834553487483*^9}, {3.964834703508126*^9, 
   3.964834708054208*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"69420afa-9667-4188-bf4f-e6056b04effa"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["bminus", "2"], " ", 
     SuperscriptBox["bplus", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"bminusdot", " ", "bplus"}], "-", 
        RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["bminus", "4"], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["bminus", "2"], " ", 
        SuperscriptBox["bplus", "2"]}], "+", 
       SuperscriptBox["bplus", "4"]}], ")"}], " ", 
     SuperscriptBox["\[Omega]", "2"]}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["bminus", "2"], " ", 
    SuperscriptBox["bplus", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["bminus", "2"], "+", 
      SuperscriptBox["bplus", "2"]}], ")"}], " ", "\[Omega]"}]]}]], "Output",
 CellChangeTimes->{3.9645955975504103`*^9, 3.9646509744213204`*^9, 
  3.964751729936387*^9, 3.9648345249552207`*^9, 3.964834560125781*^9, 
  3.9648347091293755`*^9, 3.964835160124518*^9, 3.9648558534427767`*^9, 
  3.9648565056164694`*^9, 3.9649176979142613`*^9, 3.965030034476905*^9, 
  3.96503146680523*^9, 3.9650907511288605`*^9, 3.9650916538150845`*^9, 
  3.965096969979214*^9, 3.9651146099724817`*^9, 3.965117665200284*^9, 
  3.965124170302079*^9, 3.965180070170541*^9, 3.9652172399607863`*^9, 
  3.9652205841021605`*^9, 3.965222020434412*^9, 3.9652471625623794`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"040e210d-0401-4161-901b-cb01025d4e95"]
}, Open  ]],

Cell[TextData[{
 "If we write the density matrix as rho1 \[Proportional] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox["\[Gamma]", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "17b5a9ce-2d0b-4c51-a674-c7b3283c0d21"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["x1", "2"]}], TraditionalForm]],ExpressionUUID->
  "15e61ae1-431f-45f7-9a21-bbc2040996ca"],
 " + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"x1", "'"}], "2"], TraditionalForm]],ExpressionUUID->
  "7585655e-b092-41db-86ec-14b7bd7f065f"],
 ") + \[Delta] x1 x1\[CloseCurlyQuote]], the coefficient of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],ExpressionUUID->
  "bbfaac40-5a8f-40ad-b799-e4a23be1fdb8"],
 " in the Gaussian density matrix is ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], "[", 
   RowBox[{
    FractionBox[
     RowBox[{"Re", "[", 
      SuperscriptBox["A12", "2"], "]"}], 
     RowBox[{"2", 
      RowBox[{"Re", "[", "A22", "]"}]}]], "-", 
    RowBox[{"Re", "[", "A11", "]"}]}], "]"}]],ExpressionUUID->
  "ddfb462c-ed9a-423a-bc79-f3c128f21ab4"],
 ". Then ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "/", "2"}]}], TraditionalForm]],
  ExpressionUUID->"d3bcb114-1bbd-4d85-ba05-9f091f8ca68a"],
 " would be equal to ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"(", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["bminus", "2"], " ", 
          SuperscriptBox["bplus", "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bminusdot", " ", "bplus"}], "-", 
             RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["bminus", "4"], "+", 
            RowBox[{"6", " ", 
             SuperscriptBox["bminus", "2"], " ", 
             SuperscriptBox["bplus", "2"]}], "+", 
            SuperscriptBox["bplus", "4"]}], ")"}], " ", 
          SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SuperscriptBox["bminus", "2"], " ", 
         SuperscriptBox["bplus", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["bminus", "2"], "+", 
           SuperscriptBox["bplus", "2"]}], ")"}], " ", "\[Omega]"}], ")"}]}], 
      ")"}]}], ")"}]}]],
  CellChangeTimes->{{3.963310747536122*^9, 3.9633107695972886`*^9}, {
   3.9633108645390964`*^9, 3.963310868217688*^9}},ExpressionUUID->
  "ec9c7108-db17-488c-a1f4-a0bf7cb59c17"],
 "."
}], "Text",
 CellChangeTimes->{{3.9645927776403494`*^9, 3.964592806019108*^9}, {
  3.9645930324244986`*^9, 3.9645930366555777`*^9}, {3.964595683008481*^9, 
  3.964595683008481*^9}, {3.964596132470475*^9, 3.964596139922201*^9}, {
  3.964599115926459*^9, 3.964599158265015*^9}, {3.964599202676546*^9, 
  3.9645992426624165`*^9}, {3.9645993599605536`*^9, 
  3.964599438454574*^9}},ExpressionUUID->"4dd11a71-3c51-4f03-ac5e-\
af29b9c7b9d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bminus", ",", "bplus"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["\[Omega]", "\[Omega]p"], ",", 
     FractionBox["\[Omega]", 
      RowBox[{"\[Omega]p", " ", "\[Eta]"}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964593058624892*^9, 3.96459307441684*^9}, 
   3.9645934246852694`*^9, {3.9645934913528557`*^9, 3.964593495580597*^9}, 
   3.964593538538375*^9, {3.9645959649230924`*^9, 3.9645959686770625`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"0f555270-cbec-4c68-afeb-1b61aec26018"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[Omega]", "\[Omega]p"], ",", 
   FractionBox["\[Omega]", 
    RowBox[{"\[Eta]", " ", "\[Omega]p"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.964593074973545*^9, 3.964593425330728*^9, 3.9645934963688293`*^9, 
   3.9645935393430805`*^9, 3.964595733274865*^9, 3.964595982424048*^9, 
   3.9645960338159*^9, {3.9646509861210227`*^9, 3.964651015505906*^9}, 
   3.9647517347544675`*^9, 3.964835160186112*^9, 3.9648558535259867`*^9, 
   3.9648565056958494`*^9, 3.964917698008898*^9, 3.965030034690834*^9, 
   3.96503146687792*^9, 3.9650907513025208`*^9, 3.965091653944236*^9, 
   3.965096970058198*^9, 3.965114610065527*^9, 3.9651176652822714`*^9, 
   3.9651241703960342`*^9, 3.965180070321286*^9, 3.965217240049341*^9, 
   3.9652205841852703`*^9, 3.96522202056435*^9, 3.9652471626593747`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"05799f5f-53ef-4da2-9fbd-551e9a08f5e2"]
}, Open  ]],

Cell["For the SDS, bplus and bminus are constants in time.", "Text",
 CellChangeTimes->{{3.9645933474356885`*^9, 3.9645933894969883`*^9}, 
   3.9645957425549498`*^9, {3.964932500689245*^9, 3.964932522384529*^9}, {
   3.964932555409807*^9, 3.9649325747740517`*^9}, {3.9650413985345507`*^9, 
   3.965041409213421*^9}},ExpressionUUID->"0b7f804f-166d-4697-84f0-\
7951da4a43c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bminusdot", ",", "bplusdot"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.964593397756731*^9, 3.964593407888533*^9}, {
  3.964595971824888*^9, 3.964595979397966*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"2802fb36-c7a9-4ffe-8361-343f537de550"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964593408832276*^9, 3.9645957603548965`*^9, 
  3.964595985713565*^9, 3.964651019436289*^9, 3.964751737263562*^9, 
  3.964835160249657*^9, 3.964855853608021*^9, 3.9648565058512664`*^9, 
  3.964917698072538*^9, 3.9650300348015885`*^9, 3.965031466966402*^9, 
  3.965090751398611*^9, 3.965091654071158*^9, 3.965096970112097*^9, 
  3.965114610132284*^9, 3.965117665329845*^9, 3.965124170591903*^9, 
  3.9651800703990693`*^9, 3.9652172401732893`*^9, 3.9652205843384686`*^9, 
  3.9652220206414375`*^9, 3.9652471627348633`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"9a9ee12f-ce63-4a61-92fb-596191c46c9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Gamma]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["bminus", "2"], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["bminus", "4"], "+", 
         RowBox[{"6", " ", 
          SuperscriptBox["bminus", "2"], " ", 
          SuperscriptBox["bplus", "2"]}], "+", 
         SuperscriptBox["bplus", "4"]}], ")"}], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "2"], " ", 
      SuperscriptBox["bplus", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["bminus", "2"], "+", 
        SuperscriptBox["bplus", "2"]}], ")"}], " ", "\[Omega]"}], ")"}]}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9645935449231653`*^9, 3.9645935500905857`*^9}, 
   3.9645958062422733`*^9},
 CellLabel->"In[78]:=",ExpressionUUID->"8f962155-1d6d-4aa8-a0e6-fe1f5d210199"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"6", " ", 
      SuperscriptBox["\[Eta]", "2"]}], "+", 
     SuperscriptBox["\[Eta]", "4"]}], ")"}], " ", 
   SuperscriptBox["\[Omega]p", "2"]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Eta]", "2"]}], ")"}], " ", "\[Omega]"}]]], "Output",
 CellChangeTimes->{
  3.9645935134828053`*^9, 3.9645935507891035`*^9, 3.9645958105297823`*^9, 
   3.9645958904404078`*^9, 3.9645959897351527`*^9, {3.9645960246481943`*^9, 
   3.9645960372249813`*^9}, 3.9646510238169727`*^9, 3.964751742213244*^9, 
   3.9648351603132906`*^9, 3.964855853685109*^9, 3.964856505939871*^9, 
   3.9649176981361933`*^9, 3.965030034930831*^9, 3.9650314670494103`*^9, 
   3.965090751485567*^9, 3.9650916541890445`*^9, 3.965096970170003*^9, 
   3.96511461021087*^9, 3.965117665393949*^9, 3.965124170703354*^9, 
   3.965180070481635*^9, 3.9652172402473035`*^9, 3.965220584424326*^9, 
   3.9652220207349224`*^9, 3.96524716281577*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"6b2e8052-173c-42ea-8266-248b27f0d116"]
}, Open  ]],

Cell["\<\
Similarly, the coefficient of x x\[CloseCurlyQuote] \[Delta] is equal to \
Re[A12^2]/(2 Re[A11])\
\>", "Text",
 CellChangeTimes->{{3.964593589975444*^9, 3.964593618124975*^9}, {
   3.96459611943267*^9, 3.964596120897534*^9}, {3.964599510428178*^9, 
   3.9645995214972115`*^9}, {3.964932545185337*^9, 3.9649325837151155`*^9}, {
   3.9649326723717165`*^9, 3.964932680380797*^9}, 3.96508387020797*^9, 
   3.965083921037538*^9},ExpressionUUID->"e5a3104e-3482-4f52-a3d8-\
4b952ecb6849"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12sqr", ",", "ReA11"}], "}"}], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9648364235651493`*^9, 3.964836436065963*^9}, {
  3.9649326270064077`*^9, 3.9649326470420055`*^9}, {3.9650844027462816`*^9, 
  3.965084407803051*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"b8c38e7a-bcf1-47c8-9777-048357afa40d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[Eta]", "2"]}], ")"}], "2"], " ", 
     SuperscriptBox["\[Omega]p", "4"]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["\[Omega]", "2"]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[Eta]", "2"]}], ")"}], " ", 
     SuperscriptBox["\[Omega]p", "2"]}], 
    RowBox[{"2", " ", "\[Omega]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9648364365299973`*^9, 3.9648565060207644`*^9, 
  3.964917698200048*^9, 3.965030035044134*^9, 3.9650314671278815`*^9, 
  3.9650844191640167`*^9, 3.9650907515714016`*^9, 3.9650916543101044`*^9, 
  3.9650969702340713`*^9, 3.9651146102826214`*^9, 3.9651176654581127`*^9, 
  3.9651241708099527`*^9, 3.965180070563055*^9, 3.965217240320737*^9, 
  3.96522058450742*^9, 3.9652220208462214`*^9, 3.965247162896659*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"f62c2f35-a9ea-4e3c-8e92-84769a45654a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]", "=", 
  RowBox[{
   FractionBox["ReA12sqr", 
    RowBox[{"2", " ", "ReA11"}]], "//", "FullSimplify"}]}]], "Input",
 CellLabel->"In[80]:=",ExpressionUUID->"dacb370e-aa30-434e-80f8-f84a8073bc38"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox["\[Eta]", "2"]}], ")"}], "2"], " ", 
   SuperscriptBox["\[Omega]p", "2"]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["\[Eta]", "2"]}], ")"}], " ", "\[Omega]"}]]], "Output",
 CellChangeTimes->{3.9645963421515884`*^9, 3.964651056519951*^9, 
  3.964751957150858*^9, 3.9648364943420906`*^9, 3.9648565061680307`*^9, 
  3.9649176983128004`*^9, 3.965030035254423*^9, 3.965031467263407*^9, 
  3.9650907516737175`*^9, 3.9650916544248867`*^9, 3.965096970281557*^9, 
  3.9651146103535843`*^9, 3.965117665505927*^9, 3.965124170940705*^9, 
  3.9651800706401763`*^9, 3.9652172403854623`*^9, 3.9652205845946856`*^9, 
  3.965222020935589*^9, 3.9652471629794416`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"4fe0c7d1-9ae9-486a-b6f9-e4001f1293f0"]
}, Open  ]],

Cell[TextData[{
 "Comparing to the general thermal state of a harmonic oscillator, we get ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Gamma]", "\[Delta]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "32d8a436-d461-44aa-8b25-f6054e8ae392"],
 " = Cosh[\[Beta]\[Omega]]  and  \[Delta] = Cosech[\[Beta]\[Omega]]. \
Consequently, we get:"
}], "Text",
 CellChangeTimes->{{3.964599554567614*^9, 3.964599586724987*^9}, {
   3.9645996331762075`*^9, 3.96459972909988*^9}, {3.9645998019014473`*^9, 
   3.964599820078695*^9}, 
   3.9645999882082653`*^9},ExpressionUUID->"a5e2d874-e26f-4c23-b50c-\
f78734ae175d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Eta]", "4"], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["\[Eta]", "2"]}], "+", "1"}], ")"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Eta]", "2"], "-", "1"}], ")"}], "2"]], ",", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "+", "1"}], ")"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Omega]tilde", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Eta]", "2"], "-", "1"}], ")"}], "2"]}], ")"}]]}], 
   "}"}], "==", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"\[Omega]", " ", "\[Beta]"}], "]"}], ",", 
    RowBox[{"Sinh", "[", 
     RowBox[{"\[Omega]", " ", "\[Beta]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9645999907732472`*^9, 3.9646001814781218`*^9}, 
   3.9648573409223485`*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"ebe6e6c5-bfa0-49c5-8e19-07c5823f6a54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["\[Eta]", "2"]}], "+", 
      SuperscriptBox["\[Eta]", "4"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[Eta]", "2"]}], ")"}], "2"]], ",", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["\[Eta]", "2"]}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[Eta]", "2"]}], ")"}], "2"], " ", 
      SuperscriptBox["\[Omega]tilde", "2"]}]]}], "}"}], "\[Equal]", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cosh", "[", 
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}], ",", 
    RowBox[{"Sinh", "[", 
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}], "}"}]}]], "Output",
 CellChangeTimes->{{3.9646001767757497`*^9, 3.964600182053091*^9}, 
   3.964651068296283*^9, 3.9647519632831125`*^9, 3.9648364997242684`*^9, 
   3.9648565062502394`*^9, 3.9649176983763547`*^9, 3.965030035368683*^9, 
   3.9650314673316994`*^9, 3.965090751762563*^9, 3.965091654630332*^9, 
   3.965096970345319*^9, 3.965114610426032*^9, 3.9651176655537844`*^9, 
   3.9651241711526976`*^9, 3.9651800707152624`*^9, 3.965217240448872*^9, 
   3.9652205846737366`*^9, 3.9652220210270357`*^9, 3.965247163059633*^9},
 CellLabel->"Out[81]=",ExpressionUUID->"d48fa2f8-6abb-47c3-bed9-4eb06b1414cc"]
}, Open  ]],

Cell["Now we can obtain the expression for \[Eta]", "Text",
 CellChangeTimes->{{3.9646007700986247`*^9, 
  3.964600786620951*^9}},ExpressionUUID->"8ee92c19-f494-4566-a6d8-\
6edfd408d5b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["\[Eta]", "2"]}], "+", 
      SuperscriptBox["\[Eta]", "4"]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[Eta]", "2"]}], ")"}], "2"]], "==", 
    RowBox[{"Cosh", "[", 
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}]}], ",", "\[Eta]"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.964600807916283*^9, 3.9646510998988132`*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"466e1143-8f28-4ac6-835d-4cd8333f43b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Coth", "[", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", 
     RowBox[{"Coth", "[", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"Tanh", "[", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Eta]", "\[Rule]", 
     RowBox[{"Tanh", "[", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9646007916886854`*^9, 3.964600809023984*^9}, 
   3.9646511025005903`*^9, 3.9647519656953325`*^9, 3.964836504922555*^9, 
   3.9648565063338594`*^9, 3.964917698459651*^9, 3.9650300354822865`*^9, 
   3.9650314674135094`*^9, 3.965090751851198*^9, 3.965091654744553*^9, 
   3.9650969704086294`*^9, 3.965114610505492*^9, 3.9651176656169662`*^9, 
   3.965124171281979*^9, 3.9651800708081784`*^9, 3.965217240537245*^9, 
   3.9652205847830715`*^9, 3.965222021097808*^9, 3.9652471631422515`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"c10f56b9-b240-402d-be1e-b0831e3e5fea"]
}, Open  ]],

Cell[TextData[{
 "So ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Eta]", " ", "=", " ", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["\[Omega]tilde", "2"]], " ", "=", " ", 
     SuperscriptBox[
      RowBox[{"[", 
       RowBox[{"Tanh", "[", 
        RowBox[{"\[Beta]", " ", "\[Omega]"}], "]"}], " ", "]"}], 
      RowBox[{"\[PlusMinus]", "1"}]]}]}], TraditionalForm]],ExpressionUUID->
  "47e47c6e-8e5b-40df-a76f-f4db482351d0"],
 "  =",
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], 
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}]]}], TraditionalForm]],ExpressionUUID->
  "91ade024-a3b3-472b-95c4-08d0dc611161"],
 ".  Here,  \[Beta] \[Omega] = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["E", "g"], 
    RowBox[{
     SubscriptBox["k", "B"], "T"}]], TraditionalForm]],ExpressionUUID->
  "c0025c0a-f9ed-4310-bd44-0ff5dfcbd06b"],
 ". Therefore :",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["E", "g"], 
    RowBox[{
     SubscriptBox["k", "B"], "T"}]], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"ba2d9222-362b-4da2-9c14-af9841c2c5f8"],
 StyleBox["= { 2 ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"ArcTanh", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], 
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}]], "]"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"a45a87aa-9872-4c5f-a15b-3eab8f3087e7"],
 Cell[BoxData[
  FormBox[" ", TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"a2bb1a0a-a61f-4e8d-b3cb-6132b5e22130"],
 StyleBox[",  2 ArcCoth ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], 
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}]], "]"}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"bb3b25a3-76cc-420b-a807-7504caa28233"],
 StyleBox[" } = ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{"log", " ", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"|", 
       RowBox[{"n", "-", "l"}], "|"}]], ")"}], " "}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"2bf64ec7-c735-49b0-bed7-dd17ca07f6c1"],
 ". We can call this special discrete set of inverse temperatures \[Beta]SDS. \
We also get ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"\[Omega]ptilde", "=", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}]]]}],
    FontWeight->"Bold"], TraditionalForm]],ExpressionUUID->
  "bf68a903-39ba-4ced-b5f9-1719f45b655d"],
 ".  Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Eta]", "=", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"\[Omega]", "'"}], " ", "+", 
       RowBox[{"2", "k"}]}]], "/", 
     RowBox[{"\[Omega]", "'"}]}]}], TraditionalForm]],ExpressionUUID->
  "8fc9b069-1403-4065-9d20-8dfe62580375"],
 ",  we get:"
}], "Text",
 CellChangeTimes->{{3.9646009544431734`*^9, 3.964601000053753*^9}, {
   3.9646010344628687`*^9, 3.964601036444702*^9}, {3.9646011871589065`*^9, 
   3.96460127050079*^9}, {3.964601326054158*^9, 3.964601339703476*^9}, {
   3.9649928178681545`*^9, 3.964992843208665*^9}, {3.9649928738249345`*^9, 
   3.9649929054864807`*^9}, {3.9649929675081167`*^9, 3.9649929956928897`*^9}, 
   3.9649930730707765`*^9, 3.965084520290243*^9, {3.9650845844459944`*^9, 
   3.965084634875167*^9}},ExpressionUUID->"d57988a6-8540-4f43-bb23-\
d4a75ac90387"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Coth", "[", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], ",", 
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}], ",", 
    RowBox[{"-", 
     RowBox[{"Tanh", "[", 
      FractionBox[
       RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], ",", 
    RowBox[{"Tanh", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.964993360893341*^9, 3.964993395609931*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"bc7975f3-6d11-4c4c-8163-4473fc1cc615"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Coth", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], ",", 
   RowBox[{"Coth", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}], ",", 
   RowBox[{"-", 
    RowBox[{"Tanh", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], ",", 
   RowBox[{"Tanh", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "4"], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9649933987655115`*^9, 3.9650300355923324`*^9, 
  3.965031467483095*^9, 3.96509075193949*^9, 3.965091654848469*^9, 
  3.9650969704722996`*^9, 3.9651146105848284`*^9, 3.9651176656647615`*^9, 
  3.965124171379836*^9, 3.9651800708806615`*^9, 3.9652172406016517`*^9, 
  3.965220584865366*^9, 3.965222021180415*^9, 3.965247163223942*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"29d91d06-21a1-467d-972f-ab012a38ab93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["\[Omega]", "2"], "2"], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[Eta]", "-", 
      FractionBox["1", "\[Eta]"]}], ")"}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.964993286995219*^9, 3.9649933074855146`*^9}, {
  3.9649934052081184`*^9, 3.964993406333373*^9}, {3.965081531761363*^9, 
  3.9650815757655964`*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"230fe18b-3ad2-4b9f-a0f9-cd0f8ba2fe08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Omega]", "2"]}], " ", 
    RowBox[{"Csch", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"Csch", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"Csch", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[Omega]", "2"]}], " ", 
    RowBox[{"Csch", "[", 
     FractionBox[
      RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964993308176041*^9, 3.9649934079839244`*^9, 
  3.965030035807774*^9, 3.9650314675527067`*^9, 3.965090752036353*^9, 
  3.9650916549609056`*^9, 3.965096970536311*^9, 3.9651146106571927`*^9, 
  3.9651176657282248`*^9, 3.9651241714769955`*^9, 3.9651800709562387`*^9, 
  3.965217240674048*^9, 3.9652205849447045`*^9, 3.965222021257736*^9, 
  3.9652471633003674`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"0eabc6cc-bb45-43b2-b2f8-d955782470a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]SDS", "=", 
  RowBox[{
   FractionBox["1", "Eg"], 
   RowBox[{"Log", "[", 
    FractionBox[
     RowBox[{"n", "+", "l", "+", "1"}], 
     RowBox[{"Abs", "[", 
      RowBox[{"n", "-", "l"}], "]"}]], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.96465503673269*^9, 3.964655163461781*^9}, {
  3.9646552008161945`*^9, 3.964655256712278*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"9d48c60f-0d7a-4637-956f-0533bd80ab27"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Log", "[", 
   FractionBox[
    RowBox[{"1", "+", "l", "+", "n"}], 
    RowBox[{"Abs", "[", 
     RowBox[{
      RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}], "Eg"]], "Output",
 CellChangeTimes->{{3.9646552101944532`*^9, 3.964655228014428*^9}, 
   3.9646552581539106`*^9, 3.9647519741448355`*^9, 3.9648365134861217`*^9, 
   3.964856506405244*^9, 3.964917698518034*^9, 3.9650300359113646`*^9, 
   3.965031467621068*^9, 3.965090752127451*^9, 3.9650916550835743`*^9, 
   3.965096970584239*^9, 3.965114610726363*^9, 3.965117665791623*^9, 
   3.9651241716853147`*^9, 3.965180071033726*^9, 3.9652172407392955`*^9, 
   3.965220585014779*^9, 3.96522202134629*^9, 3.9652471633803377`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"b5cffb59-6ec8-4f24-98f3-0324c7193eda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]tilde", "=", " ", 
  RowBox[{"Sqrt", "[", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], ")"}]], "]"}]}]], "Input",
 CellChangeTimes->{{3.9646513626608224`*^9, 3.9646513631915784`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"5e8ea12a-5b5b-413f-bf4c-0fda0276ed0b"],

Cell[BoxData[
 SqrtBox[
  FractionBox[
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "l"}]}], 
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "n"}]}]]]], "Output",
 CellChangeTimes->{
  3.9646032618242407`*^9, 3.9646513649597807`*^9, {3.9647520171343727`*^9, 
   3.9647520172774925`*^9}, 3.964836516500548*^9, 3.964856506484789*^9, 
   3.964917698590521*^9, 3.9650300360142612`*^9, 3.9650314676928873`*^9, 
   3.9650907522195644`*^9, 3.965091655181074*^9, 3.965096970647888*^9, 
   3.9651146107962837`*^9, 3.965117665839309*^9, 3.96512417186084*^9, 
   3.9651800711135073`*^9, 3.965217240804101*^9, 3.965220585097766*^9, 
   3.965222021453472*^9, 3.9652471634538383`*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"675bae48-3458-499b-9cc7-586c2aa38756"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[Omega]tilde", "2"], "+", 
        RowBox[{"2", "ktilde"}]}], ")"}], 
      SuperscriptBox["\[Omega]tilde", "2"]], "==", 
     FractionBox["1", 
      SuperscriptBox["\[Omega]tilde", "4"]]}], ",", "ktilde"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9646032073183203`*^9, 3.964603216570731*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"b7bc1659-2115-4031-b0a4-e87f3e88b405"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"ktilde", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "l"}], ")"}]}], "+", "n", "+", 
        SuperscriptBox["n", "2"]}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.9646032097959003`*^9, 3.9646032170194874`*^9}, 
   3.9646032653134546`*^9, 3.964651377557528*^9, 3.964752023457033*^9, 
   3.964836519627751*^9, 3.964856506557394*^9, 3.9649176986707745`*^9, 
   3.9650300361256175`*^9, 3.965031467771117*^9, 3.9650907524841433`*^9, 
   3.9650916552984*^9, 3.965096970711869*^9, 3.9651146108773007`*^9, 
   3.9651176659195004`*^9, 3.96512417202861*^9, 3.9651800711977844`*^9, 
   3.965217240891161*^9, 3.965220585187955*^9, 3.965222021636326*^9, 
   3.9652471635453596`*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"da9aef37-3b2a-4c31-9ed7-a14dd79d0960"]
}, Open  ]],

Cell[TextData[{
 "So ktilde = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"n", "-", "l"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]],ExpressionUUID->
  "eef6702c-a660-47b5-b169-904fb723950e"],
 ". Also, from the relation ",
 Cell[BoxData[
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", "l"}], "+", "1"}], 
     RowBox[{"4", "\[Omega]ptilde"}]], "=", 
    FractionBox[
     RowBox[{
      RowBox[{"2", "n"}], "+", "1"}], 
     RowBox[{"4", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Omega]ptilde", "2"], "+", 
        RowBox[{"2", "ktilde"}]}]]}]]}]}]],
  CellChangeTimes->{{3.964588548697309*^9, 3.9645886050603876`*^9}, {
   3.964588650230585*^9, 3.9645886913321123`*^9}, {3.9645887389366083`*^9, 
   3.9645887417740765`*^9}},ExpressionUUID->
  "bcdfad46-1a69-42f5-b85a-dc5bfca9463c"],
 ", we get  ",
 StyleBox["\[Tau]tilde= ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox["1", "4"], 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}], TraditionalForm]],
  FontWeight->"Bold",ExpressionUUID->"37712048-8885-4df3-944b-6cccb64be3fa"],
 "."
}], "Text",
 CellChangeTimes->{{3.9646010910437*^9, 3.9646010953039703`*^9}, {
  3.9646032861594543`*^9, 3.964603299394652*^9}, {3.9646033365550394`*^9, 
  3.9646034683679514`*^9}, {3.964752037857144*^9, 
  3.964752045481829*^9}},ExpressionUUID->"ec65de57-f0c1-471b-952b-\
73a095af0758"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.965040323143182*^9, 3.965040353988206*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"34984b1f-67c5-4c97-9c53-87e9dc004c13"],

Cell["So now we have:", "Text",
 CellChangeTimes->{{3.9650409890467577`*^9, 3.9650410138096313`*^9}, {
  3.965219549570163*^9, 
  3.965219550953561*^9}},ExpressionUUID->"cdce38e2-292f-4746-a203-\
44898e77d9f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["Eg", 
        RowBox[{
         SubscriptBox["k", "B"], " ", 
         SubscriptBox["T", "nl"]}]], "==", 
       RowBox[{"Piecewise", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcTanh", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "l"}], "+", "1"}], ")"}]}], "]"}]}], ",", 
            "\"\<;  l<n\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"ArcCoth", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "n"}], "+", "1"}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "l"}], "+", "1"}], ")"}]}], "]"}]}], ",", 
            "\"\<;  l>n\>\""}], "}"}]}], "}"}], "]"}], "==", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "+", "l", "+", "1"}], ")"}], "/", 
         RowBox[{"Abs", "[", 
          RowBox[{"n", "-", "l"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"\[Omega]tilde", "==", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"2", "l"}], "+", "1"}], 
         RowBox[{
          RowBox[{"2", "n"}], "+", "1"}]]]}], ",", 
      RowBox[{"ktilde", "==", 
       FractionBox[
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"n", "-", "l"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "l"}], "+", "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}], ",", 
      RowBox[{"\[Tau]tilde", "==", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["1", "4"], ")"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "l"}], "+", "1"}], ")"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}]}], "}"}], "]"}], ",", 
   RowBox[{"FrameStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9650397978877325`*^9, 3.9650398096847253`*^9}, {
   3.96503984022766*^9, 3.965039868725162*^9}, {3.9650399492538605`*^9, 
   3.965039971283244*^9}, {3.965040037098008*^9, 3.9650401080025325`*^9}, {
   3.965040144554415*^9, 3.9650403068565645`*^9}, {3.9650403635791693`*^9, 
   3.965040546926937*^9}, 3.965040633736628*^9, {3.965040726019292*^9, 
   3.9650407323233137`*^9}, {3.965040781838915*^9, 3.9650407870722456`*^9}, {
   3.9650410286756897`*^9, 3.9650410360375566`*^9}, 3.965082520636572*^9, {
   3.965219200412732*^9, 3.965219238734991*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"865bdc38-21bc-491e-b37b-825652db68a3"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      RowBox[{
       FractionBox["Eg", 
        RowBox[{
         SubscriptBox["k", "B"], " ", 
         SubscriptBox["T", "nl"]}]], "\[Equal]", 
       RowBox[{"(", 
        TagBox[GridBox[{
           {"\[Piecewise]", GridBox[{
              {
               RowBox[{"2", " ", 
                RowBox[{"ArcTanh", "[", 
                 FractionBox[
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", "n"}]}], 
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", "l"}]}]], "]"}]}], "\<\";  l<n\"\>"},
              {
               RowBox[{"2", " ", 
                RowBox[{"ArcCoth", "[", 
                 FractionBox[
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", "n"}]}], 
                  RowBox[{"1", "+", 
                   RowBox[{"2", " ", "l"}]}]], "]"}]}], "\<\";  l>n\"\>"},
              {"0", 
               TagBox["True",
                "PiecewiseDefault",
                AutoDelete->True]}
             },
             AllowedDimensions->{2, Automatic},
             Editable->True,
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.84]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}},
             Selectable->True]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.35]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         "Piecewise",
         DeleteWithContents->True,
         Editable->False,
         SelectWithContents->True,
         Selectable->False,
         StripWrapperBoxes->True], ")"}], "\[Equal]", 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"1", "+", "l", "+", "n"}], 
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]},
     {
      RowBox[{"\[Omega]tilde", "\[Equal]", 
       SqrtBox[
        FractionBox[
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "l"}]}], 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "n"}]}]]]}]},
     {
      RowBox[{"ktilde", "\[Equal]", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "l"}], "+", "n"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "l", "+", "n"}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "l"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", "n"}]}], ")"}]}]]}]},
     {
      RowBox[{"\[Tau]tilde", "\[Equal]", 
       RowBox[{
        FractionBox["1", "4"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "l"}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  FrameStyle->GrayLevel[0],
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.965220585410488*^9, 3.9652220217598543`*^9, 
  3.965247163761392*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"43b30814-93c8-40ac-b516-c2d65bd59990"]
}, Open  ]],

Cell[TextData[{
 "Let Z(\[Beta]) be the partition function, and it is equal to ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"\[Beta]", " ", "Eg"}], "]"}]}]]],
  CellChangeTimes->{{3.964655442118804*^9, 3.9646554515393534`*^9}, {
   3.9646556154488*^9, 3.96465561686205*^9}, {3.964655684607268*^9, 
   3.9646557371357355`*^9}},ExpressionUUID->
  "5e13295c-dbc9-4187-9a9f-8f912f1e6dee"],
 ". Then the average energy ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "\[Beta]"], TraditionalForm]],ExpressionUUID->
  "62a17000-02f0-4667-83ac-b7cf456ab81d"],
 " is given by,"
}], "Text",
 CellChangeTimes->{{3.9646545667526665`*^9, 3.964654643528861*^9}, {
  3.965074192775339*^9, 
  3.9650742124860277`*^9}},ExpressionUUID->"f9cf5b7b-edd5-425e-bf57-\
fd56dfb80a93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Z", "=", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"Sinh", "[", 
     RowBox[{"\[Beta]", " ", "Eg"}], "]"}]}]]}]], "Input",
 CellChangeTimes->{{3.964655442118804*^9, 3.9646554515393534`*^9}, {
  3.9646556154488*^9, 3.96465561686205*^9}, {3.964655684607268*^9, 
  3.9646557371357355`*^9}},
 CellLabel->"In[90]:=",ExpressionUUID->"f65463c7-b808-482d-8f44-ec26f317d9dc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"Csch", "[", 
   RowBox[{"Eg", " ", "\[Beta]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.964655742211655*^9, 3.964752052107608*^9, 
  3.9648365255540886`*^9, 3.9648565066431866`*^9, 3.9649176987271013`*^9, 
  3.965030036226609*^9, 3.965031467840884*^9, 3.9650907527668657`*^9, 
  3.9650916557554555`*^9, 3.9650969709510765`*^9, 3.965114611292287*^9, 
  3.9651176661261625`*^9, 3.9651241726828413`*^9, 3.9651800715025444`*^9, 
  3.9652172411212716`*^9, 3.965220585502651*^9, 3.9652220218310966`*^9, 
  3.9652471638470807`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"b8d26f66-9afd-486e-9ebd-8186f1c0825a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"U\[Beta]", "=", " ", 
  RowBox[{"-", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"Log", "[", "Z", "]"}], ",", "\[Beta]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9646552735748816`*^9, 3.964655357980914*^9}, {
  3.96465539134763*^9, 3.9646554106921434`*^9}, {3.964656240889491*^9, 
  3.9646562416139865`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"e11c362c-2a51-4cb2-9dab-15adea73d2a6"],

Cell[BoxData[
 RowBox[{"Eg", " ", 
  RowBox[{"Coth", "[", 
   RowBox[{"Eg", " ", "\[Beta]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.9646554145981655`*^9, 3.9646557492636075`*^9, 
  3.9646562484458923`*^9, 3.9647520557936497`*^9, 3.9648365294079423`*^9, 
  3.9648565067186904`*^9, 3.964917698787165*^9, 3.9650300363309345`*^9, 
  3.965031467908772*^9, 3.9650907528674726`*^9, 3.965091655857772*^9, 
  3.965096971014577*^9, 3.965114611386262*^9, 3.965117666173879*^9, 
  3.965124172905246*^9, 3.965180071580942*^9, 3.9652172412474756`*^9, 
  3.9652205855847235`*^9, 3.9652220219053593`*^9, 3.965247163918767*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"a1aa5d60-8a6a-47d0-ab7b-1db3067da071"]
}, Open  ]],

Cell["Now substitute \[Beta]SDS for \[Beta],", "Text",
 CellChangeTimes->{{3.9646576609043837`*^9, 
  3.9646576816364193`*^9}},ExpressionUUID->"b6e4e95d-f727-481c-b9f3-\
a04cdaeb6658"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"U\[Beta]", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Eg", " ", 
     RowBox[{"Coth", "[", 
      RowBox[{"Eg", " ", "\[Beta]"}], "]"}]}], "/.", 
    RowBox[{"\[Beta]", "->", "\[Beta]SDS"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964657689085489*^9, 3.9646577821502123`*^9}, {
  3.9646593279864836`*^9, 3.9646593372177105`*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"36040fe5-9f3c-4258-be64-b0f7749c2226"],

Cell[BoxData[
 RowBox[{"Eg", " ", 
  RowBox[{"Coth", "[", 
   RowBox[{"Eg", " ", "\[Beta]SDS"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.96465776968244*^9, 3.9646577830271077`*^9}, {
   3.9646593298393364`*^9, 3.964659337885914*^9}, 3.964752059814941*^9, 
   3.9648365334729233`*^9, 3.964856507217395*^9, 3.964917699127751*^9, 
   3.9650300367107778`*^9, 3.965031468345433*^9, 3.9650907532304707`*^9, 
   3.9650916559678125`*^9, 3.96509697114202*^9, 3.965114611477434*^9, 
   3.965117666237361*^9, 3.9651241729993067`*^9, 3.965180071653042*^9, 
   3.9652172416302643`*^9, 3.9652205856670294`*^9, 3.9652220219950905`*^9, 
   3.965247164002346*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"9dbc4cb8-ac21-40af-aca6-b2cc7822e740"]
}, Open  ]],

Cell[TextData[{
 "The above equation is equal to ",
 Cell[BoxData[
  RowBox[{"Eg", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}], "2"]}], 
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ")"}]}]],
  CellChangeTimes->{{3.9646594688242345`*^9, 3.9646595922485123`*^9}},
  ExpressionUUID->"e1262258-1b8d-4571-9098-bda893d24970"],
 ". This is the expression for average energy in terms of n and l."
}], "Text",
 CellChangeTimes->{{3.964657822979867*^9, 3.9646578526562986`*^9}, {
  3.9646579284778566`*^9, 3.964657931041144*^9}, {3.964659608341323*^9, 
  3.964659632157689*^9}},ExpressionUUID->"83350412-190a-4185-8f64-\
9d9517f2db8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 5:  (a) omega-tilde and (b) k-tilde",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.964662797843628*^9, 3.964662816964652*^9}, {
  3.9647576608578167`*^9, 
  3.964757695533515*^9}},ExpressionUUID->"5903cb63-f148-4967-af14-\
7bf3cc4ac6fc"],

Cell[TextData[{
 "For the purpose of plotting, we take ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], TraditionalForm]],
  ExpressionUUID->"43ba9896-a475-4227-a668-dc08171479a5"],
 " = \[Theta]5. We have obtained the expressions ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "=", 
    RowBox[{"{", 
     SqrtBox[
      RowBox[{"Tanh", "[", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]]}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "2150e0af-1a56-4edf-8c96-3e9b3028dcee"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SqrtBox[
     RowBox[{" ", 
      RowBox[{"Coth", "[", 
       FractionBox[
        RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}]], "}"}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "1c0d2d7f-31bf-4118-b596-3024effa21c0"],
 " and k = { ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[Omega]", "2"], " ", 
   RowBox[{"Csch", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}]],
  CellChangeTimes->{3.964993308176041*^9, 3.9649934079839244`*^9},
  ExpressionUUID->"9b0c04a6-5372-45d1-8f17-1bfd7ba0945b"],
 ", -",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[Omega]", "2"], " ", 
   RowBox[{"Csch", "[", 
    FractionBox[
     RowBox[{"\[Beta]", " ", "\[Omega]"}], "2"], "]"}]}]],
  CellChangeTimes->{3.964993308176041*^9, 3.9649934079839244`*^9},
  ExpressionUUID->"83b5083b-df61-487a-8538-7c928b61a13f"],
 "}."
}], "Text",
 CellChangeTimes->{{3.9649940412918825`*^9, 3.964994068177562*^9}, {
  3.9649941172373576`*^9, 3.9649941377196646`*^9}, {3.964994206300934*^9, 
  3.964994217040506*^9}, {3.964994263244274*^9, 3.9649943068140635`*^9}, {
  3.9650352332732515`*^9, 3.965035238856642*^9}, {3.9650352795516167`*^9, 
  3.965035331809253*^9}, {3.9650353674065037`*^9, 3.965035425936241*^9}, {
  3.9650354889233055`*^9, 
  3.9650355161022625`*^9}},ExpressionUUID->"80b40ca6-4415-48a0-8c72-\
fc4940cafbd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{"Tanh", "[", "\[Theta]5", "]"}]], ",", 
     SqrtBox[
      RowBox[{"Coth", "[", "\[Theta]5", "]"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]5", ",", "0.1", ",", "3"}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Beta] \[Omega]\>\"", ",", "\"\<\[Omega]tilde\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "DotDashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}], ",", 
   RowBox[{"Ticks", "->", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9647551467940893`*^9, 3.964755217695408*^9}, {
  3.9647552526838884`*^9, 3.964755263801964*^9}, {3.964757425660958*^9, 
  3.9647574543670473`*^9}, {3.9647574958360796`*^9, 3.9647574973260217`*^9}, {
  3.964757538719445*^9, 3.964757622269312*^9}, {3.9650963394097157`*^9, 
  3.9650963410021014`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"c5573ead-b0ce-438a-8436-e3b2098a9fb6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwV0Hs023ccxvFIwo+2q2m1WnTKadcuitM5M5e2ny/TGpbp3GZjqWtpqzRn
Cyetlh5TNG6d2KhiokoUTafq1otbyjlm2BqXVd01JOTr2rjGfvvjOe/z+vcx
Dox0D6FSKBRHcv/X/BhO2aP5GoJNDzRa5YxCYVu5pN5VAs8s0rNPGI+BqLrX
rOHzARALVNnBv40D44TlUv3IILQmarDcuiaA0eNSsjd8BIovn+eUqCaBkmgd
msoaA94ldbsOLSnsSIaheIsJ2Jxw31UpkwK+6lxQdeQd5Jw9/bj91RRo1oXr
BamkcO4i3DGMm4Yx7lcm3R3TwFPVZpUdkgGfYREd1SgHr/xsgzaxDGKOmMbf
y5wFu71VMTZMOdjpMgbWUzF4CBO8PHrk8LZpwT/l5RxU21SO3zw9A7VGb0Xf
l8yDlZUtde7BDMQutxeLBQvQ0hRv/Y/6LASw7aOupC4C9em4qbXXLJiHNMhr
eEsg9V0PPiGYBb+7mQxWwjLQjj/rEUzOQjFnxdEx4j1w9/lVTB9QwEA7i952
UQn3uV1MjqcCjjZ/U5DsvQKLzk7u8psK6N8Q0B6eXAV+kb90VKiAnx4t77hg
vQbCzj/oud0KMNWUzJ83WQfU37LRO6eAzv7qa2oHN2C3laHLqjaGbtnSX2v7
NiEStJz0TTEoBI2blmoquHJWkVFmj0H5d2qP1qYKpu7PPI3+FoOBUBpnNLUF
rN5pX/4FDG4jXRvOoRSU2T6UxOFiIErLee4TFHSR3bSvOwlDZ7Ob5rqPGioU
GYVkZGFIzvmxj92nhhwOPqQNFmJwb/mBn8Skorstnz3SLsfQ8YGy+usmKjIf
+52teoLBVleHMX6Khhxmw0R5zzHUXJ7n6T2hode3t2mJWzEw4t2RviUdcS41
mZd2YGDWBX735yM60q0K++R+D4brDjb+Hx1SR0GiWI/cXgxFiRl1pwTqyDOO
fS/4DYY+o0rKlp4GujZVfcdvGEND/9XyCJ4GEh+LaJSMYchitpeVaxLI11c4
Z/EOQ8yewV9vXyeQ5LihUDmFgTrsH86PJVBsYQ2LNo0hqXTSPv8mgVzsA3Zq
k860wzOPEwgUs1/u+zHpsgDqFwOpBDLTMRN5ku6rOIqP5BPoljcdiUh/eobj
JH5BoLDtP+sEyTDUaq8ZdjUSSOiYtzOC9MmBGwv9zQQa0TfR4JL+Mjwpb+YV
gZgy7kQa6XO/5C7u7iJQ6L8iVj3plKGmgsBhApUmVrh+KMewq/QMJ3yUQD5p
3XP6pLPZHS5R4wQafsHLOEy6iC5ZTpYS6HW65KUt6XrGlOtjTNqRNhRMGi2F
GzfME4ittPSJJC1+Pv++dZFAMv6uTi7p7rPrhf1KAm14TzxII+2tHxc9tkqg
qDeD23NID47TmTPrBErflnapiHRgRbLJ+03yz4w1cQVpadTOla0tAt3Yf9ig
lvR/TA4zYQ==
       "]]},
     Annotation[#, "Charting`Private`Tag$110596#1"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1:eJwV0GlQ01cUBfAEIi+2FEXDoFQkMDrQ2DFUXIIL94HIYgWVtrQqUggGahto
qYCDuGAZlS2jI+CAEmlDmQIGt0oDIgZQBEUUEYW0ihBEULC8f0IStpC+frhz
5vfpnLmu4h/DJFYsFiuY3v+ZNKJPkp3pg+yWSJn8MxMMngo6Jqnsg93N02VJ
bib41Sfg6xvDfRByjz1ZNGsEB6UvCpP0Azszf9/pWiOwToniZJFaKHAW1ez0
NgK3lOf7RKKFdF3urTtrjDBfTZwc4rUw4KDaKlplBFdT+aPiNC2o5MVTHiuM
4Be3eK2yUAsn3PtjPJyNkBE4xWnr1MKOziosZxvBhntLwQ0cgA11Pe9CHxrA
Ngt6M4SvgZljU7PrOwOMHQou+dP9DVTLrAs/rRwHbq3UMWZ2CK4eai8wLxwH
beo2t462txCrspQXF+ghXyA8mNIwAl5LJZpGFz0cdl+RUZz3Hnxk8fv7G3Sw
gSfQTMvG4KT5/WhnnA5eNuqictUE1jv5KYVLdFDj8vLq7j8YcJmpzDzfy8Ax
Q2tZs0IH/DL1xpW/MxCd6Jvyk0wPN38+l5iQxMBKSd2IKmccRKePrLcPZCDi
fJ4g8oQBdg3KnjrzGShLnvD3TzBCqZ2myJnFgKY1ktPyvQmOXzPXZ/cT8Gja
WZIVPgFrhi8bxK0EemYU1pc2TcJf7VFnM64TSLpisN0vmoLqioXzMuUEVnCf
MbFu02B7+1y1KJdAe091Gps/A+jttlpFGoGOd+OPphaZ4Ye19qbgeAL/KhrM
XuxZsDD89QnRBEydsidzzbOwKLZw89xwAh9XDKW7DFvgbhdMyLcR2N73eCY4
joW7+mT39/kTQOXKnLDXLPz+n6eeqRtpX9N27vQ3bLz8C8mykTUEsooOdCd2
s7Fnsz3vopBA2J29+ZkhVnhxBCsmTkCg7SNTdWijFeYMthzVLKd/5tkLBnys
8WrpJ3kprgRU8UyO4w1rfKD5wvUuZwKCjDDs5MXBau8ts+FOBEJqxbseXuFg
76qGq9sdCRzx845aumwOZk9U+LTzCJSeOlPro5iD1bb8m+IFBLpdLrMsjja4
go/jxfMJ1PUcUibk2OCu5PAUhR2BgpDWSiUX4eE9Qak6WwKHHV6cyz6CsPOi
+LTcDwlYvYqS5h9D2LdTUHiSOrN80PficYQX271TpVPnbRgbvXYC4ecDsaxk
6spoq80aGcJBbsLqvdTdVR5j7hcRdv+qTCmkXhWQHNh8G+G/5crWZx8QqJk3
teRxA8K8qMt+HdSbNEd1PU0Ir3tzXP2AOkiaKR+9h3B0amGjmvrbsxf0Cx8j
PPrLnqEK6tzexhLxK4S9HkyqjlIvKA9IlvYjXIKlkanUhYltW1MGENbeKkJJ
1KWcZ4asIYR7Pfni/dQ3BcOfXxtDOIp3Y92X1Hhc6lrHICxs6taHUjfXM8a7
eoRDIy5dD6bu2DH9W48JYfw8QgTU4U7pB7WTdO/EOos39YsBTsjoNML3s+tb
V1OLq7LcjGaEH3iO5guph1LsJiwWhJtkTTEC6v8A9sZAJA==
       "]]},
     Annotation[#, "Charting`Private`Tag$110596#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta] \[Omega]\"", TraditionalForm], 
    FormBox["\"\[Omega]tilde\"", TraditionalForm]},
  AxesOrigin->{0.1, 0.5499528648591476},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.1, 3}, {0.5499528648591476, 1.4496131441378304`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, {}}]], "Output",
 CellChangeTimes->{
  3.96475521864902*^9, {3.9647552603408055`*^9, 3.964755264564228*^9}, {
   3.9647574282370787`*^9, 3.9647574547334347`*^9}, 3.964757498194226*^9, 
   3.964757539823987*^9, 3.964757624147546*^9, 3.9648365445505066`*^9, 
   3.9648565074048457`*^9, 3.9649176994053717`*^9, 3.9650300369074535`*^9, 
   3.9650314684847975`*^9, 3.9650907534993715`*^9, 3.965091656162508*^9, 
   3.9650963442979007`*^9, 3.965096971269883*^9, 3.9651146116816206`*^9, 
   3.965117666412345*^9, 3.9651241731709585`*^9, 3.9651800718103075`*^9, 
   3.9652172417742653`*^9, 3.9652205858222537`*^9, 3.9652220221810894`*^9, 
   3.9652471641517506`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"55f81efd-6755-4dfd-847b-aaf643153b07"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Csch", "[", "\[Theta]5", "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Csch", "[", "\[Theta]5", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]5", ",", "0.01", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Beta] \[Omega]\>\"", ",", "\"\<ktilde\n\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", "DotDashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}], ",", 
   RowBox[{"Ticks", "->", "None"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9646601543221893`*^9, 3.9646601543247056`*^9}, 
   3.9646603232172775`*^9, {3.9646634507998943`*^9, 3.964663493055659*^9}, 
   3.9647521229590364`*^9, {3.9647536961334906`*^9, 3.964753705186595*^9}, {
   3.964753923321713*^9, 3.9647540320801034`*^9}, {3.9647540677743397`*^9, 
   3.964754074149527*^9}, 3.9647541952036705`*^9, {3.96475456497742*^9, 
   3.9647545835021944`*^9}, {3.9647546923456497`*^9, 
   3.9647547126730065`*^9}, {3.9647547442420206`*^9, 
   3.9647547955241704`*^9}, {3.964754861600046*^9, 3.9647549141269283`*^9}, {
   3.9647549664665155`*^9, 3.96475498492671*^9}, {3.964755033255237*^9, 
   3.9647550538820353`*^9}, {3.9647550980570164`*^9, 3.964755099600687*^9}, 
   3.964757407385202*^9, {3.964757505758906*^9, 3.964757524274912*^9}, {
   3.9647576428945165`*^9, 3.964757645009961*^9}, {3.9650963488050394`*^9, 
   3.9650963499299994`*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"d02a684e-523e-45b5-96bc-6347a40abb46"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$110656#1"]& ], 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{0, Small, Small, Small}], LineBox[CompressedData["
1:eJwV1fk/1PsewHFMEi3DIPsYXKKDpCxHeFN0UrY4HFJChMqSOgllMsmgTrKU
IqVIx5o2W/h8hrFkJFscijZN8WW+mlPIcpxzf3g9nn/CSyMgwi1ITERE5Ox/
/d9Bg9NLRjeqoHvOyKm3QAfbaKrT2PwquO1K65hw18Es8Z5/hAtVcNzyjvVa
0MHcLyzCV6Yalh6XHfbcqIMdHvC5ppbV4DRL1fYR1cFulhXR/PRqMN+xckHz
oTY+5Gk1Ym9VA+VSPzgeCto4KdXnzxVZtSCWMGswtKCF28PWXo0srgXYZR+h
Smhhqb0o4U1jLdgdXsGMG9bCaQpaPk/GayH1xPL3i7Va+HrhxNpAqAMjT/sv
gtNauLgx5kTzRB30ifG7Ehc1cacw25plWw/3xLZQvOQ1MXZoMT7nUQ82ude9
k1dp4if5Qp340HoI/MSo6FjQwLnOTtTY9Hp4W5RQl/hBAx8pEXt3/H09iJY0
eHRUauBVAWEJ/gkN8M3hWvIZVw28o2c714bTCNvi5fyycxnYVDeyxvpVIzT3
bgpsucLAG5l5ZZbjjVDp0u4rmsTANIO5LHMZBBZPbvHuRjLwu+TyICN/BFFp
evnJOxkYGJcoV0QwzEnovs0cV8cjgzOFzHwMV0q6FBae0PFOY7uRX0sxuHFk
a8fz6bjyUrr8xioMbZ1bHIWX6DjRVj+pn4chU+lnpmsQHeuX+gfrzWJYHO+t
2qZAx2fiO/X6nDjAXXT/VsBUw6radyt0FjjgzV/nwfZXxUlMkr8g3gQGDcGV
Pq6qeHrIUr1Hugnctewy7EAVcy8PpsXpNMGEO9vTXU0VH5tbc7x7bxOs0/mZ
9BtWwfW86C2xfzZBjrnFmJqXCt4f5VTzwqMZnrEHZy38lfEi66cDkX7NsO/g
c41CN2V8M1NSTPZoM6g+vWKmZqeM3zxp2eN1rhmkjCIarTcoY59Zq7cfSpoh
ciT0mKVACe87Y7hybrkZGjevyFrDVMJeSdRfNUu40CQsfre/VBG75/SQp/5p
gWPPKCNmGxVwZ2DY9YBVrTD6Q+XkA3UFbLdJ0taZ1goKXXHRRvIK2JRrk6Gt
0wqqGWFXnEUUsKLgwdZ+p1Ywjkoq/zGwHo/YXo7ZnNcKbxoHSZGk9Th4fDdl
clsbzKUuP2RNyOM4c+56/5h2MGrlXJbkyeGxh9eWNBPbISY1JeoFRw47/hQ6
Nna5Hdjtpv43auQwnb7uUUhhO6zdqmHiUCSHORQvp8iX7TBnvTdLgiWHJV4S
55nazyF2g4v7jIUczgyS/ZrX8xx8fJMPeT2SxaUZAbxhPR5kl8372j+l4ckW
4dNPW3gQtri6c3sFDRv+YOVPW/FgWLp8n/19Gn50sOD3lW48GLNaavG+QcM1
+mPqxrE8CBjcZo7O0jC3NehkSgcP/oiZwNG/0PCb+RA186OdwDdRuB87KoPX
HIqIuFr2AtgXMk1rlWTwiXf9uR4y3WDX0X0/JJmKA6faduoG90BH6SHfDOpa
HG4SFapS1AvRQxa1pMxqfMZH6Daw3AfWdHGqt5Ek3rkrpcva/RX4xO4/SMuQ
wHqRg5y2tAEI3au9m2+xEkufWohT/DwI6nco9eqCFZhaPVCesmEIZC+x940P
UDBtgF3UxBoG38/5d8+2iOHeZy6biwdfw2k3HsunVxSXvOnaUik/AtVam1WU
KKI46bXWUnz4KETJW+2a3yqCY+WNrMMr34IBS/cWR2IZyV8sThY/9Q7MprG6
sGUJRczfe2Wm8R6Y7kKKFmsReUrE+87j9zBTLMzRD11AQOF0MMI/QIABXPBw
mkdJAVQRuuJHGN6t5HPS4QfyPvjz8dKqj1AnuVSsf3gOGe7parkZMAa3A+5O
3oqfRWn91p50yifIOJn2m+njGeTMqXtwKv8TJN6+Ck9nviNq3p1J4z18cG7p
HvAw+Y4OrA8MYk7woSrZ7X1q6jdUHp/O2ZT9GWwdDt+UeP03SknM8Y40/wJZ
2q35cfA3ap6qqGMPfAFNgZSxaYUQLdsbLouxxmG2Pk1KQ1GI2ralMNdpTsBx
w3rpaxlfUTrD5ePZlxMw1S8rFbvqK6oNYUhzYwhw3HdaVZk9jcKdX5zOUZyE
hIiGR9my00hb6xO3nzsJu4cE/7M0I1HI1b8cbwdNQcdFP4V4PwGSPDqYZ0MR
wLjecBPj2hQq22Tba18hgEqlh6a6zZPodXrS9tdOJJzpTpB+Lz6J7OT2vipw
JWGm4cJogdgkKrumEnLMnYQd/gKT4GUCxedW/rHkRcLwef9z5ByBNO8N/6Ue
SILf6kXmykkChdYYRgTGklDtkr7auZdAs6MDuVNFJLgVmB/afptAfv53DKuK
Saikdiivv0mg9o9HOfFlJHw78PtvE9cJlPNF5DP1EQn0o5kHszIIZC3caGzc
QEJ5sN19wQUCXRBntp/qI+Gqi/fss2MEErAdfGCABDafP50dSiBPKTmBxBAJ
5wZjw04eJpAutVj2xigJMnHGpKEfgToV+3yfjZPQYuwoU+JOIJPcvK/nJ0mI
fBytnupKoFtqIYmOJAne9MIHR5wIFKm5VDzyjYRNfWc9DH4h0FBhm2XRLAks
h4kjVDsCbd+Q8TJ8nvzvbwOiQhsClRTvDzBbIiHpIUP5lRWBZPU3fF9eJsFU
tuRxjQWB/gV/ovlL
       "]]},
     Annotation[#, "Charting`Private`Tag$110656#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Beta] \[Omega]\"", TraditionalForm], 
    FormBox["\"ktilde\\n\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.01, 1}, {-11.319963848331469`, 11.15403862659521}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, {}}]], "Output",
 CellChangeTimes->{
  3.9647549859042535`*^9, 3.9647550549538207`*^9, 3.964755101017336*^9, 
   3.964757409538308*^9, {3.9647575075801888`*^9, 3.9647575249457846`*^9}, 
   3.964757646471204*^9, 3.964836549175501*^9, 3.9648565075183115`*^9, 
   3.964917699505494*^9, 3.9650300370467434`*^9, 3.9650314685943904`*^9, 
   3.9650907536382713`*^9, 3.965091656303567*^9, 3.9650963509700737`*^9, 
   3.965096971365461*^9, 3.9651146117957344`*^9, 3.9651176665076456`*^9, 
   3.965124173326835*^9, 3.9651800719238095`*^9, 3.9652172418714304`*^9, 
   3.965220585950551*^9, 3.965222022306321*^9, 3.965247164264821*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"e3802321-3338-4e21-8b41-98641cd1b905"]
}, Open  ]],

Cell["\<\
The  \[Omega]ptilde and ktilde as a function of  the SDS temperatures . The \
dashed and dot-dashed curves correspond to l<n and l>n cases,respectively.\
\>", "Text",
 CellChangeTimes->{{3.964839457543871*^9, 
  3.9648395761935606`*^9}},ExpressionUUID->"f6a6b2c6-5c3d-4a98-abb5-\
08099625b6ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 6: The Quickest Case in SDS",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9647577970650206`*^9, 
  3.964757851189231*^9}},ExpressionUUID->"4e92455a-622a-4749-abff-\
3e4213556f9d"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Omega]", ",", "\[Omega]p", ",", "k", ",", "\[Tau]", ",", "bminus", ",", 
   "bplus", ",", "bplusdot", ",", "bminusdot", ",", "A11", ",", "A12", ",", 
   "A22", ",", "ReA11", ",", "ReA12", ",", "ReA22", ",", "ReA12sqr", ",", 
   "ImA12", ",", "ImA12sqr", ",", "\[Omega]tilde", ",", "ktilde", ",", 
   "\[Tau]tilde", ",", "\[Eta]"}], "]"}]], "Input",
 CellChangeTimes->{{3.964771445338835*^9, 3.9647714571047707`*^9}, {
  3.9648366073848257`*^9, 3.964836608218224*^9}, {3.964836665245697*^9, 
  3.9648366673388295`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"0464830b-829d-4e40-81f0-0efb4aa070c7"],

Cell["\<\
The quickest case of thermalization occurs when the values of \[Omega]tilde, \
ktilde,\[Tau]tilde of our special discrete set have the values: \
\>", "Text",
 CellChangeTimes->{{3.964759431703286*^9, 3.964759455170626*^9}, {
  3.9648396888671703`*^9, 
  3.9648397142308135`*^9}},ExpressionUUID->"9c1f88de-2799-44e1-bfab-\
8caca2a3dd58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox["3"]}], ",", 
    FractionBox["4", "3"], ",", 
    FractionBox[
     SqrtBox["3"], "4"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647594971172276`*^9, 3.964759567785968*^9}, {
  3.964762096061447*^9, 3.964762102370043*^9}, {3.9647622391804886`*^9, 
  3.9647622483563347`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"3010c2a3-3655-44fc-82f9-bd2d929e1297"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox[
    SqrtBox["3"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.964759571082179*^9, 3.964760896260973*^9, 
  3.964762106493559*^9, 3.964762251816263*^9, 3.964771462713532*^9, 
  3.9647716078406773`*^9, 3.964808970293791*^9, 3.964836568943612*^9, 
  3.9648366131208887`*^9, 3.9648565076143346`*^9, 3.9649176995824766`*^9, 
  3.9650300371647396`*^9, 3.965031468714061*^9, 3.9650907538129187`*^9, 
  3.965091656483384*^9, 3.965096971476656*^9, 3.9651146119183044`*^9, 
  3.9651176666190605`*^9, 3.9651241735760307`*^9, 3.965180072064475*^9, 
  3.965217241983883*^9, 3.965220586051412*^9, 3.965222022425864*^9, 
  3.9652471643630147`*^9},
 CellLabel->"Out[96]=",ExpressionUUID->"74f3a178-09da-4809-970a-b8fbcda5686b"]
}, Open  ]],

Cell["For convenience, let  \[Omega]=1.", "Text",
 CellChangeTimes->{{3.964759603046508*^9, 3.964759617378271*^9}, {
  3.9647608864658957`*^9, 3.964760888804231*^9}, {3.964933025391285*^9, 
  3.9649330413630676`*^9}},ExpressionUUID->"49183ef3-0b27-48a8-a6d5-\
57554e7cb870"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", "1"}]], "Input",
 CellChangeTimes->{{3.9647596195614324`*^9, 3.9647596237876234`*^9}, {
  3.9647598305015182`*^9, 3.964759866834304*^9}, {3.9647598982779064`*^9, 
  3.964759904513462*^9}, {3.9647608188876624`*^9, 3.9647608236970377`*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4a29bda8-5720-4e0d-94ca-061f7b87c0c0"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.96475990500158*^9, 3.9647608257455287`*^9, 
  3.96476089165722*^9, 3.9647621104763308`*^9, 3.964762258892316*^9, 
  3.9647714673947363`*^9, 3.9647716114373007`*^9, 3.9648089738710356`*^9, 
  3.964836575650854*^9, 3.9648366167906914`*^9, 3.964856507692052*^9, 
  3.9649176996424923`*^9, 3.9650300372698016`*^9, 3.9650314687812586`*^9, 
  3.9650907539045506`*^9, 3.965091656637382*^9, 3.9650969715404997`*^9, 
  3.9651146119819326`*^9, 3.965117666667411*^9, 3.9651241737137985`*^9, 
  3.9651800721403303`*^9, 3.965217242041123*^9, 3.965220586133315*^9, 
  3.9652220224982667`*^9, 3.9652471644391613`*^9},
 CellLabel->"Out[97]=",ExpressionUUID->"60e48a14-18fe-462e-ae37-3f8da799e440"]
}, Open  ]],

Cell["Then", "Text",
 CellChangeTimes->{{3.964933052137847*^9, 
  3.9649330596144485`*^9}},ExpressionUUID->"bd997e63-14bd-429f-b339-\
254d9d967330"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"6f4d7abc-a075-456c-9b13-365ad7255357"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9648089790631304`*^9, 3.964836579460718*^9, 
  3.9648366208053875`*^9, 3.964856507769864*^9, 3.9649176996943274`*^9, 
  3.9650300373748827`*^9, 3.9650314688499737`*^9, 3.9650907539997725`*^9, 
  3.9650916567621355`*^9, 3.9650969716047535`*^9, 3.9651146120538883`*^9, 
  3.965117666731608*^9, 3.9651241739725714`*^9, 3.965180072214674*^9, 
  3.9652172421128035`*^9, 3.9652205862148004`*^9, 3.9652220226302967`*^9, 
  3.9652471645194917`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"b38b7603-dd3e-484c-91a6-5078944b6e4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"90f2016f-d2a8-4dc7-9a58-fd78986e3845"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.9648089831975937`*^9, 3.9648365831269073`*^9, 3.9648366247365108`*^9, 
   3.9648565079168367`*^9, 3.9649176997598305`*^9, 3.965030037482943*^9, 
   3.965031468920434*^9, 3.9650907540892653`*^9, 3.965091656882455*^9, 
   3.9650969716524224`*^9, 3.965114612147687*^9, 3.965117666794816*^9, 
   3.9651241741582537`*^9, 3.9651800723628206`*^9, 3.9652172421844482`*^9, 
   3.965220586378709*^9, 3.9652220227222195`*^9, 3.9652471645949197`*^9},
 CellLabel->"Out[99]=",ExpressionUUID->"15f4c711-9a79-4035-8e87-fa2f56f07cb3"]
}, Open  ]],

Cell["\<\
Now we can obtain bplus, bminus, bplusdot, and bminusdot in terms of these \
values. \
\>", "Text",
 CellChangeTimes->{{3.964934208110856*^9, 3.9649342467464294`*^9}, {
  3.9649342862371826`*^9, 3.9649343154897585`*^9}, {3.965086058904051*^9, 
  3.9650860632044134`*^9}},ExpressionUUID->"2c212fca-bf47-4c75-90c2-\
fc56e7d9389a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"7fc4cba3-9834-48c7-9d22-67d7bd4382c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    RowBox[{"2", "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "t"}], 
       SqrtBox["3"]], "]"}]}]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{"2", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]], 
    SqrtBox["3"]], ",", 
   FractionBox[
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", "t"}], 
      SqrtBox["3"]], "]"}], 
    SqrtBox[
     RowBox[{"6", "-", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", "t"}], "]"}], 
     SqrtBox[
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.964808992806237*^9, 3.964836589334233*^9, 3.9648366294237585`*^9, 
   3.964856508554403*^9, 3.964917700413458*^9, 3.965030038127366*^9, 
   3.9650314696570415`*^9, 3.9650907547759485`*^9, 3.96509165778318*^9, 
   3.965096972208078*^9, 3.9651146127898135`*^9, 3.965117667428664*^9, 
   3.9651241748946657`*^9, 3.96518007301035*^9, 3.9652172429158535`*^9, 
   3.9652205870082493`*^9, 3.9652220233985243`*^9, 3.965247165236947*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"eb2f5813-f7a4-471f-9349-77b662249309"]
}, Open  ]],

Cell[TextData[{
 "Now we can separate the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f748ca33-b32b-409f-a405-764652b4f98c"],
 ". "
}], "Text",
 CellChangeTimes->{{3.965081688221466*^9, 
  3.9650817388466043`*^9}},ExpressionUUID->"93d02c15-9706-4a6a-8cef-\
54ce3c83b2ee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.9647599956375804`*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"c7ff92db-dee0-4c13-ad98-b769e34fefc6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "-", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.9648090003552527`*^9, 3.9648366359689894`*^9, 3.964856509715652*^9, 
  3.9649177015978427`*^9, 3.9650300394114857`*^9, 3.965031470775214*^9, 
  3.9650907560532737`*^9, 3.96509166015926*^9, 3.965096973274439*^9, 
  3.9651146139266963`*^9, 3.965117668680661*^9, 3.9651241762880793`*^9, 
  3.9651800741597557`*^9, 3.965217244092617*^9, 3.9652205881493287`*^9, 
  3.965222024605632*^9, 3.965247166500173*^9},
 CellLabel->
  "Out[101]=",ExpressionUUID->"4996eb1b-9091-418d-b54a-19935a23810c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "FullSimplify"}]}]], "Input",
 CellLabel->
  "In[102]:=",ExpressionUUID->"7dc6dc7e-d584-4c8b-ba95-4deeb756cd94"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "+", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "+", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.96508167949539*^9, 3.9650907571760345`*^9, 
  3.9650916615539*^9, 3.9650969742626595`*^9, 3.965114615027567*^9, 
  3.9651176698868675`*^9, 3.9651241776476703`*^9, 3.9651800752385435`*^9, 
  3.965217245152543*^9, 3.9652205892635703`*^9, 3.965222025769839*^9, 
  3.965247167584734*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"c5502653-e8f4-4b81-ab2f-505b9bd255b4"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    SubscriptBox["A", "12"], "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "73ed8d0d-dc55-492e-96a1-aec7de3c6c32"],
 " are obtained by"
}], "Text",
 CellChangeTimes->{{3.9650817457586555`*^9, 
  3.9650817857782087`*^9}},ExpressionUUID->"e518a95e-25ec-4c75-822e-\
ff491f4aa623"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.9647600392079163`*^9},
 CellLabel->
  "In[103]:=",ExpressionUUID->"21ccb5f2-b9e7-4d60-a8b7-ba979aaa6b31"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "12"], " ", 
  RowBox[{"(", 
   RowBox[{"4", "+", 
    FractionBox["6", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], ")"}], "2"]], "-", 
    FractionBox["5", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}]], "+", 
    FractionBox["54", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], "2"]], "-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"(", 
       RowBox[{"15", "+", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"4", " ", "t"}], 
           SqrtBox["3"]], "]"}]}]}], ")"}]}], 
     RowBox[{"2", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.964760066273921*^9, 3.964760946691349*^9, 
  3.96476218370989*^9, 3.9647623119776993`*^9, 3.9647717008151608`*^9, 
  3.9648091616312943`*^9, 3.964836642394406*^9, 3.9648565137280464`*^9, 
  3.964917705372854*^9, 3.965030043432172*^9, 3.9650314744737296`*^9, 
  3.965090760865*^9, 3.965091666006198*^9, 3.9650969775926447`*^9, 
  3.9651146190226507`*^9, 3.9651176738831744`*^9, 3.9651241816573668`*^9, 
  3.965180078998054*^9, 3.9652172489794483`*^9, 3.9652205929813175`*^9, 
  3.9652220297240095`*^9, 3.9652471713113766`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"a92d3ccf-1ae2-49f5-a46e-bb99f52ed80f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.964760091159008*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"07ee10f6-e985-4206-b22e-84c9bc799c90"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"4", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"8", " ", "t"}], 
        SqrtBox["3"]], "]"}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.964809165671985*^9, 3.964836645390504*^9, 3.964856515737789*^9, 
  3.964917707317294*^9, 3.965030045403524*^9, 3.965031476378269*^9, 
  3.9650907627254877`*^9, 3.9650916682415714`*^9, 3.9650969792807465`*^9, 
  3.9651146210027637`*^9, 3.965117675908248*^9, 3.965124183685962*^9, 
  3.9651800808946524`*^9, 3.9652172508855023`*^9, 3.96522059483587*^9, 
  3.9652220318925962`*^9, 3.9652471731770477`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"84dc9424-9e94-49b3-8097-a24c1fe6410d"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "1feb0bf6-eda6-429f-8ec4-348ead48ebb2"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.9650088798597603`*^9},ExpressionUUID->"9fc2b46f-16f1-44eb-b708-\
a816b8d4db7d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellLabel->
  "In[105]:=",ExpressionUUID->"7c8a891a-26b2-4010-bb6e-5a4e751e7575"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}], "+", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"19", "-", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", "t"}], 
             SqrtBox["3"]], "]"}]}], "+", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"4", " ", "t"}], 
            SqrtBox["3"]], "]"}]}], ")"}]}], 
       RowBox[{"8", "-", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}], 
    RowBox[{"8", "-", 
     RowBox[{"3", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", "t"}], "]"}]}]], ",", 
   RowBox[{
    FractionBox["4", "3"], "-", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "t"}], 
       SqrtBox["3"]], "]"}]}], "-", 
    FractionBox[
     RowBox[{"13", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"4", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], 
     RowBox[{"8", "-", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964760239583626*^9, 3.964760970108362*^9, 
  3.9647622121313066`*^9, 3.964762325248097*^9, 3.964771715621935*^9, 
  3.9648091875783863`*^9, 3.9648366850482473`*^9, 3.9648565208103843`*^9, 
  3.9649177121659126`*^9, 3.965030050412627*^9, 3.965031481226437*^9, 
  3.9650907665843143`*^9, 3.9650916728517838`*^9, 3.965096982736919*^9, 
  3.9651146251625037`*^9, 3.965117679796348*^9, 3.9651241876033554`*^9, 
  3.965180084796513*^9, 3.9652172551460423`*^9, 3.9652205987018433`*^9, 
  3.9652220362394686`*^9, 3.9652471771377916`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"a88cc8bf-26cb-4a3d-9493-00446228344c"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t=0 be Xi, Yi, and Zi. \
\>", "Text",
 CellChangeTimes->{
  3.9650089182248955`*^9},ExpressionUUID->"4fdac273-d81c-4032-846c-\
d05a244838d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647602985304937`*^9, 3.964760299665609*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"9d54d291-07b1-482e-b5dc-9093f11f6d4d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964760281673687*^9, 3.9647609743312473`*^9, 
  3.9647622122891417`*^9, 3.964762325414926*^9, 3.964771729584259*^9, 
  3.9648091877689795`*^9, 3.964836689619566*^9, 3.9648565209062834`*^9, 
  3.9649177122404175`*^9, 3.965030050528679*^9, 3.9650314813232813`*^9, 
  3.96509076667893*^9, 3.9650916729841275`*^9, 3.9650969828578353`*^9, 
  3.9651146252685623`*^9, 3.96511768006723*^9, 3.965124187728256*^9, 
  3.9651800849035535`*^9, 3.965217255220343*^9, 3.965220598812813*^9, 
  3.9652220363398724`*^9, 3.9652471772387843`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"bf29242d-0d8d-4c19-ad77-7db48ee73570"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when when t = T be Xf, Yf, and Zf . \
\>", "Text",
 CellChangeTimes->{{3.9650089295641594`*^9, 
  3.965008941998253*^9}},ExpressionUUID->"a00dbfe8-84f7-4beb-b637-\
878d384b3101"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"03401c78-2101-4927-87b5-6f17735576e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["17", "15"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["8", "15"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.964809191638197*^9, 3.964836693318708*^9, 
   3.96485652098149*^9, 3.964917712293242*^9, 3.9650300506321507`*^9, 
   3.965031481394835*^9, 3.9650907667628098`*^9, 3.965091673071373*^9, 
   3.965096982921499*^9, 3.96511462535396*^9, 3.9651176801788054`*^9, 
   3.965124187835394*^9, 3.965180084976695*^9, 3.9652172552861714`*^9, 
   3.9652205988949194`*^9, 3.965222036401747*^9, 3.9652471773194523`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"15be4c0c-7926-49cf-b65a-52673d66e77f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Green", 
        ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, 
   3.964808370191903*^9, {3.9648092015240183`*^9, 3.9648092114240117`*^9}, {
   3.9649171756789227`*^9, 3.9649171786484327`*^9}, {3.9649172811701283`*^9, 
   3.9649172854755907`*^9}, {3.9649182628769803`*^9, 
   3.9649182724850907`*^9}, {3.9649183108392415`*^9, 3.9649183234664783`*^9}, 
   3.9650308958044615`*^9, {3.9650963615955043`*^9, 3.965096362549632*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"5076bd2a-72e7-4b8b-b46c-18f799d4039a"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJwd13k4lN8XAPBRZEmypKSIUikpKYXoWAotoiIVlZQlpaRIoiQkpRCppIQk
qcYu2xlb9n2ZIWpoSLLMImNp+d3vb/7gmc9znzPnPffc876vssOFA46zKBTK
YvJnNvm/iPLfhw0T/l/x2tdT2///lTJUyKRWLhcgrssXv1GlawQUCk1jWUVS
cXCW2F1B4hvTXDbH6h4gHr6vvLy82M+8SluMeOGksHSljS3xc7t1j9GLe+Cf
mjRxSHFcdVHXgXhCaXQ5q9i++d3ppcQdYkLTeFVOxDduCNNhFx+qbu5TJe47
/6W1i81Z4prKssf4xfkR5z+YET+zKclXQteD+AJJn3JBDPZm/rElnr9KMkvt
5mXiDJFXZmJ4mfsx4iLxnarbLupVeRFX6PbWkcStduF3EonbGfDYmoeuEa+y
4dstwm9XVD8uF2CD6Ljgk2TtAKAYePodLVdBz56tmmbENz9r6h2zvQWUeP6V
VxdXY/L5a+wLxAfXO51UvxEIFCaffsVsLf7mXtP7RLx/IXV7QEUwUJTyRY/o
aKBBkaXU/VlsGLloKOS//y5QaC1XC+y2YnXZoqRQQTZUe99QldsUCZTD607P
Lt+BoTHGZ9uI1/4427u5nHjKtflusiaosbTHS0mIDTJ796iaWD8k+SdGbr1o
isx/srZI3LdF7feOK1Ekz+tVo6a7cVonzVpOmA2vtFEgNf8RUAIr0znalqgi
sWrWVjE2GCsrJJZtjwXKsL/Jd1sbrLs1/+EqaTawvMLS+5YmAMVDeSSz9DRe
3eq5ooI4//GLDidX4l3XLbS9HbHT0/GokwwbAnnJ1J5c4nOeKlZpOOGTbboF
1AVsqLAOeZFwIBEoxbGVom+dceeRz8aOi9igk3hI7dbtJKC0TT+UKXfFNnmq
qbkCG9Jr1We7jSYDRVDQZHG5O6r2XktepMaGOW7hsw5+eAsU69l64mne+Htw
5trtfWw4PnqyysU7AyivNzqZBQZjS+/wnK1pbLjS+b3E5no+UM6c8OivfYyu
c72VL67hwLqVG/5cSKCBfcD1bX6hr1Dm2x9bbOVAn5RDbbJvGfj3bVxya0E6
qmeZfrrawYEO+dk1p4PKgGlRa/NifTouOJ/F0urkwPfoglcy98vAQHxdV71Z
Ov4YMtPJ/MKB9F2e5cYvykBSICL6pF86ekYaKZX+4MDPMH+LYVoZNH02WnPq
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
        "]]},
      Annotation[#, "Charting`Private`Tag$116789#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$116810#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[0, 1, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[17, 15], 0, Rational[-8, 15]}, {
       1.1333333333333333`, 0, -0.5333333333333333}]]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{336.08545391186885`, 341.25},
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.6428485070592578, 1.5120029942124493`}, {-0.4598235024829668,
    0.1698821297080598}, {-0.5333333333333294, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{-0.057492406522052834`, -3.383260254247139, \
-0.01564209780966452},
  ViewVertical->{-0.004079256862737093, -0.5947930435361429, 
   0.8038685184932048}]], "Output",
 CellChangeTimes->{
  3.964760379431897*^9, {3.964760983972582*^9, 3.9647610089173994`*^9}, 
   3.9647622129070826`*^9, 3.9647623260576787`*^9, 3.964771763320077*^9, 
   3.9648092122269135`*^9, 3.9648367038733883`*^9, 3.964856521116763*^9, 
   3.964917712402178*^9, {3.9649183128197927`*^9, 3.964918324442416*^9}, 
   3.9650300508154135`*^9, 3.965031481514353*^9, 3.9650907669142885`*^9, 
   3.965091673252063*^9, 3.965096983033445*^9, 3.9651146255255632`*^9, 
   3.9651176803536654`*^9, 3.965124187988656*^9, 3.9651800851058397`*^9, 
   3.9652172554060807`*^9, 3.965220599056491*^9, 3.9652220365361023`*^9, 
   3.965247177500325*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"f44bb7e1-af2c-4dea-9013-944eba286264"]
}, Open  ]],

Cell[TextData[{
 "This illustrates the finite-time thermalization of oscillator 1 to the \
thermal state at \[Beta] = ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["k", "B"], 
    SubscriptBox["E", "g"]], TraditionalForm]],ExpressionUUID->
  "b2de4748-aa8e-4198-a9af-e27d36f3d699"],
 "log 2, starting from the ground state. The blue and green dots denote the \
initial and final states of the system."
}], "Text",
 CellChangeTimes->{{3.965008655303466*^9, 3.9650087048726463`*^9}, {
  3.965081800678651*^9, 
  3.9650818506923122`*^9}},ExpressionUUID->"1a40b4ac-23e4-4b4f-a102-\
856e827a906c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 6:",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{
  3.9650870168341007`*^9},ExpressionUUID->"4232a917-8b69-460d-aa2d-\
2c2a244368a8"],

Cell["\<\
The SDS does not exactly thermalize our system to arbitrary temperatures. But \
we can always find elements of SDS arbitrarily close to the target \
temperature. We can understand this by plotting  the evolution of the density \
matrix for different values of {n,l}.\
\>", "Text",
 CellChangeTimes->{{3.9650872466340914`*^9, 3.9650874365377426`*^9}, {
  3.9650875231856146`*^9, 
  3.9650875716571093`*^9}},ExpressionUUID->"73acd689-13b8-48a8-a773-\
4758e38768e4"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Omega]", ",", "\[Omega]p", ",", "k", ",", "\[Tau]", ",", "bminus", ",", 
   "bplus", ",", "bplusdot", ",", "bminusdot", ",", "A11", ",", "A12", ",", 
   "A22", ",", "ReA11", ",", "ReA12", ",", "ReA22", ",", "ReA12sqr", ",", 
   "ImA12", ",", "ImA12sqr", ",", "\[Omega]tilde", ",", "ktilde", ",", 
   "\[Tau]tilde", ",", "\[Eta]"}], "]"}]], "Input",
 CellLabel->
  "In[109]:=",ExpressionUUID->"079a3f2e-9bd9-45dc-8575-f73fa40f63c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", "1"}]], "Input",
 CellLabel->
  "In[110]:=",ExpressionUUID->"44ba892b-9a85-48d6-b041-400379012303"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9647736986150475`*^9, 3.9648093814357967`*^9, 
  3.964810382666728*^9, 3.9648367159500175`*^9, 3.964836801330773*^9, 
  3.9648368730187836`*^9, 3.964856521212493*^9, 3.964917712487317*^9, 
  3.965030051047387*^9, 3.9650314818130717`*^9, 3.96509076704677*^9, 
  3.965091673407611*^9, 3.9650969831299753`*^9, 3.965114625673235*^9, 
  3.965117680624319*^9, 3.965124188152477*^9, 3.9651800852482986`*^9, 
  3.9652172555224223`*^9, 3.9652205991551743`*^9, 3.9652220366170053`*^9, 
  3.965247177599712*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"2781b014-6005-4926-9746-f3ebff68e849"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["(a)  {n, l} = {12, 11}", "Subsection",
 CellChangeTimes->{{3.9647735211518593`*^9, 3.9647735507161865`*^9}, {
  3.9647736279672265`*^9, 3.9647736572698774`*^9}, {3.9650105566333785`*^9, 
  3.9650105630848436`*^9}},ExpressionUUID->"9675b042-2263-47b6-914f-\
03d81f9cbae1"],

Cell[TextData[{
 "Here we will visualize the evolution toward the thermal state for (n,l) = \
(12,11) to the target inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "ca57ac2b-6e5a-4388-9eb6-5359da44a627"],
 ". "
}], "Text",
 CellChangeTimes->{{3.965010576735118*^9, 3.9650106492164*^9}, {
  3.9650876247996335`*^9, 
  3.965087627723014*^9}},ExpressionUUID->"1bf02196-8698-48b8-99de-\
4321dfe8b2bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"12", ",", "11"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647736681474376`*^9, 3.964773679673477*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"804a48d1-78fc-4a0e-9dea-b3f1c6a3264f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.964773681633164*^9, 3.9648093856728663`*^9, 
  3.964836718949258*^9, 3.9648368089425144`*^9, 3.9648368781308985`*^9, 
  3.9648565212933283`*^9, 3.9649177125394435`*^9, 3.9650300511557055`*^9, 
  3.965031481883*^9, 3.9650907671309834`*^9, 3.9650916735210514`*^9, 
  3.9650969831935234`*^9, 3.965114625757804*^9, 3.965117680688057*^9, 
  3.965124188248668*^9, 3.9651800853261533`*^9, 3.9652172555870037`*^9, 
  3.9652205992342854`*^9, 3.9652220366939983`*^9, 3.965247177676218*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"3e00ce55-160d-48a2-8017-0100b273c287"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{{3.9650112361510096`*^9, 3.9650112632436204`*^9}, 
   3.965012193678506*^9},ExpressionUUID->"94d6869d-0eeb-487b-8d7b-\
48a4311820e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.964772173502323*^9, 3.9647721997979784`*^9}, {
  3.9647722316242757`*^9, 3.964772267700019*^9}, {3.964772299746891*^9, 
  3.964772523776617*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"920297ae-15d4-46eb-9c6b-4cbbe93cf5c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "24", "]"}], ",", 
   FractionBox[
    SqrtBox["23"], "5"], ",", 
   FractionBox["48", "575"], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SqrtBox["23"]}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647725269992347`*^9, 3.9647725640860133`*^9, 
  3.9647736854482784`*^9, 3.964809388723469*^9, 3.9648367235379014`*^9, 
  3.96483681200311*^9, 3.9648368825275*^9, 3.9648565213681517`*^9, 
  3.964917712592308*^9, 3.9650300512609816`*^9, 3.965031481950828*^9, 
  3.9650907672165513`*^9, 3.965091673612853*^9, 3.9650969832581873`*^9, 
  3.965114625851146*^9, 3.965117680768613*^9, 3.9651241883622637`*^9, 
  3.9651800853997383`*^9, 3.9652172556504965`*^9, 3.9652205993199124`*^9, 
  3.965222036760743*^9, 3.9652471777530136`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"86278a07-d540-4990-8a5e-138429f26281"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"7e6fc330-cfb3-464f-84dc-182a20afa5be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox["23"], "5"], ",", 
   FractionBox["48", "575"], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SqrtBox["23"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9647727749474063`*^9, 3.9647737115654573`*^9, 
  3.964809391720085*^9, 3.9648367308591423`*^9, 3.9648368195490437`*^9, 
  3.9648368900533023`*^9, 3.9648565214478188`*^9, 3.9649177126400385`*^9, 
  3.965030051364452*^9, 3.9650314820160007`*^9, 3.9650907672999077`*^9, 
  3.9650916737245827`*^9, 3.965096983322057*^9, 3.965114625931755*^9, 
  3.9651176808325796`*^9, 3.9651241884682665`*^9, 3.965180085472637*^9, 
  3.9652172557142367`*^9, 3.965220599398621*^9, 3.9652220368371696`*^9, 
  3.9652471778313775`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"f1ce6ed1-cf24-48d6-b9c4-e1269494fb35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"2c79e6e2-ef2c-45ee-a498-3834964deb3f"],

Cell[BoxData[
 FractionBox["25", "23"]], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.96477277940613*^9, 3.9647737167491007`*^9, 3.9648093950459633`*^9, 
   3.9648367340851603`*^9, 3.9648368946295576`*^9, 3.9648565215252285`*^9, 
   3.964917712694951*^9, 3.9650300514709153`*^9, 3.9650314820841293`*^9, 
   3.9650907673875103`*^9, 3.9650916738207836`*^9, 3.9650969833700075`*^9, 
   3.9651146260203075`*^9, 3.9651176809917707`*^9, 3.9651241885687675`*^9, 
   3.965180085548134*^9, 3.9652172557773795`*^9, 3.9652205994759846`*^9, 
   3.965222036903268*^9, 3.965247177918988*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"7f5dc096-54e8-4ff1-854f-ca80d13a98f5"]
}, Open  ]],

Cell["\<\
The corresponding values of bplus, bminus, bplusdot, and bminusdot :\
\>", "Text",
 CellChangeTimes->{{3.96501171032341*^9, 3.965011749083033*^9}, {
  3.9650122195159354`*^9, 3.965012220606996*^9}, {3.9650902107917166`*^9, 
  3.9650902372348633`*^9}},ExpressionUUID->"b413f1a8-c238-4dae-9b3b-\
7e9c2bd949d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[115]:=",ExpressionUUID->"be6ac545-5dc4-4d3b-9443-7b23f7bd9826"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"24", "-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["23"], " ", "t"}], "5"], "]"}]}]], 
    SqrtBox["23"]], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SqrtBox[
     RowBox[{"24", "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"10", " ", "t"}], 
        SqrtBox["23"]], "]"}]}]]}], ",", 
   FractionBox[
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["23"], " ", "t"}], "5"], "]"}], 
    RowBox[{"5", " ", 
     SqrtBox[
      RowBox[{"24", "-", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"10", " ", "t"}], 
       SqrtBox["23"]], "]"}], 
     RowBox[{
      SqrtBox["23"], " ", 
      SqrtBox[
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.964772801071192*^9, 3.964773721056738*^9, 3.964809402237276*^9, 
   3.964836738718598*^9, 3.964836823232813*^9, 3.964836897530376*^9, 
   3.9648565222682123`*^9, 3.964917713405053*^9, 3.965030052361374*^9, 
   3.965031482798069*^9, 3.965090768097046*^9, 3.965091674653967*^9, 
   3.965096984011155*^9, 3.9651146267433567`*^9, 3.9651176816883698`*^9, 
   3.9651241893266177`*^9, 3.9651800862832937`*^9, 3.965217256500276*^9, 
   3.965220600212721*^9, 3.9652220376632457`*^9, 3.9652471786469345`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"46cf9828-4f22-4ec8-8aa4-2d6cf0352d69"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "87e17822-1dbc-4e9f-b05c-8b653ab2b91b"],
 " : "
}], "Text",
 CellChangeTimes->{{3.965090243619035*^9, 
  3.965090247990452*^9}},ExpressionUUID->"5dda243c-1fb9-473b-942a-\
ab81a7b5bd22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.9647599956375804`*^9},
 CellLabel->
  "In[116]:=",ExpressionUUID->"642fa5bf-a5e2-4921-9be2-7f2b0df96714"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["25", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}], ")"}]}]]}], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"25", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}]]}], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.964772831167493*^9, 3.96477373462282*^9, 3.96480940867733*^9, 
  3.96483674736701*^9, 3.964836840090742*^9, 3.964836906665491*^9, 
  3.9648565250583057`*^9, 3.9649177161016912`*^9, 3.9650300552787313`*^9, 
  3.965031485538962*^9, 3.9650907709148884`*^9, 3.965091677755375*^9, 
  3.965096986529009*^9, 3.965114629522008*^9, 3.9651176844111633`*^9, 
  3.965124192199806*^9, 3.965180089147537*^9, 3.9652172592748485`*^9, 
  3.9652206030018325`*^9, 3.9652220405674524`*^9, 3.9652471814199033`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"941d6160-d637-4f8c-86e1-c6147fd6db3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "FullSimplify"}]}]], "Input",
 CellLabel->
  "In[117]:=",ExpressionUUID->"b477f1e1-e176-4c20-9942-81469433cd08"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["25", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]], ",", 
   RowBox[{
    FractionBox["25", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9650879698336315`*^9, 3.9650907730693197`*^9, 
  3.9650916802574167`*^9, 3.965096988483996*^9, 3.9651146316893625`*^9, 
  3.9651176865476665`*^9, 3.9651241943619833`*^9, 3.9651800913024035`*^9, 
  3.965217261415134*^9, 3.9652206050815544`*^9, 3.965222042726257*^9, 
  3.9652471835225353`*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"03b4a5c7-ced7-494a-8ca7-a502beee26fe"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "50dff7c4-cf46-484e-b877-f8f2676c9cdd"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{{3.9650117889815507`*^9, 3.9650118129761004`*^9}, {
  3.9650118575727453`*^9, 3.9650119597297573`*^9}, {3.9650901819426208`*^9, 
  3.9650901841455407`*^9}},ExpressionUUID->"a3884cc5-d844-4079-b080-\
82b98010d06b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.9647738039239063`*^9, 3.964773805081024*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"4b46ef13-295f-41c9-bf38-3896f392113e"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "575"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "48"}], "+", 
          RowBox[{"23", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "+", 
          RowBox[{"25", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"25", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"10", " ", "t"}], 
            SqrtBox["23"]], "]"}]}], "-", 
         RowBox[{"23", " ", 
          RowBox[{"(", 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], "2"]}], ")"}],
     "/", 
    RowBox[{"(", 
     RowBox[{"2300", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "24"}], "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], "2"]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.9647738733011746`*^9, 3.964773875569029*^9}, 
   3.9648094152646914`*^9, 3.9648367529662943`*^9, 3.964836867677566*^9, 
   3.9648369165642056`*^9, 3.964856527236971*^9, 3.9649177181723723`*^9, 
   3.9650300578603935`*^9, 3.9650314877066927`*^9, 3.9650907751693106`*^9, 
   3.9650916828668413`*^9, 3.965096990462257*^9, 3.9651146339319983`*^9, 
   3.9651176886302032`*^9, 3.965124196746341*^9, 3.965180093512833*^9, 
   3.9652172636090765`*^9, 3.9652206072019544`*^9, 3.965222044974927*^9, 
   3.965247185738819*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"b6e02e69-a1d4-446d-af80-fb291b713af7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.964760091159008*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"2cea2b7b-0d89-4e4e-80f5-2fdfeb19256c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "48"}], "+", 
      RowBox[{"23", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], "+", 
      RowBox[{"25", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"24", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"4", " ", "t"}], 
         RowBox[{"5", " ", 
          SqrtBox["23"]}]], "]"}]}], "-", 
      RowBox[{"600", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"96", " ", "t"}], 
        RowBox[{"5", " ", 
         SqrtBox["23"]}]], "]"}], "-", 
      RowBox[{"552", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"10", " ", 
    SqrtBox["23"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.964773946128086*^9, 3.9648094465235753`*^9, 3.964836945594384*^9, 
  3.9648565555446634`*^9, 3.9649177421875553`*^9, 3.965030083243077*^9, 
  3.965031511704257*^9, 3.9650907993628497`*^9, 3.965091712133604*^9, 
  3.965097015122545*^9, 3.9651146593498173`*^9, 3.965117715192466*^9, 
  3.9651242238425446`*^9, 3.9651801188508244`*^9, 3.965217288084239*^9, 
  3.9652206322322984`*^9, 3.9652220733128457`*^9, 3.965247211716643*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"4daec157-bea7-434d-a966-54725820fa27"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "466d8d0b-b070-481d-9dfb-e82c2da5fcf5"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.9650122568502717`*^9},ExpressionUUID->"c15c0dcb-a38c-4c7e-896f-\
f67b74bc343a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.9648094685486307`*^9, 3.964809469381288*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"7a1cc03d-4e59-4d97-b7ab-c524054c3eff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1324227", "+", 
     RowBox[{"576", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"4", " ", "t"}], 
        RowBox[{"5", " ", 
         SqrtBox["23"]}]], "]"}]}], "-", 
     RowBox[{"1152", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"10", " ", "t"}], 
        SqrtBox["23"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"96", " ", "t"}], 
       RowBox[{"5", " ", 
        SqrtBox["23"]}]], "]"}], "-", 
     RowBox[{"1152", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], 
    RowBox[{"1150", " ", 
     RowBox[{"(", 
      RowBox[{"1152", "+", 
       RowBox[{"23", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], "-", 
       RowBox[{"25", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", " ", 
        SqrtBox["23"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"42", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "+", 
          RowBox[{"2304", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "-", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"54", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"96", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"96", " ", "t"}], 
             RowBox[{"5", " ", 
              SqrtBox["23"]}]], "]"}]}], "+", 
          RowBox[{"48", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"20", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"142", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"146", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"2304", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}], "+", 
          RowBox[{"48", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"24", "+", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"10", " ", "t"}], 
            SqrtBox["23"]], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1152", "+", 
          RowBox[{"23", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "-", 
          RowBox[{"25", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "24"}], "+", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["25", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"24", "+", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"10", " ", "t"}], 
               SqrtBox["23"]], "]"}]}], ")"}]}]], "+", 
         FractionBox["23", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "24"}], "+", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", 
                SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ")"}], 
       "2"], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"25", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}]], "-", 
          FractionBox[
           RowBox[{"23", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], ")"}], "2"], 
       "2300"]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["25", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
        FractionBox["23", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.964760239583626*^9, 3.964760970108362*^9, 3.9647622121313066`*^9, 
   3.964762325248097*^9, 3.964771715621935*^9, 3.9647740614134035`*^9, {
   3.9648094591054726`*^9, 3.964809472385574*^9}, 3.9648369613235908`*^9, 
   3.9648565607449894`*^9, 3.9649177469404726`*^9, 3.9650300887149343`*^9, 
   3.965031516811947*^9, 3.9650908018797874`*^9, 3.9650917150938215`*^9, 
   3.9650970175905266`*^9, 3.9651146620992336`*^9, 3.9651177179141674`*^9, 
   3.965124226820779*^9, 3.965180121672741*^9, 3.965217290681488*^9, 
   3.9652206347698574`*^9, 3.965222075843193*^9, 3.9652472143004456`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"79ea339a-6e23-4eae-9440-07d1337e2065"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t = 0 be Xi, Yi, and Zi .\
\>", "Text",
 CellChangeTimes->{{3.9650107738489966`*^9, 
  3.9650107807116613`*^9}},ExpressionUUID->"483604b3-bf5e-477e-9596-\
202d62578abd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647602985304937`*^9, 3.964760299665609*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"4eb953b1-7118-4083-bb90-422fde201f30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964760281673687*^9, 3.9647609743312473`*^9, 
  3.9647622122891417`*^9, 3.964762325414926*^9, 3.964771729584259*^9, 
  3.964774149553706*^9, 3.9648094826569433`*^9, 3.9648369679018135`*^9, 
  3.9648565609138956`*^9, 3.964917747008581*^9, 3.965030088859269*^9, 
  3.9650315169014425`*^9, 3.965090801979808*^9, 3.9650917152369995`*^9, 
  3.9650970176696725`*^9, 3.965114662200731*^9, 3.9651177180095387`*^9, 
  3.965124227040762*^9, 3.9651801217824945`*^9, 3.9652172907645087`*^9, 
  3.9652206348768725`*^9, 3.9652220759354343`*^9, 3.965247214408027*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"6bbfd649-640a-4bd9-86c5-0369b947659d"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when when t=T be Xf, Yf, and Zf. \
\>", "Text",
 CellChangeTimes->{
  3.9650107979229507`*^9},ExpressionUUID->"a55e6249-6201-48b2-9be1-\
d9f8c6f7560d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"39b73e9d-dac9-4376-9030-3a6c3d21f271"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["331777", "331775"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1152", "331775"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.9647741552693825`*^9, 3.9648094862182465`*^9, 
   3.9648369716358404`*^9, 3.964856561004303*^9, 3.9649177470596685`*^9, 
   3.965030088978095*^9, 3.9650315169708405`*^9, 3.965090802066147*^9, 
   3.9650917153316*^9, 3.9650970177177086`*^9, 3.9651146622882977`*^9, 
   3.9651177180887914`*^9, 3.965124227259398*^9, 3.965180121856325*^9, 
   3.965217290818993*^9, 3.965220634963418*^9, 3.9652220760006046`*^9, 
   3.965247214482231*^9},
 CellLabel->
  "Out[122]=",ExpressionUUID->"548cc9bd-ffe3-4760-859e-0df99368bdc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Red", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Coth", "[", 
            RowBox[{"2", "\[Pi]"}], "]"}], ",", "0", ",", 
           RowBox[{"-", 
            RowBox[{"Csch", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.9648094943156223`*^9, 3.9648095083798637`*^9}, {3.9648399294255457`*^9, 
  3.964839930561893*^9}, {3.9648400698377714`*^9, 3.9648401401105623`*^9}, {
  3.9648410535828266`*^9, 3.964841055762869*^9}, {3.9648530458084016`*^9, 
  3.96485304770965*^9}, {3.9650964167944174`*^9, 3.96509641790541*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"eab5d8fc-4523-43ca-99f3-971a471fa0a1"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJwUmnc4ll8Yx2VEi4zMRMgoZJNwZCR777237E12kplRZIsiZSRtd0gokpkt
VCJ5Ximlot/59U/X9bnenvc859znvr8fOep03siVnIyMzISajIwC/81A9v8f
EprU8zhV/pNfaeXAVm7Y5YWnDzXOb/3PZb+acm7TUaEUsiQRSemytlF2j48U
mNMndcjG7DuEXpdqHrkuCW2nIo900mC+ebmQzDKFC7nfS3yzdnmwrSBfKYcO
c6tIloijv/mQ7zXeOJaTc233aL/qsmJ+bfZxXJjgceSWl35Pxepzm7959yYP
5ufR18S9OifRu+2HbiEp6216XCNkSphbkzEsi9+XQhUxh8L+cP5r0zevtNL7
fz0kP6pwMVkEd/weC92hgESN0RwHzPPf/KbmrTyF9COvsoer0wC5+HpiGuYv
v0SvJLooITEJW9Yf/vTAVGT9euP/z3t+OZF8QxVxfavJV588AuixvgfDLhK6
oV1TFH9HDfnNJfTXOh+F9jf36iUwF/ZZimy+o47mCKfdu8N4wbWggDoc8weQ
QjWSo4GaXYWpWTcEQLni5hoTOQmViXQMJk5roaxHXlJzHOJAL25zD2Fu0vdt
d9IVbUTWaFDJmCIBXjmer70xlx4QCJdX0EF+KUUdVtuSEP3Cq7Mb84SZS3UK
nrqo8dDShCGDLKieNLz0E3Ob+Ju8vV90kXfRvY78BjlI/hTpJ0hBQieDF8My
HPQQTY6qPpOlPKRZutplYG53xuWhI5c++uHuajg2oAjrM8I67Ziz3GLZfO2h
j1LGBLnLixEwimtzbWJOVqQ7zVOljxyeOtZZPFaGEv+AnhOUJHSqzFP58Bt9
JG+zmv7h9hlQlCeXc8I8aeBwXsCyPoow0L44VKkCyp+Y7AoxbxJ0/DX3XR/J
iN+5SVamCr+Gw48PYr5x4oW+IEkfjfScRTrlamDT/TB9DxUJPar4q083pY+4
Gmc+5dSog7D5kWAVzG9Edl+xva+PhmL9Eu80nQVV7/sDUZhvTFPXzMXqIw2+
Na3Idg0weaWfeR/zv8n8HG6y+sjw57HeodFzoHWtZ01oNwnxXGCZGAvWQ+qC
y4sZ+7RhtvWcrwvmnyJnR0O3dJG+pVlgpbAOPNpmpinDfOxv/f0UH11E1lNX
XWOoC+IzjFpM1CR0naOMP5tTB03rJCRP1ejDJPutPj3MZQWSLztaa6PHuk/f
2ngbQEO1Lc8lzPMDMjKMLmohWncJ/nVKQzjyffTvX8zdF046BtWeQ8WiA84t
CkYwlHTcaY4Gr/9AAuUrZjVEraahqPbUBDzbrS/G7iWhXKKZoyhfFE3R1HWv
LlmC25vrtk2Yjzz7maedyo8irXqb10us4GjZUtkC5mt//LuybA4j3/rykNMm
1vDixsYB5X0ktMSiMPNW+k/bCSGvn8fabUBr/jHfB8wfcbS8a/ohBdmbS3z0
hfZgw9SxRr2fhOZtvNkW2OXhlh/q+cPvAEyFAWFCmDsnrKszOiCINX1HYot3
AHoJrhBXzGVs04vkeNVhpNZxlUPKESgl6WgB80uSC9W8lgagKaCuUJzrBDdT
llrfYK7vMa+zMGkISC/Kr2/ZCU7Y9F2ewrxDXELL0skYjuVmmksiZ0h4NRn9
EfPhpcZQKcIEnt3wXenIdYbUmdeRq5hTitu6ccabgffvYEXfJWdQ8dgKJWHO
GR4a+YTFAlLTJ9L55F3A7L6T8zrmKxsy3+81W8K+ygOKU5ddwJmpSYLA/Ke4
EE2doTUki3HNJE67wKKKwvgy5uNLjN+UvtvAPy06IXphV4huoD03j3lERdge
hiI76OLg2R8a6QraBcuho5i7Teh4Oxx1gIvL/FXV3a5gZe7++R7mdYIX8rL6
HaE67ryrhJ0byIecYS3FXOlqwxOyaicoZWMdC73pBiN1hfNJmL8saihhiHGG
v3V9l0wIN3BPecZ7DvN7peYJqqKuUNr6+U19pDtUduzO5sP81nnxgM3dbvBH
uDv1YJs7rK29id7G53tOo3df4JwbGPy+Njn3zx1Kbi5238D8ntsdy4+ZHsDM
7xtREOsBGjceL/bg+jl4vW0jb94bZNSF+jTcPcFqbfDAJcw7pxjuejb7wLSq
RtFKsSeIGzXcVcc8bzM1TyXeF3I3plfq3nrCxgUvh5Y9+PONMj/ZWc/Dqz9S
k04SXsCmoEbtget8IhPI6BgCwDxEd3ZixgtOCILLfszLKkxi3c4HQOvGzbBs
Cm8Q7vJyv4Pvi9/RZY2pVwFg2F4xdVzAG+yWrJM+4nv6p5Muqz4qEMYrdjq+
u3tDXOxYSzTmRlb7ogffBkJ4QsoB9mRvmA5cbj2Iecmz8IobvEHglnW5mbbc
G6juvXI9ifvG1vXd1svtQUBtVX3DdMAbLu9rOfkY9yt11qHiYweCQTpGv758
0RvutblTqWCeo153odo0GKKhOqn+hzcwwVUWTdw/4/OvZu2ZDYZqxmPoL4MP
aLgNh/Xgvi12+2b0E84Q4MzLmzt9xAd4vY1OqGM++DDgqo5VCFyObeiXFPCB
3i/r6oDnC2XqxOcbuSHg+H5iakHEB8YoTKdlMP9iUPunvjcEzmqvKp6T8IHG
F6Ja9/FcU3k+5ky7FQKaih/WDKV8YNezXbfFMY8Kl6F2OxYKSh0l12wwX3d/
wmPxj0AWZEoclXqh4K1+P9IDP+dbzxNuzR0C3a45r9kUHAr+MzFHQkV9YGC/
TpjMNoHGX5vdS7iKnxPcZ5Yi6AOXw9r0uP8SSNTs/CbVg1DYsnuAirh9wOaF
59vdfwjUn/Xz5InhUHgdr6V0j9kHFq9U8q9sEUjt/m2yxS+hUHtYjGx4rw9M
lbVEv/pFoMULXtlHdoWBubNe1J+/3vDu1dTOzZ8EKvzXnjPAEAZHd1l9Ff3q
DdorCpMJmwQK5XBR/8wdBrsbbKfOT+HzOj+rYP2DQAFsCTHWJ8KAnkKWvr0b
n8t0uan4dwI15tBWHJYIg9MVNBXHmr3hxR5ZE6oNAo3Jf7zLJR0GqVsVC+VF
3pCiccTz3TqB7pONK1tKhcEIrhyZeG84pFPQdZNEoIH35ZltJ8Pgqi5JYsXV
G6zJCq+HEgR6uPehv7pAGLzjeKLx/Jw3/OIZ4lRbI5By/wHnD+xhoH2JnO2Z
kDfcuDv9feoLgW5eOlqrsRkKTZlTE4qfvEA9Wby5ZoVA3tG0in9nQqE1Q+r9
63Yv+P2zadV/mUAUVcittj0UGj69e5N33QsWpBQbKZcIZHftbuBodCiY05Zr
rml6gffN39VvPhKIqSTpoJZJKMz5Sc+nHfGCwSCZb9c+EIhaKvFppUAoLK+t
h0Sue4Jt6pb3yQUCXb8/lbDRHgIzL+1O+V7xhPwEh91eMwRSybdQXXgRDOgF
xZp7uwfIso6/UZgmkJX95NCZqGCYvUJ7xfGSB/ycPdlIP0Ugjondv2JFgiGQ
+gvtsr4H5GrUV3SM4zpBWjPFyUHw3ctpomPcHaQMRqI1Rgj0njxKcIYyEBZL
KvvzJt1A6pV8Fm0fgd7xnlKQuOwD3wXIn43WuIBBlIEf52sCfX2TVq0T4Q05
AqLPV61doMCY/6P4KwKtvdZRE3DwAtPvb88LHXSBvKBjvj49BIph6URXWD3A
O1vQXSnUGXTpjlwS6SLQrMOdzg5ZZwDlsytU8k6w2G9SuPc5gXKf0jc4lBuA
tfT8YLKxPbCE3L2ZDgSavFSLWC5pw6b5mul2gx0MrnCtMmP+gFdP/3ubOnBQ
aLcK7LcDujsmdWptBHJ5GHYkcFUS3M0Mq7902sBbhh9en58RKP/vqyWRXi5Q
H9uV2MhlA3TmlkQe5rS9dPMfig6iI5I3R2OjrKH+z9wLGsyj9kr+Id1VQDd8
P2hkSlpB3803xm+fEoiSvq3QN0MNfd3+k/w7yxLGH+7nqcCcKyiI7dKAFhJ9
8cD/5aoFcJwK1Y7CXCN6biEs0wDNpMwFUmtZwPHmGyt2mEtJzl5wfGyM7COW
F4dumkMl/zKrDua143f9Dn4xQyzX7KmUdptDjMTZNRXMNSsdeRm4rdDps5pk
dq5mkGzsFa+KuSDFobRvFrZI065wQaPLFH5Z1i3pYh5Jz7GvVMsByS+WFx/k
N4U88r9STpi73qZcPr3iiFqjU3b6LppA/WNSVBzmKoUKD5gvO6OLKx33c1aM
oSezsf8W5haW+bXrwq6IsbBSK0jPGObVfpyawvxqipd51oAb+hLTx5lyzwha
K6kGWPC+3Rn62tkU6IEc3N+4zrIZAc98Y6Ed5l7GeW7szF7o5/xd4ex4Q1g9
VP1nLz4vZ+HpG+02viha7FCgvqkBZOkerPbHfCRRvSPunx8StV7lpknUhyQm
41vvMb9+7lJ+p4E/cq0PHHxupwdvLrYNzOF6ePxpXEVyPQB9Kgwxe8itAx1v
3gxadeD6THl1gVcwBNHZf3j9ekgDxpMtkxg7CXRJ7FHMgY0QdOPhiQjoPQtB
p3UyxzA/7fXNLe9pKKJXGtY81qUOzf35qVG4bsuH9di+a4Wj1nh+1ze9qsAf
vDiFegmUUW7TY2EYhR7/yRg7RqsMrN+V2LXwvfhw+oFp6oFoJDlBdERZKEFk
WpS6Hb5HqvCzRLs7GjFUzLy4XKYAZ/uHD9zoJxBLIqfMXslYtBPCuEtM/xR4
m+c9qBwiEOL6LvA1KA716XnvC5OXBPog+cdbwwS6y7u1lP4yDhUVsg2WDIvD
Hy62UctRArHbdD0NYYlHp2Qe9ZyNEIMnK1O9UrgPqFCKJn64F49cVJw6q0dP
wKl4hRzDWQI1fQyrTR9NQNVD21swxgOq2r9Vvs4RKKjMQfsVayKSk93jaz/J
Detf3w1kzxOIZ+Sj6oRlItLpE5f+/o0T6syC2tZwf0vY+SgiOZqIBP/c+CvF
zALPBt4Fkq3iPi/zV82mIQk5TLp2StHQwHW7mWvbXwl0AiwOVS4mIY2AyXMn
1ChAsfUcLTnu8yzJ/WcmmJIRmYfT8Y/0O23/aP494sJzRE13OGrONxmRs5gq
7bIntb3/sW4ih+fRoNLHtJz8ZFTX4rTLSfNTW8HVuzTmeK5pariR/XmUjOKQ
tiPbruk2/UzqxKjfBEqnKEylnUpGzpab/pK5A23XHx7yr8bz1EZwWxd+JaPV
nW7tOw+hLeqFauQInst9DG/+kjGmoNOEybVDz5vaElhFjiXh+S7yOvBlt1AK
2pYZe/BM6X7b5lyXajnOCShv1oVGMQUZjESq7mLvatM90e7dhvNG35F5zoc6
KciSjDmeS2CkrY9f5vwszi03wlxf9lmkoCGm0GfKtPNtH5mTuchwLlroKO1S
cExBLJM7ZiHSK23Svna6vDhH0b07yvrPNQW9z/joP9X5rY2B8VWPBs5pz7pX
jPa5pyB+JbmtovitNudlUUdfnOuE/XVrLF1SUJCPW2FgLRk8i7b6mIvzYd3e
t+8XbFPQHpnQGQUOKjj6NZX3Cc6T+z+sBZQbpyC3tNGfIYf2QiKN7/ICzqs7
sj0+6eopqFjHKcnwKh3QX5Wj3HeAhFrUGtIqJFOQH8fHjM0BBnAZv6EsSUtC
bVXVIlOcKUi1LEtSkIUZqsmP6CceJKHd/7Q+1H9KRow9jgN0PpxQ8STnYR09
9h0u0cOoKxnxCZYnaT/lBh2qlMBBBhJKjX14bKUsGWmpxTgNLfDAZgaiOHyI
hCbtfpakaCajtWuHZJWzBOCc4/TjMjYS6qYSb/7gm4R+7J510RQRBwbx3P4n
7CS0erbwmJpIErpvf8Vud70EdJbPJ4xyYG/69nZ39+dE9KNuZU72lBT8Nqfe
JjuCv7fIykDLJBGlZfCzf4uRBevhaG0JHvz8R1bJP7fjEY8AzyP6WiVoD1De
GhAiIbOaR6yvNWJQuKnP77RyDQjpUtS+c5yEqJ5/SL9iFI0u39mwHGk/B1Go
bjvpBAll1hSOLJlFIbK/HA6vlzQhTqjiBY8ICVk8SVx5rhOBOs353LeVdWB/
xVofgxgJUZtRmh9ZD0ZMyfULATkG0KifZFMmRUIFI+svBuPc0AiLmD7TE1M4
Ghy9i1qahBS8LGSPsLmgSxLnZ9MtzcAmceaiO+Y9pz7QD9Y5IsZRxtHCX2Zg
uPl7mEEG7+dnCq7EMEuk3BAcxShnAelU7z1tMednUnewDTNBr00vIMNxC6C4
nxZfjjnNzX8uSRN6KOo40/WucEswNHNboJPFnvtIxo1rVQpJsTj0bTyygpSq
OEoFzO9n3rp5wnZUKcKoMDjWyhoOHVO0csA83WPrpYe9FAQO7Hac/20N9nt/
DEVj/m543eHpVTVI7pinpLpuA2Zz4vY5mDOKn9Gd2KcPaRfOzg7K20IrNJFK
MGejFfE702UCu3P2RIpN2kKHoXdkJebSb9iSmfdYwYHQy2F7IuxA5GIOqRRz
jYIDojcM7OGnYFq6Oos9SPJePZeLuVhGW2q2rhOYZhCp/S320EApEXEB86CR
8pPzGy5gu6Er0iXoAEjSLtIZ870H9X7NFLkDw9P81OZQB8jc6R1hwDxvILBR
edkHeujV8/fTO8LnpHC+WbxvB12dn77LOg/Omb5PnGwdgS2jSLwCc20Kwao2
9gD4pCjbzl7rCAJx6RdoMfeUM/wr2BYEHyxj3ZOUnKCv0Lz9IT7HVdWst+a0
IfB3w0mXO9UJNj5ndlhhPl/6K0TBNhSOjCtUfHvrBEI3PjOm4DrRz8+TMd0M
B7Wnv2MOOjhD0MRcU6QE7g+1px33HIwFBv+wEIYgFyh7gqoXxbE/Ms/+OmFw
ASpU8s1V7rvAJUPBYjXM58plHJrOxsF7Sk1ni00X8MvaGFg7SUIPph37uC7E
w8NNzR36EFeY5o6V+yRMQqEnLzAxTybCY+4z7J3ObnAwYliAHnNZbQqxZu8k
+CU1vnS82A0SR1TuSeF7setg1CbdnyQobFncLTXsBq11S+Ru+H4JPFZ/2MiQ
AspFxT37FN1BgnUsNfgYCY2wcltv8aQCe+bP/XuwXz96eMvYnQ/7Kbu0MWN5
KlD4u+c1nfCAu5MPK415Scg7vKZelv0SDKmMXX1hhr37TJo521HMLzQ90qJK
AxYVrzOMtzzg8Fg9p+1h7MvFW/oOLZchKnjhZruMJyQdF6Pkxn1jkfbzk2yW
dEhfZZs+buYJh0SoS2dw/2norjcQCUsHzmcehe+CPIEjdDpfk4WEbn2O73c5
kQEO1JUSX2s9QdTCym8Z970sin8n/rlmQveh0QvNZF7AZR4674H75MoFuz+G
jZnASlPVIc/oBQdpwnsXcV/dFxBhPvUjEzpdlg+U8XpB3aFX6324P8/dlZLU
D8yCX0/2xX1X9ILRc6JNp3E/jzHIjmavzQJGzYrNBQ0v6LmXuliD58IGfPky
M5kF9JYNTLf0vWBjJ+gVLZ4jBol/droossEv6Mp5VVMvKGTUvBWE59EuWyGq
dJZsyPLd+d1i4QWfBRifj+L55fttleeJYDb8rEui2bb0gqjWRFNpPO8q4uwX
dGWzIXWIRuMw5oddPtVfwXNzfZ+SElLNhiVbvg5GM/z5O0LM09hz6Q++rkzT
yQYNz4j5DwZeQL5r1CsLz+uHS4VrJ4yzIezkD/cc7Fn8nf6LCPtpJI1aEJd5
NgiUkgdxKHvBqYsB+9ewV7ZL0Ww6WmRDc/CdiGQpL9izSBVUhHNF+hvjRpIZ
fr5jq/YQvxdwT2/fUMc55G6YjEGvUTY8yL52kIrFC76bN4uRsPdtSz3/tayd
Da+Px589SuUFDHmrN4o+YR/R0VIxVMkGfulT7cexxy3X9WerL+IcxXVbfkc6
GxzMyGuPTXmC0PHWxHWco2wVTV1J/Nkg+cstgrnTEyhB5EAZ9rjdO45PBA5l
Q9XZnX+7cD28UeHg2TVGoJ3Y35Jvh7JA2PTWrxk/T5DvTOtrxTnQajDj+afS
LKjh9M2b0POE3mYdbf8B7DV+nwuzXbPgbgGF7CdhT1AgWyFbx/5Fp3Vdumkh
E0zIioR0Fj2g9VX5Gzmc248yNPfOFGeAbfVHOCDvAcaHjcsOPyJQTdwwtbJS
BvAx2wcZ7fMAMRey2zSt2Ftd0M/AyXRgFPRNWZh0hyH+hwV/Ggh0VmvRI5Ii
HVK+Z8ztDnEHp+a3wdY3sD8Kcf+5zJYGpeVzU9YFbvAohkUqOItAl03Knhq7
JMPIvbbLHfkuYDWe85c1g0C3a+1v7XucBBMZBkIiBi7g0hL1vj+NQK1vkGHT
viRgMiKTSNzjAislMY2eKQQKoLj3WqAqAYou99tzRTjDZt3hT8GxBDr27t5n
Ie0L8FBhT5897t/uX06uCQcSKHFvgiriCQTOl1fSDtfa/3+PB3cHEMg+w2JF
xNcfAt74GCXssYf3rw80/zhPoD0igpTx7r4g/8cz8ZynHUSsRDow+hGomE9P
u8LTDaZDyxNNBWzh/M2WKhVfAiVn/iwom3OCbwKXGfqSbYA9QrX/og/2C/f3
LOMlduAV2JdI/sEaNruYik288XsxxvXulzUA17HfqbTlVjCp9aNk2otAqQTH
8/SlM/Dig8Mrxh1LeFtniqIwv89xRCYyhB3cLu5VlbOxhFqTyhoxzIdt5Klr
W2RQZdq727mPLWDwKf3Pv54EupX1o0OfXgt57tjWK7JZgHxbscF7zEVY5O5Q
e5kgpee/3+mGm8Onsz8HJjFna4xhE31rjaoiluqm3plBq8GlzFXMe0VL3u8U
OyL2A2YXd2TNoITfo/IQ/t5R1tkXJ4xdEUdATnP/NVPY3NQ/YoY5TAU7H9jr
iUZJvEYOv01A4V4J/V3MXWU/NTC0+yClAXLPfhsTMP08l3YD7wOZ8IUL5cyB
aO7pU60rfMago3jhiCret2yJgguVpCD0JNXHlCXNCCS536ptYa58/btbTm8I
MszLNBwkGUJEW7dSPT4Xl967bbRhEej4O+tihQ4DyIgwpKzF58hMOq+9RzsK
sXiU32QTMYB3ytrKz/wJJJrbuq/3cAxKuGQvtltSH0LPXBk/EYTr3zqKkLWJ
Q/vGpUzL13TAJSV77UgEgWhY8sh5PiQiyw/qzGJXzgGXasCHkUgCkQ98/CzY
noTm/I9eVEzWgHwecb+KaAI9q7kX8uU6zrf6Bw/XRZ8FoeVDqTFxuD7lLlEz
aF1EV5YsZuQi1CCjy41V4RKByriTdX8kpaGdhdQfYneUwUnfek/FZQLNJGt0
fda+jJLOXiVdyESQ3tX3kj2TQClPUqIj6dIRz+17YYX9iuDvu3xBOxfXG3UH
G3E5A632tk60+8oDrxgfU2Eprk+FZW7ZE9loOCdKrkJBClqXd9++XkGg+BZX
H8ML2ejS0U5++wEJXHfuro34/mYp5GnIDGajlk+fpDf8xKHGjreB9jaBVrNX
i4765aB9ESOPh+tEYMDv68srD/F97xsWnUq7ggJc2CgiL/HBFjd9BzvuM2GH
gvpvvL6CJr22zHtSeKAze96hCXv6R2Mnrhd7ctHswMB4Vjk3dMo3ZtB0E+gm
/U+DgZhctDp+YUTTlB2GfPQ5DHA/JFg+/HyimodsLk/QDcbSQoO13ovfEwRy
60sjsXrnITkH0ywjt70Q0n4p5u4Mgfj+6T0YzMpDbwMWftM+2A3OQj0KJz8S
SOeV45T0IP58P7UhXQEZnIxl1PnzmUB52lNlg1/zUIJXJ5mc1t+2ttCzsW+w
t9r2+FHWUeejQ9YRE8uKv9qm1+OMb+E5kviaOPTwSD4KnP7d1Ur9o838pYhW
KvZTDkmt0z8k8lFMAPsG5a1vbXRV9HO+2ENLRxVlrdXyUXy4zzdOrvU2dVer
DAvsm2VKDMc/GOWjl+9OZIn6ktqsA82XePF8nNk+k5tml49MLrrUnL1Causv
KsvgxPP0NTmnsaY7Xo9FLLll5nrbeMPKd9b/fx4e5VjP4ZuPCiRU5E87brTt
V994dwh7okH9K/Xt8/lITD84t3rvZluy7hCJEc99N8n8EyuYn3rAuSyRttUm
fYxmiwHnhJPCv97O+uSjrcCyfIe57bbTw8m1DPtJaE/FFfpxt3x0vt1ErDtp
F1gltT5mwDmE7VmfxLBtPvoyfVXuXyIlvO2InGXAvsbLdl39pUo+2q92c3A/
7IM3j8rsGZhI+F5XzD4Wy0c5U/qmk1t0oLZ19wg9MwkJncysrePIRz3rjAE2
egyQQDN0ch/2Ncq88ZWIz3loY5jx8+/LLHBFafYrFc5j64auFy1f5SHdxoe9
XmHsUJ451b7Dib14mvOGVG0e0hkpuO6SzwlwpDh+Gec6uNRfvGCbh1QMZM7m
SvKAepaRzHWcJ12O1s1bV+Wi87xNqwNCx6HymV9ULM6f9dnVd418c1Ea6XbZ
TSdhiAnjS7DFXub2PP+8tVQusimzWy1oFgXZYL/6AzgPv2l1nG59dAVRPYk8
Kf5aHMIvffITlSOhDE09GoXKHETxVknqqbgsaLDkM0iqk5CTwzvWiIUM5M2s
Gj/89Qywx6zdaTyLve97K4MGVwZ6n7+ik9OnAg3z9TXHzpFQqWMPg7p5Ooqh
eNth26AKT50fN3/XwrmOjOu55KM0RF+9x/N6nDq0v59N4jbA+VD7sN4zjYuo
sdW5ZURXEzIZbnbEWJDQc4qWLiujCyiVVTnd85EBXD1g0+5uSULs71L7w7hj
kJrUpVQJHUNocCIrVbUioXOW+ertS5HIwt7N/vecIdxwQHxvrUmoKoBQ1XMO
RV8dXvVx7jUGveO3fONsSKhl6jWDAWswMjxLU6BWbgy6S60jR23xc152t/3u
DkDev5dryWRNwFhs1lzWjoQWdjGO3hH3QiZeRF+/qylkWzwUvI05y21d36oQ
V/TkmIV87bYpqKgPxtHZk1Dz+wsVdM0O6KrnyqO7+WawNOt3xgXzM6w2rxMG
zBEX1TGXThFzeKpap1eLuf+SfBG/nQ7SeO5v1NdlDvXq4VmzmBvQ82yN00sg
z+cNN+7aWsA7maavFA743F9pXLn7WApYV/tT9H9YgNEuVjM2zDMC99jrDuqC
eqqBTF66JfZHh4dHMD8dE1vWd9MCplQWqZ14rWBbQ5qaCfOc0AcRMtKOALPv
fUqx/yZoKsht4e9NYTlS5cXiBrcejP4S1bcGzzMcam8wP7x0f+TWlhdkGvx2
21q0BvGdSP5czC0/iMUxT52HAr4bZYthNsBGu3dWA/NT9LvNfWwD4fdG3bPh
vbYQVxnrs4r37fWFvkN7+4Kh6fVzxsZiW7h5lpOPCnOHByyHu6oioOjGq+Xu
p3ZQKPLePgKfC/WlQR/q/dFAQ1dpOqhlD48aHl6dwee4sLFdbRAQCxFkF6ec
3tnDyjyfSig+91s9ehGV1+LB7kDF/dkQB6jx2c/yxZyETvzlHwhVTAF+kQOJ
9hccQUxI/d68GQlFjvXSDthfBHrT6B55cISw8eljvaYkNBQosvAvNhVSL4vL
7mw7QoJTtYS3MQmRrsUtcN5Lg9fTqTcYw51AiZts9y49Ejpg7sU1sJoJU48Z
KBxtnSGeTtkmUYeEXmnZh/uQsnAumlJ3yXWGq0f3s/3C9yLwcdDJ+jCc2zmf
+JL3OINrs9DzRxok9LOOPF7ifA4UJ2eufRV2gSf0DdzVyth/D9RTqijlwi6L
oCc3P7jAMx2/H+1KeN92kgzm63Ihj85RtobWFc4JBjgOK5AQI/NJ8RimPPjZ
tORCKesKSzcZzozi+77vMOmv3WwePNOQ5e5JcAXT39lmdmIkxN1NEziuVQDm
JmdUJ6jcIOmLA62QKN63rTPObiUF8Kv5qRLicYN/Oy0Hv+D+I2csm+qxWgCF
2aJbMwpusLuw2ddMAPcBybOd2ReuQuijB0EPfdygB50+Oor73q/qcBeaiGvQ
NPQo+2qrG8SuJrtmYj/Nry6+4lF3DRT5jn4p7HSDNMHRRyrYT5FxCKfd+DXg
sNu3m2zADZhyPgZ8w334S5Rn4Tx5IfQpdCv1jrtBwRP6hZL/+3bpKa5VoUJQ
tysV//HeDRSd1ezVcZ+n872sE6ZbCPrGfo8Sl9wgpmxFaZmOhNqNbNRifAvh
CUmGCF51gzr+T2OXDpBQgLV1w69LhWB6olSol3CD2bILMQLYW+Onjz/9UFkI
d4Y9/8atu8HgbstLHf/PKY00LsWHhaCXSMiWYF7D52Bojecaa64H005vIXyh
i/p8hOQGiLtd+Bv20Hd356z5xgvBZuq2KfVXN6gXnAi8uAvXQxib4p2FQpC3
6N1l8RmvM9xoU2aHQAx1R5ILlgthlJ2ulmHBDfg4r8jbbhEowzw7ZXa1EHr7
ScqnJvG+cbU4JuD5bm6tw5aE+Rt3s5/9b91gn+gP9psEgb7bbxemfC4Ezq23
4sNdbrDtEniobwXn9j8Fyx/fF0KJT0+69iM3mFE4SPYN5xDZkDafytFCsMur
nDx12w1STLPtVbEPjiu1isq24PUf0qpISsNcTVXM/x2Bxja+dzCUFkKC5fyL
pTA3UPBIvVWOfZD+yrqkUVIhUPxhPPnGGe/ncrAyXS+B4jY+TNCcLQSIozaW
knWD6CfurXovCNQz5Op48WghKEm3qTw94gZS82ZxeTiPbYpleIRvXQO1tj8L
7yjdwDZpqUkaex/jnTaiq/QaDKkXXZ/uc4XjhlEt76uwb850HLsPV+FHcLB0
jY4rxGy0bbmUEch4OD3JC9fn9Tvzt02EXGHkQGfL9yKcrxzqg16evgohq36f
gNIV0kMdyU5dwT5FNVOcV1cA2kdL2D88cAEhSqsHrvEEYvo3IJrnmA8U/Ldl
6Q66wHryfosBJwIZsIw6dyldgaFKE7mWDCeIF/iaYWBPoBjabrnX/TmgVERb
LGbpBEbu7Ec+WRPoS5NKgphVDrhxM9qM8jrBm/tmUgam2PebZt1MvLMh9QOd
dGurI9ycvP5NWBPXA+v+SPv5dBi3pP5WP+wAx19Nn3WVxjl8aa+ZtHASUCY8
2bi3YAt1BW3WnpLY0/NSyA/uS4QHRXqqiR62wPlrnP6iOIFCxarEFj7FQ4zv
jMytrzZwP8Ai6qAogaoHnt3/eeICqNL+Oyi+aQ1fvhnoOwkSqD1kufPf7RCY
kVFMX99lBXrHFDLlBfA+fHW9euRMEDT+pH3KnWQJXKNHjUX5CZTQna8ZMeQP
68uMfUd3W8JY/nN+Tz7sFw/IwwXH3OGX3fvod3ssIJbu8qVGXgIt2LsFznx0
guWLQuS3L5vDa3dPdibMpWIVyT+9t4YWnVaRzAPmYJEXpi3GQyAqs+g3+V0I
Sva9ffWc3gxqRvn4l48S6Dd4OUelcCOv7clO0TxT2C4fr2rD/ONwWvptsXOo
/r3++WVmU/hE2TzRiLld1VLvGq8Z8j8b+vlfoQlE2F6aAMyzV6yRCJsDYsz5
IBvPaQJsL1abvmA+mppFOnHUFR2N5zaKrjCGw9WH/aTwepRT+OOMhLzQ3/sq
zGT8xkAXTcNchPlcGm3mP7HzqGBviQ7HbSNgbtW+exi/V7F2T2MPRyAarHWu
nhYzgtXHx+WeYr7XTfqvRGkwevbU4oHRA0PYPpzdFI73TXDoX5ovVxjKzovc
uaxkCOU63Zbn8D5LHvDKp+WMRtRk2Znx+gawY3yF4cwJ7LkvL8fQ7iSg5NQw
R+rfOkBH1tfxUphA6rITbowySUhm4Yi6ErMOqIoeHffA5/7AvPPxaZ9kRHKc
z5uU0oZd6YL1uyRwPZQNC5sOXUSSeb7NdyI0QZCJlBUvTyALuX2mGvHpaCKs
uSqX7yyI6yixfFIg0KEC49MUNRno9yDvnX4zdUiKSSl1RQSiDDp/oKo7E3H7
KFGeSleDPw9lHrWoEcifu2t3RFw20uqrfE2+SxUU9bNaLhsQ6G8Opdyrqito
cch/4xOTMqgnKy0/NybQo7N0NUUCuUj8Gbu9y0slEPtiN0NrTiDtF7asarW5
6CVDCHuXlyJIKdJXbdjiezTccnm8Og/ddd01kPpaHvpymVTGsKdTqpIOH0wo
QKaULH0269IgbVu6VIG91fLav65HDwoRq3wAGefkCThVnkl7FXurOBVx34G1
CAkzcHS67jsODWVf9lVcI9An1PpDJaQIXfx3nOyPsSCUn/RqI1USqPO2y2d/
3utIS3vIe/vEMRh4U0QhfQvfx1PtmYXB15E9t3no1BNemLMOQ5fvEOheYEzQ
g/brqLQ+uWjJmQfGFNayvLC3DrqzB17RL0af0hnfX/7NBbqf3A99e0YgD9fa
crHsYkRXzqQ5OcMJ6aPBQamdBDp/KUEppa8YXWtffDH+jQPUjlEHzb7Bvnx4
6zi3XAk6yPHy6EozK1Rd7/YoHiFQDrWUoJZ7CVLRY0vxsWMBVuOOOddJAtXM
Gm5t5pQg76CnUzEKzMAxsT7K8olAIhGPDW5PlKArh/X+jWczwY/vr7J2vhBo
SF8pv2SzBJ1pltc3pWaCClUH5a/reD0sR8Q/05aiz5NUQV2NjMAU+XF74SeB
2F5USSXwlCKbW6v0JzMYofXZ6tTsNoHWdGOcncVLkcZ18/msYkZ4ld35g8Dz
MdmCRi7pdCm6U1p8dWaWEQjOeyXfsFeey0n7NKNcihp/TM5RmTBBpee/L5vU
JDSqbOrgdaYUMWRs6639YYJ0wzHXv9gfz8cPmfEpliLFYyTL4LFDYFXknUWO
PfF0WqQStVQpOjfGqOu7yAzfPu5bpaEnofLwBkM6/lK02+6fWg0PKxyeztFg
YiEhDvUzQ4l/StDp1vQbizIckCGMNFmxD5YWC9atzpag8EgNQct9nBDt0JjI
jvOP5GbxxaBnJUj9j/EH0kEucP5mVMnCi/OhoSvvjHcJqlJV1aB+dxRef9RK
pufHPqhgO9dxugT1HAgddeThBU379lJq7INnGf+U9e0uQZMC+5ujk/nAdleY
/yec0x7fDI6xzixGaywufj9yBGCiO9TfQZ6E1EZGjpC7XEcSyol5R56KQgnH
NNuYPgn5uDK4CotfQ08nLlO9S5KD1215vuZGON+aqzSutF5FP8cbdi6OngIb
0gnmfhMSmmD2tjgvdxV9e6DUferkaTAMrc7KxV4WEvajl+FkAQr1yLh9868i
NHEm1MQ5YU90gZSF1VwklHllUu3vGfCfGuWNDSChD/HsDtejM9BmhrIZun4O
QhReop+BOLcv7u3jF0lHVNayrEE+mhBgf7DaIRjnMVvWkYXxNOSn4uhRjLTA
5ozGOYowEuLx+vvlDk8qmtEvptL6og0Hjtk7xUeRkM30vcm9yQnokEfjO0sT
fThJrXE8NJqEBhbF32QyxaO+cp8rHawG0FP1K8QyhoT6v10TeHjmAnI5JnTw
1UUD2G2q83klFnvBo7hVK8cIFN2iZ/nZzRBmb0xSSseTkERioIdAvxdq2nDx
DhYwBmmzwzcKMVem4T308qkLojxVU377qjHkyZ1r+oI5xY/X3LK6tqjk9WxJ
N7UJtPhuM59IIKEb4nLFfCyGSHZP7uvWMBM4XbLSYY45+mh+utFFEtXfflfm
vmQCn44OVwdgLqNjl+18WxE2bjdU9Jjh+RWVey8c84c0lR2094xha9DNp6fL
FAJ3H1v0wVz+HfvVa9v2sO/9UrOplBkcIMpF9TB3+gfHdPjcQP7sAVX7SjPQ
9VXJPYz5ZFNNAoumD/Tof6EZoTMHdnkP+nG8/g4zVwcumQBYf8DAUBVtDiV3
/L2ZMf+rZCW9bhIGTAvKc/tNLEBl7YV5YRwJtdbPMSs7RkJJeUNCSpsFdJjH
xu7B3KHX2m/WKwYOa4aJsgpagl6wT1sT3mfzkFJKlsfx8OtSnqvqL0uwD9q7
awWfS5jJHoeIU4mQTVli+czOCpYX3r2lw5yoiSO72poE+/bKihx8YQXpikXp
fPjcL397cpCj9iKcTZnup7hsDTd1LXRDQ0kob0N87p9HBpw6b/w1lcYWeL7b
Pj0SgvdH0unmxkAm7CHPUxB1sYWYGWrifhD2EbbJGj+2bJC4yikg32YLA5GS
AU3++D6ar7nOhOSABOMeLSNfOwiqmFZc9CQhBT4i7ht9HphzJTwUabUHitN/
99J4kBBZ4vshl+Y88Dt3ZeTdLgd4tOWTxOlGQsUXc3ZTGeSDjXszWYmAA/RP
iJVz4PtSJS63459QAHG3ePq5/B3g7rHEHz74fu0dsBGIb78Gd/arDyR9dwCx
YY2au+okRG6ae7OioBhGp7I87LodQdy2l/G1Cgk5yzYo36cpgTOXvZd5Zx1B
c7Rkcwphf7RLuUcTWgKmVHciYzYcQWlknHfmFAlV5AS1CKiUwtwERf4imxM8
96ENfSNDQv5faocGy0sBCs5Jrx53gmdNf3RaJbHXf/ReC/9dCvcTXjLGyzuB
HPPITW8RvJ/jO/7JpWVQ4Jb7SsvUCYav0yrJHychKY+L428/l8GuyNpvMQ5O
MPrcLWYX9sSw8+bl35jLwU415OcpLydguuKx3o77oaGRHvm0TDnQvLx8NzbQ
CfJinfijuUlIc3flQy6TcgjKeCuuE+EEW4WatWK4r9493+r0yK8c9g09nK2M
xfmZp5T6PfZHrdIO1uqUcujfG2+amOAEa8YGA2nYH1s4y7znrpfDWJxp+FqS
E/y4WJ0pzkhChx0iXVzvloN+lJ/Xx2QnoLnPOTKCPVFod3CSVFs5fCrhzvLE
nF7DUjRkPwnt7+N6ofW6HF7SL6RGJzqBht2/E4x7SKhpmXSlZrQcIg+py3HH
4c+H3bBuoML7/DBz7OxMOezK+vzYLMoJIuKatLXIcf2EMq4cXygH21P2Xjwh
TrD0qoCpF89By7/SJUYfysF4L+1Usi/OxeyhWtubBDqsay/ZtlgORz3JpxJd
nCCh4baxBIlAT9/WO/m9L4fnA8/9uaycIOZ4v6bnMoEuHHtv5DJZDjm++yet
9fB7UYuqVy0QaMpJsbhisByaHW+lKZxxAhuGumq+UQK9ODTy8veDcviWrXB1
iwfvf22RpB/OD12mtGSHb5bDmzjZmRl6J3j5DA/DbpwbeztRVm45tM1+Oh36
zxFuhX3ijnqMvY95gC3KpRzIaTaPj445gneto+3newSa9XW1/nuuHDgPMh2t
fu4IX8NquR1x/nn98cPa++PlYPns1q/TtY4gjz7pR5QTSK7rl+1wfxn8Op1D
DIU6wrmXXacdLhKoTnVdRye+FLqOlO5FlI5wx25sYNri/98Hu7h6j/w6pHH0
XsyftMfnHCIfinMjbTY/qTG2CEp2nauITreHmxcqfwnpEaiEN/NA0GYhBL0o
8L6vYA/yr4miRVUCLdIe4yyeuAYTDOFOJtfsoOua7Z0WMQKZqkuN/fAvgO3f
lPMTirYQHjgT63EQ++muLY5/v7JB0OvMNKFnBQ7ehNP+AwRyoWAIGULZYCvj
OVWwZgk1HR8Hh/dgX1hJruemyYJTmwZ3EzMs4fkdO5EBCrz+1YyrvnvT4YHu
8AePXgsYYZQeS9xaQ2qt2RcsJpPBrJ3K+pe8OezWNBc1+LmGBF3N60vVkiDz
wmCey5gZVFd36Kj+WEODt2ojg28nwFUbiqa0ADPoMEg5XLa+hnYRj996zcWC
kBP/SaWbprAwR9UgtbqGvv50PDzbFAA1wlubQ/Qm8EE7iAJ9WUPxZ0xSzj70
gXLWQZGyemPofivIEbiyhjJl+Ok8drvBAZMXXFc1jCFQd/bIm+U15Nb78x5P
qR1EdtE+7lkwgtsrxySMMZcYu1nvzm8If+epRs7EGgGJyyNoF+bfkJrFYQUR
ONz+UuQguxFYTcz9Gf+8hvL23/XXeKSKkMiy35lWQ9B+VjA3gbmRx8Q0v4s5
Sj0ve2zRyBBYchxFKPFztLOmOzNDnVDQda9OcpIB8D2dXjPHvN6e8tSAvCea
Yf5SdifDAESXPQRHMTdr8Ho9t30eifDmb5BOGEB7l8BEFH6vExs211ztg9CW
HnnTvXx9kHn/67c23ofTumQ/ddtCEet2ac7KiB58vhGaoI737dTaRVlRjkjk
xUbIlx/SA8+oDTuPr2vIc2U783JIDHrWJsm+Zq4LxheePBIiraHiz906ngcT
EPnJ069a57XB+dyJv934XCSCKjOdHyYiUBHd4yykDWKZsxxZG2tourBITsAu
GcV4LJjuDdIC+ZQe5av43BfZvBqZK1PRvunlK7X7NeGDXeihS7twDpd9+fYb
ZRZyuEd5vsX6LIycZrHxoMR129UjpKWVjRJNI+m77qtDnJpRth81gVhWpPfT
HsxBmlVVkykM6jBkv+i8huv2rZ/Uh195V9CrpmCKwBFVYBLe/t14mEBjbTFU
QvH5SJBbQpkz+gzOHcUsz7ixvwfEf7OXLkBqD0s0SF+V4WjRrqnV/32/NyG/
8lMB6m3dOsTgrAyu0yy690UIxHCVv28KXUMH+mRU6RuUQF8lOHRSGfuIj60+
36sixNYTsHN8TB6c+X3OL2Nf2/QKz3IWKEMXO6fJ7HOloIaVe+RCIIHSs1+e
oLhWhm6t/JwQ/S0Jsje+8gmHE4j58P4nluTliN4va6+6hyTsaDdOdyYSaIDM
05TMsxzlzdw8FG8lAWfVfdmnrxMocr4xD3FWoFv6SS/vXBODJ3ciztNijxNI
DMtcVqtAflzn3YRPi0EIUtkywB7Xa3eJxcarAr0kHYPqVyehrjEti+I+gS47
vna8cLcCiTYTQT4VosC/5b878Alef73OPt7+CuStqy9OxicKN/dSXvzajj09
a5olZLkCfYLGDJZWESih27KgGcB9NSmf/QBHJfob1q1I0IgArSDvdjXuzybn
m3nPiVUiFvHwnEe9wiC402KgO00gvi/DDzlUK5GHl1E0R5EweDFahG7jPi85
sJcz0bgSNYqszTFFCsNxd9HM+3guXO8xex/hWIlarnlcrvIUBjVi5X4wniMj
hUfm//hUoix+OblOD2FQ/r1CI499bfttpS5VaCWiFVC86BuGnxNtUE65Q6Bo
e6/qK9GV6LUH/U5hvjCkVmX2euK5lhhx63F5XCWa+VFIqdQpDIVXBf4M4Tko
xH39nnBCJZJbmFnQIROB2IxYP0U8N1UfzO+Tiq9EjNiVH+iIgOEF+fpbeM5O
UrzOb4mpRHWXnYp9b4nALwcRBaaD2JvWCqPqwyoRk+kXC2tGUXhK7VJ9Ac/x
bJfnyuznK5GPcNwd7wxRCEqW8VvBcz+ylq7zr3MlcrlZK3yR+SSUwarUU5wf
qhU4z3CerURvjgkVPTkuBheUrijwHCUhtm6fl1aSlWi+8evBS8licHUx8kEy
HwktPmU8sv9IJTINLUuoXBKDl9bczKonSMjOP9Cn/0sFUph7th7ULg5JCadH
LsmR0G0e4uMPjwr04PGnxvO9khBPzuIyaUhCF03fws54GfKX9nU2Zj4FTOJ9
VjPYs7IDjsZquZShnCLN9NypU+AQHr5/zJyEMowE5ddXStGHcPrNnBp5qKP4
3VVjS0IvWNd5UldKkOYXzXZVXQUQjg1/9xDnz1uE4ZcrLdeRSv3dUxUTCB7D
cw8l7EFha1TcVkkFSJiCh875kyqYRsg4FOAcvm8xYd/qs3x0RWIqeiRCDSSr
jupN4tye5E7GF7WRh35Qu4hL0qmDDJ2tCl8yCaWY9ygeMs5FN9lPnFFHZyFs
+2tPSzoJbdTmXaB7m4X2kZaXE5vOwRbHdKFDJgk1M4W7F+zNRMspNxWOG2rC
DigL/8jCXvzdX8QEpSMNoc4fA+uaYNATpPHuCn6vpjKBhmupyHTtWnSptDYk
muaIhl3F+fMZhL9gjEfTk53fFzt1wZZ644XDNRISnbice88wFjn1dK3weOiB
nN7nTbFCvJ6W1B9BIZHI4f5pOs/9+vCSbDA4qQjnZ9qP+87XB6Ly871OGscN
oOjBuD/1dfz846frGBN8kT1bkBprtAFYPL7v4Y95b9t3v+9Vrmg7iW7zbr8B
6DxnPwOYe1eRtPsuWCNejUtSf48YAvfJ6cUNzO/Qyuwo22qgww9bxkjnDWEy
+CeiLcb+lTn1iLdKDGQ55t/GPDeEo5PXNP/nZmOihsUUJlCn7CiXd9AIUC/X
7/+fs2karZVAOALnyb0axxyMYPPiUYP/v3fVz3Pj0LQnxHnW2PE0GEGOk5f+
/+v07q5noVv0hyQvm/0x20YQobFN9v97nU21O846FgwmG7v3C2gbQ9vQwUcf
8f7U1QTnut6LBqf1/q9iH4zho2jWFxHMX3wZf8KtFwdu23Z6ISf//7mohqAN
3uc3fqLvBZUToJB5N+VQhAnI5owbeBeQ0JM/n/ff4EgBqsdfKMv3mULzR1dv
yxwSyl0/x9xYkwHpO3N2ojxm0EOrMz6Gz30Pz+1ps9gs4N3j2TXsYgZVqknr
p3GdBNY5PQu4lQ1v9M8unawxgwBtZNqWhnM7O6w2B14B72VkPs9nDld/VjDe
wd5qURTxtH4+H2qGqbpp6S0g0T1mwx/XraZT4p5HLQVA82Tjtu45C+CyUNHi
wnX+8ijvPFnSVSAXGtXajLGAf2uUBxUjsDcN+SfdZy4Ep8yfR10/WMDm0Y6m
S34kxBKR2km+pxiWIwcb1ost4a4I68IdbxIyWMxhlHlcDG9onZRaXlqC4vqA
9vP/712LTWK5WwkskT8Kvo3z3vf7nMtN2O8uDg961zWWQrTr3X6+U1bQ5yre
8M6UhK5bf43G/wKU5pKlRx5YQW53R1GrEQntzHCakjrKofLA2/gDg1YgRie9
fEmfhJA/8342sgr4zm+UXfrZCk5mFlXQaZLQUe/8RZqgCpANyyzpYLAGZVpu
mk7siSm3278/v1UBQVPv6o2PWYOvT8QrH+yJ7H6U3cRUBdino1I5GWvIaE10
rz6N73tblPA1+UpovrUUvG1kDZ02A2elcR/zlVbYv9utEi69fXZ/xs4a4kY2
0p5JkVCal+vZ4cxKoJsXyWTwtAbWkJ0HSuIkRP1Rm+5PSyU8O7I5XRxgDUXz
SUaPsCd+PylMHTFeCY+slrtiwq3BrjBjTgR7oivNz1OaW5Xw9P1yY2uMNVwe
DP9QzE9CVG3UXB4sVRA7Pn5OM94a5EqWP+3Gnmjv3nVtSKIK+JojI2UTrYHS
s8HHh4uE1HNOfk/WroINWcOgRMyJNw1/+jlIaI3R/PMFxyq4NutdfjLBGpZe
vmUTZsXn9awzvy24CgxIoneULljDIblFnYtMJKSb3J2snFwFnkIMCfcireHj
Wgb7ezx3FH5DLWVuFZxzMFfNCbYGxj9yNLL//79h7VmrvaVVMDL4SH/KxxqE
IraK0vFcqxU3NDOsqQLdm8wo39kaTr2KMZ/HczCo/UzHxO0qOKFNN99hYQ2J
Cr/b//991PAnn/lv3K2CNu6a0x461nBRT/gpE/bBZYVw/ybMQ4THLl1SsobC
n8228INAwypeX8nrqwAp88ufOGkNfNelfX3WCCRy3Eq3CH/vgoTcV8Mj1uBe
PfX18BKBAtSHyiLwOrnvmgST77eG00/55gfnCNR+hta4Cr+XCev3gTO/rKDu
VvfZ9HECpTDek2BPqYIGTnXRQ4tWEH5Ay+7QKwK9s/7o/9epCgYTHC5mtFhB
cnQm1acOAh0nbxM5r1sFCh8f31e8bgX/VJ/seY7zT/Kt7reK0lUgQvdF61qc
FfQEqvzOxd53bthVY9d2JZgO6T530bAC+f6y6tEcAhV2W9xp8a2EPQJvhffh
+3Vc9tvORVsCed+7s+kzgT06sJgpJMMCGrj2S1ibE4ifu/K3b3E5zPOdIHvv
aAH5/uT31Q0JVD/GSSlni/39kSCvs7QF5AalNDurE+iPXFfP1cYyiLytn/Z2
whxcVrzX34ni9UwuZu7yLoH3zqq03GzmwI6Y52RxTuZ0mb0WdfwalO9W4ggI
NwUHvf6EUHIC2UnRGVc7XwVviQ8hIYqmwHik69H09hoK2ln9KVpYAGLq1bQ7
u0whhL49kAd72cN7buazW3lgQKZg9+KSCYSSjJ5XfVxDXjofKgXzc7APT7cp
5RtD1pTg2MmFNRQrG73V25INwb+fuMaaG0PSS0aaz7NrKKViVLmoKgvE7OzQ
FTZjGL7KmTs7voYYou8W/KNJByMunTrbEiO4tyH+kHizhoQOBCbVlSdB/8fM
ypwbhtBDvqT1uW8Nof8oOu94qr8wjiurUEpJQwOpCCVRFI/svfcuKi17kxkR
mdnbvURpKKLQU2akFBoySpJR7vem0jD6nd9/Xp/X93XOc57znOd83q/7dS9r
/dmoxkhUt2kKizhhjJJdy5euesqAwwEa7FpvwvFIwBXW1F3GaLp2YXq6nQGX
y+bHHdmD0LXHo0b+hhFOd13LpbcxoPOlT2ezmB/uCNzGOupuhJOPgx3jWwmX
yS84yOt44aDVj/0v9xmh8trMN5PNhCu3TtjIsB7HFmHON0rehmjqH9J7lOjC
4Se600/YYJ3rq1ChOQOspt3z4SJ6EhZb7QxXR7G207t6owxQTD6ve7SJAWlf
t3acui4D7xyq01xWGKCNhdHMNNFdeR8cZ2SawZslmWqfM/UxxO3Rp11knB6B
H9c8hI9BRUVAhKuIPj4XLim/QnQ3kZuzNb9OQeKtHuO5W3poutVTXrqFAcET
DjTjMQ/YotEVclNRD33nziYsEr3/bZ0T1zMfiOgdvJjSpYtftmQmz5P1fugK
NfC+EwBtL3xr7trpomXlbandJG9aa7/n/b0SAkeb7rJuZ+igz6Rrw4ZOBpR8
1/ySuDMSIosO54vx6+DXf5etDvSQeYfdVL40x8FWwzWKpr5aeEM6K7WmjwG8
ouz9u2jxMHWsr91rtRY+/UDvPPaGAed82znuhl4GFs3DMga3NLFOaD2lNcSA
TXfLVj65kgyOx0IGTzE1cF1GOsoTnhVnXxNtI3IF7sWKcQTHqSNL5rouUYoB
lpWp1QYs6XC175960351/B7dUaZIOPTzbWNO43fpcMVY++TWj2qo30u7x5gj
PLsYa/P7Qib8bKz5e0RVDSOKMs5p8FKwO/jqGomqHFhaNZEgsk0V4+4fWy6v
SIGjYu/q5O1F8Kt4u/lS3SP4N356faAqBXU3h018vIrApJVlQVvwCD627at5
q03BSyfgmG8sgrnlkjUsTGUM1K2V/G5BAbfoPF+TfjG8P1vn0lGgjLlTLBqV
pD+k7lJXHk8pBv7VO31HApWx3cTuRIQLBYPnkhLO9xbDpZj2Nh9LZbyW2bEY
TPgRYjnMnxuUgHiRyCH+jcrIYRcaVxhIwf0F/3+esSWQeiVkRGcR8HvlzSMD
4RTs6z8nbo0lcMEzfr3bM8BjQfSdmUkUDI0en23fToP9ytYPHwURrCN/82dS
IJgV737IlAZMn4M7mFaA19Y/tL5aQEHgn/gtnaE0iLz5UEf4MGBPlPt+1puk
n2879mrtMxqI/nggHLMa8N98w/1OwpXH7VfdRooGX71uxlexAobVPe8sbiS8
PG9xxpmXDmLtMZt6/yqhwO9dcLGVgvVGe71/76bDc6uY6rFZJYxyl5kKfEaB
aUtUob86He7yvnYb/aWEQ7dtcwMIVwoGF8q9s6UDZ210VuuCEtrKym+JHKJg
gHGd2uBOB0r+Ws2FZYDzHHcV0sdIPHHrf+4No0M1T274+vWAF3l31tyeJhzN
yzK+IYEOIZOGU/4SZF28aQa95J5KrI8a6k6nQ9L2Dxuz1QEvqGDLHLnXet9u
OmOQR4fGru1ens6A9eayp9ayEn9YPliQUkiHX22hsT+jyfOXGjIlOJnQbnyT
I4Po60Sb9my4AZhmn/JEnZsJlcV+VVZkHOsOTZ/ut4DpL/nMHXmZMHRERvoN
mZdfd41hNJsyWhiGpAcQTjy2kzWfl8TJlqWzYXiLMrLO/fuQLMAEyaHNaSxk
XUa1D4JOH1LGxIGRy1eJf/C3qFWocKODjXq0r7CNMhq8TPtWT/yGKPVcfTnJ
2+2g6cqFIGUUXN+0Z2AnE3iPVq78JkaHivWJl/42KaPsL8UbHw4QfxJ/PSmu
iAYb6hNWsJ45gi/3Bx3uIb4rvlT26ho/GtwrNM3oyj6CJrG0LQ1A/HDaC+YJ
LRrYP1usPNV5BJO4OcX9NJkgu92N9fxoCXgybAyYe1Uw8x1XsYcFE3r1dtSt
+VEM0/FKze9WqyLnAJ2Lz4YJglWHe5NuF4NCRZwbQ18VqchBv//5Mdv6jgvP
6WK4PPo0xjNeFUfAqqXUheRntec7yb4iKJY59yiRSw0bNlmnfPVkwqnrLrIX
eQoh2ruwLl1AHbsXayX445iw2XdHscm7LLjbe+tfjaMmOj/byecdz4SwvpXl
91dkwY6mxV/1ZZpokz1Eb7xMfNe25GOuipkQDDtv7mFootAaMy0Bwn1zQqWR
a1PTIemd6MDuUC0UPInnegiPaDUe+sC3NhW2nL+7wFGsjTlJssnxhGva3apq
NkumwH2b6CXcU9qo8kevQCqf+PaorfkeqskQuO93zRoZHWzjrLaTLmKC/Zxa
yo8XCZC19b7wvxYdTPp+Xk+4lAlizvHR/Huj4WrZYsqrz7oYypafL1JGeCrF
OzZMKQpaG1c5ZEjp4cnsb395rjLh8VB5xyPtCPhFezfy01cPox/xyWaWE1+X
E6D+61YQTAWc3OPEqo+8/fEdByqYUGa4d3FrrR+8W2E1bqKtj35cV/uR6C6/
V3Aee+AFh35fPFidqI8CnSxcMddIHe7efd3A/TiMx7jYXhEwwDEJT9YWojex
vWvLfWoDF08Hhs3bGGAY/4z4JNGN92kaNR1Xh00BZz+X5hvg6O9W/59El/+3
6YI5XRattPY1RL83wIY3AWMTRD/XY9LTEW2OZ7kkj6dsM8SrZSPezURPXv1s
3OHFMRydcAh/6GSIAinCO6OJ/tzFKe3+wGksDI6fXFpkiMXryjmliO5Q/2Ht
gKcnrvHVrDcbNkQN1p3CD8m6AuIeK8d7+2Lgl6Bdr1YYYYVq9kVZonMpY6mB
VyD6/rLavrDbCF9nyOtfIXm7eI5b/OK586jVkNqUr22Eb9+udl5G8pxaoWrl
eT0S32px2x2IMsKXTJW45yVMSMzKeSXsdQkrU9M1rSkjnOnSK7lQzISxUvll
b20SUKOvvbxnmTG2v2C3FSH77irR8coJEnG5YOCpUiFjjMiOz9xE6qRf1yjc
eSEZ04+BqY6xMXboqkYvpjNBM9+H/WL2FXx8O2LkSLkxtoLcE5YrTGhVuZ50
JDAdxWueH5ZtMMZkHYfRacK5t99WJ3WZZ2Ba5+mus93GKH3dfsklUue8pSGL
L9myMC+qSLD4uzFypdN39kWROA/RGNIHcvGcTt2/7/tMkOVmqeOBCMJl3+v1
WP/m4jFdS/0hZROs8vt5PpZw67Rh8L87dXl4tPmJFYuBCdJtD4nPBhBuPTyq
oiJWgAFtI7nfjpvgCavub9znmMCqsr1gz+ki9AtJLAxOMMG/g0uHyk4xwc5m
3UPVR0U4rWl/sOOKCZ4WrJjce4Lsr1Vxg/+aYnzgOfBdMs8Eo7+rz651ZMK+
H6PHeaqK8WWgfLdyuQny3DdS9bAl9fxyZrP5XDHypFl6fqs0wT8TdN1GSyZ8
/lH58rJKCSr+vn/w4W0TnOK+8WDelIz/l7m6MqYEd1nKfi6/a4Jjb88r7jFi
QonS05Vl7SUoJdVz5m6NCe7vvRFprscEy7ylWV7sNNxaf+vL+3sknt2SCh5a
TOh76795uTIN/6UO3ttba4KmM5v5w9WYEFFideuoPw1TE0T1ysnzdeWVrdHK
THi9d+eiD+Gsz/QBC20yfuvhycWIw0x4mplpc3iQhhiVcmMdiUf/fJGPL+Fc
sx+qNVXL6bhH76XRGhJ/6yq5ASfCuVB2sKBbho5htk9PqZD1bvsbOq62lwl7
X1urpdjQ8UfhotbVq2RdNXkGwhJMkLpC85k5T8c1YgMu6iUmKPLnbeuf/9+P
HVXPpvLpuDfL0WobyfOWfU/uZ5N7ROvpSp87vXRc2FXzIfeyCVZM5RQ5k3tn
ZE8dh88kHeteZ5urRZtg3rbYM+LknnpXvFqtY46OK/TdHOVDTPAT5D5n8DEh
LehERhVXKU4uXlMI8zLBLi/F81UrmZClfWBBYl0pev5thI2uJkgrWSfuzUX6
xvII7sNbSvG7avrISnsTVDGkYvZzkPuu9cvYe+FSDKzZVXnU2AQZymlqs0uY
ECXxUXnj9lKUmWJVFVA3weo9p0W95igwiU5zmBYqxbYbLxz3HzRBC/9SmJuh
QPb8CI+dYCkqun180Shugn3Wsvvipii4dOQQ7dSaUuQSbfavEzTBYG+62eaP
hHONT7Js5CzFcdEmTbGVJhgiGThX10/BtLdirOcvOuYpRavx/zPG0Vr2APuX
FPiLmwj5fqLjteS88AjKGGeeyq/n6aBglid9n/hzOipGbBD0fm+MpYLHJhPq
KPg6nNT1KJOOu4zuSMw1knPt8noBsihYPnOy/hgbHRfvcI5I+xnjl4Inw1bJ
hH9dv7hVvSF1wqY8butsjFXBBa3RsRQc8N5fPX2VhtoCDkmyRsYoL8ypso34
RlpUl5I50DD7W83BFWKkD0gHSvrbEt8Voay1VLcELVjfjo++MUKP8Mx0QzMK
dDRb4wY5SnBJ++OP25qNcGLq8QM1fQp03Vhe/MVi5IoLlDx40wg37j0vEwcU
PHSUNZMVL0ZdIYsyrguEv/7yuqaLUhBn/XVO6FEh8tcY3O+WMsI3O1kPh/xm
wJ6HjjwX67NRKc435QyXIS5u3LlnmPj5s+VTM/dns9De2PRo2agBZvueq3Ih
/r9RJYLzgVQW5iz917Oj0QCLh5hnRz4z4F19WWZCegbOnRiJWutpgHsvr1oo
I9zha2Fa7XskDV9jnajjkD4+ruFpVyCccmPn5uNcJ1Ixt2Lwc9R9ffRpir8/
+4IBA00/jLRiUzDDMz5fOEMfC1Lc4ycIBxXf5v7knJCEc6wFx8aM9HFi/58l
jY8Y8In18+4O81i8tPzz3KZnesj/RdYo9yEDDnT0j/eGxSDtUvnWGzf0kMdw
eB+9gQHHvazal1y9gJ2i9ZtGE/Uw4/jlFLn7DOB4ZWRbPR2OLnyHFg1N9VDg
fJf7o1oGpK5Qv+S0KRRj1X5VJMnpYerd8TLfewyo0Kg+GWwZhMHqL2ujN+rh
9Ere28eqGaDomlD9t9ULwxNcafRPuvjkltfDnLsMOPP0LlvRzDmsFW373Nep
i3EbjhYs3mEAbYnacjPzEzhq/cGis0oX71+UOpZI9Ixz4lkcp+3RXoVFLjZb
F7M1vAR0iP7t8IO0MB09NGmezlodqYvTQRzt0kQf0IwPCBHkg7R7VSdOndHF
/I+cvupE946M0t99ygiEXeytUs11sefyq23RRO/67P+e/ZYj/N3/5neisi6a
J69qZRI9TXe74f2Ak6B/pZJ+VEIXVa7nWsaS+Lti5s5oCLjDW8ZEHM8GXYyg
cjp0yXpvrX/NJWjtDbKd366mcOjipxOdv81JfrxYPB4/+hoEdxxXlEh/0sHD
5dHheSSfASs9d81VhYJV3+1Uwz4dDDboDFlJ8i/mqhzYJB8BVf6bx/RbdVB8
DmV8yH5NdkmK9v64AFza0r1UhQ7GB/5MPUn2N6mlfv/V5zFw+8ca7vR8HRTx
aLgVTephaXpo8t3SWJjKkR/anKqD3A9vyh0h3G3m+qHnok4CKA3IRg2c18El
V3S2DhPuPnZ8e0G/QCJc+701eJWvDgZYWzXRSb0dvXM71n8kCZ7UFZiLndPB
dT/UWG6S+pT79vKAZXUKmOGq32xOOth9PuA71cuAmRU1LZOpqfBsIsetzUYH
w2jtxjak/j98bo2Sck+DvdMKoqcsdFDrmk/913cMaL1eP7lM+wpQtQ3/vpjo
4ILDv6dlwwyQWXyVa7ctHfZVrqvWN9JBuU7RjbEfGbAhK91rxc900J8o7Uww
0MGtG8cOJJNzN9UbFvKvLQNKf7oXXNXXQc/2oDsPpxjAfnSaRSAjEyKWnLbP
IzrMHedbQ87veudPkQePZcGeW63LTpFx0g6dGkgg531UarFZa3c2fLyi6stN
5uU/npCwm/QHzTdW7RLfsqErPF43gsT54teWIsY8A0SuX+nruJsDRzMuLXti
roONjQ/iXy2hwLttKIjdOxd+Ob1ZGLTWwdaXGo/ec1Dg3LLkSqtUHsxMbzJp
dNDB+hVzFTw8FFTmp2gyP+fByxUxS0646GBT4wm5rnUU3JwRq96qVwBLLT8m
s3rp4I19+XpHBCnY1amhlvmzAOjCcV/bA3WwlP7U7pUQBepaKx0UcwthZn1c
C0TqoMHydaOWkhRI7u1VsT9XBJbR610Ppeug5Xzbp7vqhCsjCvctv1IML3p1
t/5s0kG2aT6NlXoUdInODuq8LYb2yWiOyW4ddDynKhppQsETlccrDDaWQKsD
47X7kA7qOE8b33Wk4Nxq/pVemSUwX3LdXeSvDqodG5UXDabgueaXcQlfGpym
asKy5HUxklc2RDaScPGkdJlvGQ126i5Jz9HRxZLkrMdWcRTkFCyoHXxFg36d
4BWcduQ8joy+7Msk9931D4d5CKdznx94vyxcF9NSCm/GEd53Vg94u6OWDm+U
276v7NLFq2tlO9YT3i956xLm00uHRXuu1ub3uuhytzz2bgsFFleEPrFPk+dL
53dWf9fFebEJ7mV9FHy/u7JjWKAUOLtpnVKCenj9YEEvDlCwpvVdiqBYKYw+
GfCv3KuHbzMOa4WNUuD0/F/lpQOlcE177xU9dT3UC1c6rv6Fgg27ejeLqpYC
b3tYzTIbPfTe2yCy+jsFjzifqE7olsKUT9OJd256aBAXFzTyl4KjV5cMvjAu
hauDZmL1UXqoOCF+y4b4h0P6Q0sHzUpBqlDLj56lh3xHPn9QZycc6uEty2le
Cto76jGJ9HNm3kCn9HLiZ2R5TY1MSuHtjn1efk16KGiV/GnzCiagX25BjV4p
ONxf+Gn8Rg/HjjfQl69mwr1ktkeyaqWg8qrw9qavelg/YhfxYy0TDgoltnYf
LIWunwc5nrHo46ud7dTQeiZsmdokGiVeCtk3/tg48uujo3eDS6sgE7ZynGs0
3FAKGcNZa7vE9DGVJdTs2jYmNOZrvZFlLwUNy+e5PEr62CJ+0vv0LiaYaF14
atxHB0POwWeM4/q4dHebdjXh/VuzufK/DOkAUQ8iI+7oo7dAhUwA4f1BTrmA
+p10eBn/1uJ1iz5WsPjskyW8H/j93Ptr8zR4w5Lp9PS1Pg7tTlbM0iAcXVao
L1hAA95Ff+3zf/SxKP6W3nczJnzoabz9DkvAK5RHxVLeAIdWGBV6WBEfy++8
LSaiBJKkDcTYtAww0X1l9Ufi26cav9MuKZeA9GvpcSELA8INK7hpx5iw7t1B
u4f3iqEj9vSOHA8DnB/k4IpxZ4Jso0VG64UiiJwTj/tKuHKfo/yRIS/Cj1cl
lVbsLgKHJJvVluUGiJOrzgn7MSFI/dmcYH4hTEmLJE1WGeCsTcMBnxAm6PPW
sDM3FsBentksjyYDjCywLg8LI+vlnq1cMM6HbZyVL206DDD27fkqv0gmlLcX
V/+OygOlOwftrboNMNNJxkw0lgkZO2/bKvbnQJKnbVTwWwPULP/TP3CJCdv1
do12zWdDqmbHy6wBA/x4YP5FMOGvDwYySa82ZUO11bbhuiEDrOhvq2NLZkLs
WY6xELksmEx03Pd22AB3VE6v9UsldYhXXCb1MuE6e2Pxd6JvUNh7rptwX5OL
coSKYwaAKZ/OMqJLV+bqr8pkgtGLPTm3z6VDzwaZ9DWDBniUtVLjYDYTtmlp
z9gFXIHNGyQV1vQboK/O2WmNXCY4Xn991TMsDaJZPZXYXxmg6c30gUOEQ5f9
6b2+ISoV5ixGZ8fJeq3P3ri1rpAJdTJf6sKjUiAru2/ZA5KfP9IueSGEf19I
Ogufn02EV2J3ju96QPbxEzs3J53USZFl/4exBDh08/aV5tsG+JjzObdfKRPW
JgXUS724BM2HL3/WLTPAkL74ChbC3c/+rRpfmhkDsVsbjEQTDZAW8rVtE+H0
Rlj5UsvnAuyw9ZvyDzdAHRMP/42E9xtuSMz90o+E34cPX3tAfKCx+Zfux9cJ
j9wd9JRjBsNW+XgQMDbAU+u2iZ6uZIJa06j19VR/WHexVF4WDNAnkcf1J9HP
/xge45b2Bq6QkyW6EgZYq/TwvPMNsl/hFd4qWedgQDHI3n69ASod2GBcTfS7
f0PPn+5wgaXrTxefYzX4//2onnGiOw4VPtFmWMJWz3+zYdP6uIa96s8C0U+Z
8lkdWi8PW64GH8wi58i/X6BpluibT8jwO7ZqIAfvg+QHD/XxCIZJ9RDdaK/I
Yssye4wIlg36UqqPXGwKmslEf75i00yk2UkMvjXTuCdBH9cPBm6UJvqG4BwO
vlUeWCVt5JXgqY/TGTSNTWRdVa8S57teBqDKKqMlpfL6yB29u9+F5KeN+92Y
qMR5NBYyDzsrqI9tS5yzU0g+z+92Ukl8FI5P3G9WOS/qoSbNwTyd7IvxEqXI
z9zReNH1Wcwc6uEN4HmjS2OCfNDj9jDPyzj1+fyDTAXSn++876guZkLRbrpJ
RCjxz1doFcUCejhSyf1+aRET0mWvr59qSka3v07e637oopzPzW7DPCYMLC0t
Wfo4FQ17bUKPXddF4esrA2rTmDB5KPdvdFoGFoUlBYas1cVbQ64ywqFMCH5f
fSnSLR/5bNYcWnyrjYfStXeoBzMhcaE2f8POApSsTxy8c1cbh5mt+ywDmLBr
KeuyzQMF+ChfMO50ojb+ucx1UYf0jfAY1daojUXEvwow2NS0UeT0c/6Q40w4
7u547Y9FMYo8SY3ou62FOw51NIqSvlSZ+je7trAYfwPXk6QELVy4UZPY5MCE
6GNn516NFaPbXkXVVFct7FGW7HljSc6drtr46tMlWGCz5WmikBaeNPm0N1yb
CW/5XR2rjGnYf14WjbM00YspfbJHnQleteNZORdo6Bdy/cQ+f0289kVjj6AK
E2hb2zZVVtOwdtUOtnwLTVRJzqjNUmCCcJ1r334eOurvLDPfK6CJjNPeieq7
mfD5ZAaLZxYdnbzc3+0u0sCt7tr7XQjv/2bn2SFZTceAVXkH5C9ooPnXj7Oh
IqRfbXTU/tVFR2/vt+ErT2ngJ/u+ddcJ7x+eZ11W9ZOO/ebSjyRlNVCNxSO9
kfC+ibzp+UL2UtRasbo/WlADbb6IeT9fQ+owW6Ikm68Uf0hsEGpi08DjZjow
zMsE1uPcfwoJd4eH3zaZnFbHAyynYqe5mdCnIeh5V6QUHzmeYF36Vh03fLEa
/P/7xsVVh11e7SzFNdXDJXzN6pgeufYJDxvpS601WZxipcg90x4odEsdb3hd
e7OZhQla+V7yeuR5X86B8v156qjFayFx9DcFl193vCsVLsVXu8Z2mlxSRwsd
iU3xTAq2Hm7xFdhUiofcBlrCAtWxtizt8oMJCqrdhE/SV5Xi1z2/hZtPqWNn
88dU5gfixxxrzxmxluKJZR/vC9mq40GVqQNS/RSs43xQvvU7He0dBvuK9NUx
5OirGJ+XFLwW5s1Y94GOlx2WpKofIfG0c19s6aAg/Xn8KoVOOrYciR5ZK0fi
cV+ruLWJAs9aaYOkKjp2NyyNXiOhjoOPAq9FP6Dg7a3jw5sy6Bjs+2Klhog6
xrXffPb7DgUjjkLlY/50XG7hOHJ7kzqaJvwsDrxOgUzHtokZCzpKZRRLWfGr
Y/0lja3L6RTQDXn26MjQUcUg6BesUscMJXmF8jzii74XOs6Q+qGdkuU+y6OO
/a3To5bpFMQ6vaicGaVhfScn54fl6tia8mv5hkQKLvowMk3qaOjsmWleuEwd
A4W1M77GUKDX08HYcImGuwPipW4Q3ad9m3tvGAVX1vV2GFnTMPyuSAYPlzpe
cZz1ex5AgbG80qV/ojSMantj94jMG8V3OmHYk4LMItG3UswSHApe2PKUxKnY
vVbzyP+flylIrZU5X4JMMWcWSlAdddXb09PtKUgOMaVvVC5BgYsfjHhE1bEh
eUZtqSXxgTcNl5azlOCavrbFWCl1jHxVMrVTh+QN5bYOBhVjwOW0S2Xq6pjj
MelxX5oCCYkX5s/NivCcQfyRlAvqOP0zyvr0blIPyYaa1xYL8a3a4XC/bHU8
/CXsrZIoBZ0+g1fmDQrRsMfViuW2Omr7pU+Yb6CgWNpH5fNIPgpFb3zB8lEd
++yzt5mwUvDFLt9GrC8HGboHtPOtNfDeiQP3ZBcZkHNtv0o1Rw6aBXU/TwnW
QKbx72GVPwwoXvyceV42G9OqzVSFCjWQJUPbc5DwVNGdirVGsZmoo6SczvFF
A/d9y5sSfM+AP398Yso4ruChQ96jKema+FH1U4b9AAMkh1+49m1Jw4rdzO8c
LZq4MsxWuYtwYm0J14jx/lR8Ln6y/O93TdT6IqMp+5JwtHiXcodlMjbP27rq
WGmh57pfn5XbGDCU9+yL2PI4XN03GzQjrY0yB6rPzDcz4MQJJ3aTdRexQMpx
pPWMNhp6CjyeeEy48o/wU+tt0fim/1bkZJk2snV8e25GODq5C4ylJCIwIa6e
h11IBzNHtjP7CHf/NVLdvNk+FOfUv/AzHAmvlQbcjalngGOBf8eUfRDSP67O
W15E+M7UrTKM8HuMQv2/RXMvLAsZD6kV0cWlDKX17XUM0O7bbjOUdxb3JWWN
HDxJuMY0OVWZ6C6KFz2CL7kga0PB205yv1yn1e34WsuAXbzLBli/WmGinoq6
yzddPCDc3N9B9N3MWytPRx7B4Xdnns4d0MO5aM9r/UQvd1zmEkdXhFfsZ15c
DNPDElXFlE1k/HGDC3a3ki3hK0dr8GK7Hva8sApPInq2r2JPUr8z9Dhx15mv
1sdlI7edZUn8Hz+KPVk1fgbOMR7IRNnq47e86W0rHhDu/q0s2P/LE0zSRI6F
lOljzCvvzHUkD6kXRfbs+OMLHG+sQuRm9HHn2bKVDxsZ0J60JPMk8zyY9Uoe
ehxvgGJZNbbWrQxIOhV3E1/EgFVv0xGq1RC9l+xSv9/OgPjBbW59D2Oh4G/V
6BsuI+w5K7JUu5MBgxsKOLdVXIKZQyuvTu4zwu0zgZdnuxmwaoW2tJJnIozO
SJvGRhmhWWDZjdAhBgifyr5HjaYCj9WzJ3Oixvhx4etMHwsFH8uGum0qsqGi
Ofpw6ykTDPhy79JHdgru+X7iUnfLAbNc//0fkk0wx3tUcB036RvtP2hme3Ih
fd+b6ke1Jlh3Y8H1Kz8Fq+W0KPfSPGj5Z2B4j80U6XaTv5UJXzPVMviiHAph
/79y65s5pnjIpXT0//8rVzB2H3jEUgT7Bjfo70VTNIvXqLwjT0FzOV/tJ8Mi
GC3dswdGTTGdEehcpEGB4dra6+Ofi+DOrbZD42JmeLexcWvvUer/76dtj5st
htstMdbZt82QmlrsG3ElHH2Vev1OpgT+UMpV9S/McNnnhfllHhQ0fps19HYr
AeHVncb7mGbofuhHal4oBcKD638YD5TAah++qyyS5rhxfsSqnvRbkXtFfA9T
aSDX91TkWL45/vbm0PIg/Tm3f+c+5fs0GNh7mf1krTk2ZXvxyVZSsFNCXLhp
kAZ1c+slL70g45SOF0zWU+Du7MZdsZEO4QvPH6xmsUD2Uylcb5opaImcHGKR
pcP8o2UZp9ZZ4N47XKXdT0nfu9hxQEmPDh+rveltuy0ww+tX2hDh7r7r69nN
POlgPqcSHGBqgbZyx/yZhLvvXPAeEg6jg/Pg65LHx8nzykNXl3+lQDNVkbsl
jg4DwSR2Pwv8fOjl2M4fFIS0xUzLpNAhu+6DxfqLFihxX4jSnqdAKFrB0T2d
DufuAf+mDAtseH4DDiwlfqyB5753Bh18+y4/m6NZYNulmZ06HEzoKrHsVbpC
h8y3E8E1ty1QJkaAx56LCUunJji7E+lQWb9ZU7WBjLPqh4b7Sias2tEoIxJD
h2s+ppFFbRa49nLWvnA+Jqmf8jqFILLebXdvPum2wFSXU7uS1jHh+5nJUP4z
dPAb5Tlf+8YCs+8oRORuZMLuA9dm71rR4WdXQLfrsAV+op1Np29hQgnfiQ0C
qnTo3/L9wdtRC8ToZY0VwkywCFA4oyxOh0ty32NZJyyQGTZseG0HE9zzN89L
r6SD7sn5urEpCzz3g1ZaKs4E/sa/rgwGDRx5di0N+WqBpaF863KlmNB//85g
QBcNLqwtN2sm+pYEzj9x+5iQN/pv1asyGgxpHxmo+2KBdhfpZQRoYGn1IUPO
UBokZjTMW09aoOdld39j4gP1bNg915rQoDTcwJ4+ZoFmZT4tu5SIP59t/7BE
hAbsQj/ep38g++J/cnz2CBOUTm/NecUsAb+nLVcl3lmg//FWhXriP8fubRTP
qC+BM5UHNpzssUC2ywEjIvpMKFRb8e6vZgmwiXH2P35ogbM/vzHajJhg+ObR
l5vLS+Dn6JcjH+5YYEf68WJ7M+LPW9bWuj8pBkb/jfiCUgtMT20JcCa833nD
K1NRsRjMOEfn/sRYYLdi6Fd0ZcL+e/cz9rMXwcTv5qdy8hZ49PFCc90ZJkgb
vvYLOlsI8ooVR76JWKBqoXhDiRsTfOr577N3FoDN5hVnQldY4Obq+8paPkyw
9h/6OeqfDxmnV1UIDJmjiGqF1zPCC81x2zwci3NgZKxUKdLNHAeUgjaqRjAh
5LL+l3cj2fDJZP2uFUbm2CigFFkWxQTbnNVPMrdkQ5jPD8PQveboPsu/Wpbw
fn1tzHrNy5mw5WaBpxDDDJMf8uicJPyez23y6oHKFRhYjBF/Z2eGnkb/5pUJ
v6+YLNsW7JoGlxJf57DJmeHt6KMN7ITf5XwebPKITwWOiwNKB1aa4ak9x1QN
Cb+n3Fy4F9KRDFOTWw931pviz4dKpwcIH3XGv+OuNb0E4p6L2ho8pri61Oso
RwHxww+FhpmBsVD6JZPPaNgEedz8Lm4knP530n+kMS8GbqRMRqTcMkGt+ku1
C4S/WJdsHt3fHwmsu0/efm1ogreWb/DvIrzWuOvOEq/v4aCZ0HB5YosJnrWI
fhFFuH428tzki3WhwLs3Rtdg2hif79Ufv064bybrsaL1GT/QtPPwk4k1Rhmt
l4GChPd/mJrRhFK8QK7roH6TmTHiSKKRL9EDWvXbz546B5dGO/uatxmjc6+k
0z2iF0xOqTrcOA76dsOblb8aYUqUc/F7oucr8C9NGrYFhTcCtlBrhKq+P1Z9
I/rXpJiVxx5rwb/IE+87IowwsqX61hTRly6f6Jwa3YV8Z6wEJ3SNUCHtYmQX
/X/OqojJyzDBomUnikr4jfDmCfvUDKLLb/D7WsZ+FNfanhFne2iIEn7SX7WI
riV6mmtjgyuuenkzeIuRIdp9ZS8eJeu1rw740yDngct4f0yWjhjgqqpG7x6S
n825Jn07h/3R+JZphyqrATK7Mtt3/P8+QB1XZN31YPzb7O4RmqaPJ/cZf3Qm
eeY8OutwxicMT57dkO0moo/iTx1Ys8l+ce4o4PQPisKT92b33lfRw9gvHQ4p
ZH/bhfetfm4ejRqDIfUHe3TRr3D3bu980vfuRiZekbyIK0yTZmuP6mIvQ2Hq
ew4T1q7YzmHx8hKirLgzS4QODj6xSGOSeotKyxrm+5aMR3faZbU1aaHfIKfm
umjCs77HFnkDMvEEfPELc1bHlX3Ug9RIJvBkbS8c1c7CFaE9R1m/q2HZ4m/b
v2FM2OTjUaArkI0tctudP0WpIc0wUOZyEBNOT3g0m9Fz8AQjZnTdNVUc2nhR
/wU5p/bnZTdOReXjw/R31QVcKlhZcGxHDTnXLS4eR35LFeDZxtut564ewdk/
8plxpA9MC9idvNlXgOeExuLVNI6gjIV1OSvh7skepftvOYvw1cmeGctLytjV
kvVMn/QZ3jQd+VfbirG/U7ZYz04J/dmMcx6RvmQuF6jV4liMU0rlqfEPFNFf
fnRhJ+ljnVLP99XkFuPIOPfjxc2K+Fv81PY3pO/pxfPeDuUqQfskvf6lPw+h
rV+gdQfpt1wPvrKwNJegmMHE1IvP8uhx8I7Sd9KfuY61e2tPluAqo9SjnF7y
+CJ4bInAHtI/n+QrufLQcJyn5ZI1qzy2Occ9NSDcrZnGXblRm4YrLoSF3z54
EKOe7N/hQrjbUM9e5NoxGg7UbTT8OHgAbURWcfpt/f8eycnmCKShQVhrd9zF
A1gRo/YvhXD38eJN5tvzaOgmZ5t6kSmHJ3fMnMgn3B28X/HjWDkNswzv9yy5
JYfN7Uo/rxLuZgu49dfnDg0Zcgko7yOH+r/3Gt0h3G2U47Whl3BcfmZzsJKy
HAblNwk2/v8+m5AXLG0gcXIusG5ZI4cvb7QtPmFlwhVI+sZG9Fy19VJjX2Xx
un+h9I1/FAxRWXLDZJzwadaKwmey+LFcav2zXxRkyMqkp5B5m649mreskUVb
5y7mDEVBV+PN1SIVNDz2PuuSAF0W31z4+2sr4e51e3p2Z5J1re68dPlztizO
r/h3wpxw9/njGYMzCSSfAqMbuzJk8fOF+95X3lJg0/c67VAQDV3fs4s8z5FF
tn+BRsMvCO8r/5L1d6Fh5C9nr2+lsrjvRf/u/YS7dy2GbajUpeFYYc4d+TpZ
zBtI35v5mIIjfVVsI3tInkPrz1S8lMUS8W96cYSvt7/5Lu5KlaDohaWdrBvl
EO3CSjcSvrZo/c7V2VmCL1V2jE1rySF1mrOikUaBWnfQAV1aCX4duu+6GCqH
bIsSSxUJR0/fj+fv1i3BZVqmPtEsB7DsW7OEUiAFu7Npg1PBxZipcKEo1eog
npJcKxHkRcEbl82GJkeKsbMaWrY8Oogz5w/MdZ+hQEVhJkWMjdT5msOrc6Xk
cVsa1Hc5UBAtHsprEVmE/xQ7JWW3KeC66x98RYi/3fR+Ze6f5gJc8JK55GZ2
GId62HIrlCm48HWr3sS+AmQ9ZxxtOn4YnwYtEdM7RAE/+/NsnoJ8XJdjtWYo
TBEv67H/mNhLwTePOXXDU3koLlvUUfBYCa+VuUembKbAMmAJA15no92JePbF
JmXU97Njrl5gwEK4q9W7LVcwrdzwji+LGv74riZbSHjW4/YNbzm7NLReiFAu
91JD7mTWe0azhH9lnCb0M1OxhpqoWDauhrc/pTcLMRkw/HDJ8vWcKViop6C8
9bU6RiTGhV0YI9xnwLeetSgeL+4S9BLr0sQaxlqZw6MMsIt7tB/m45CqjXxt
YqCFaaeGHTaOMKD6Nltdvnks2tm+9zvUo4X56VITOoRf7u16MZ3LEo2xct4H
V77XxvLrVzUiCBfvqF3uKhscgvf0fyzj5NZD5+nTTp6vGXDV3jCla3Ug5uhM
2gRm66HkhPequFcMeJZxLmFdmS9WygsGSojpo55hxIknfQxouf7vYcRBL7wz
K5nF+0Af2zeNndtD9Ft7JsT+pJ5DfYVbdav1DFDEKUbyYS8DRDUUqKk7J3Bh
h2e50HsDTNs1etWH6BvX7l9zhuaIXeLvWKW8DfHeCb4BE6Jrr6EEznwwxnEs
zOVjM8JXE62PrIjuN2nkrxC0F8c7hR79NTDCaVs9gxiiu8zlR31SVgXeN3n+
GjlGuMY6zWeA6A0xlbs+2FjC5SDN6q9jRvj5vNg2KxLnQbqabuTFYzB1V9D0
kzSZJ1lZfp7o4+47ONLtTwH/qQzB7aHGKHXnFq2d5OHV3lbukwIe4LzhTGtJ
pzHaZf9UekDyNmna91fsvDe0TBpQFgImyHLSzGNtPwN608+2eSoFgWn91Rn5
KhNsvt16K/gdAyrUc5dszT4PsTU+teaLJsj0bvZaPsiADsN194v9w+Fya96r
cF1T/Hq9oSzzPQOW7qhniLRFwal7VdrDY6bIeT39uf8EAwQeRH0aULoESYKt
1rQN5jg23uG7ZAkFBqaLe1fIp4GneLxugY8l/mozcMtlo+BL8ey3vuk02DqW
uSy3wRLv/61TM19GwQfNTFuWoisgudxZfgWbFbJwP8Adqyh4L2f3T2w+HXoz
p57sTrHCxmDNRBkhCqyltQLdUrIgoSGeQ5NmjT96V5ad16KgXrh51fjmfCg/
HPn0XoEt9qzSXv9Wn4LHVbtM9xTmwzMPJ7P8flv82mWbpW1KwetfBcsKBAvg
3lTtrPMaOxQI+MLvTs67YOjc0kruQrjWwS7oFmWHXjwqxbd9KVhPM9A4aVcE
LeGP2aPM7PHg7B+Z28EU/DkuutCaUAS8Y2rf/aLt8cTvz7sfR1AwFjvS9/dB
EcwVHrrKUWOPZZ17YG0iBerKfm1dq4oht4pm08/rgC42SstOXaXgYqgE+6ni
YtjZuNve+64DrhykTQ/doIDnusXp51gMggU1AmffOmAzW8CgfTXhd78D7oMD
xVDSXabaMueAqucOBweTfqu3o6vtA08JdDsMPPNXdESp3/YBAk8oqAl35+oW
KoHvevt522wdsXV1+Ib65xQo2rL1mO8vgR9SSvHWAY4o+UfpGf8gBctSa9dv
MykBtb+NGw5WOuJisdWWpx8p8FjxaMbevgQwcKbEv9kRt44VJ1+YpKC49t4y
sRMlQPd3tRx764jeb1LhCJP01cJp47CzJXBX5fd88Feil5iqs5D7q6JRZ72j
B9H9s9LkFh3RsrP/waMFCu52K/1p8yyBnepuu5dxOiFNgHVQmfBsefydzzXk
eQv/WselK52weHRErJidCaJXJ3fuPlcCgRKqTZxrnXDvxTU9LMuJH95ia7Pj
ZAlca7lmsG6DE1JrNR0deZhwfk+o11WHEmiOVRCS2OyEBkMfbBvIPa4QGN9w
07QEfFRp/prbnDBBkttEgNz7xXekhw5rlMAa9fKqE8JOuPNY+1N3wrnBpxV7
TORKQO9Sh3GsiBNG6Pwzad3ABAc1me/fREog9P7kwjWiP3qX4SmwmQlmOwe/
beItgc5rVNgzMo6zWGjV8W1M+NnX9K7nVzHI73NuY5B5JWqa824R37LoVMK/
YbgYsgbYxlZscUIlZlnjD8K/0uytx789LoZJQyd+8Y1OeIfnesF+wr8mz02m
HGiEB9dZ16rwO2HY1HhXyV4mxO1Z9o7TsRi62i6lnlzmhKMW53ZJKJJ5/XbH
LSf1GcIQtf3d4oh2ZYWtIcpM+JJwo2AspgjELpdLPb3miA6fo742qRI/Pz5z
ep1xETi7Jh09nOiIpZK9BZI6TFANo7VL1ReC2MuV7UsNHFGAddexcxZMcFNJ
fCJ7Ox/8Fiqz/asccHMvTUHkLPGNJr9Dbt3PAvPNaeHaPPbobad35zLxsdJl
XArNnFnAkn6Bl/W5HZYGVjSOeZC8fTh55JdxJqQos3lXX7ZDlW5Wys6XCdUS
JvsOD6TD0UsXpUU57XCmQ0PA/jzxn9L9M20tqYAytY4uozb41VY50DaOCWeD
n60a2R4LDizNHz7pWmHI5qYh30tMONSTv/OrSww41Gy5GDJjiWqLLeyB8YRz
W5rWXS++ACwFLeqvMi3x2QeLhYOXSR6Udesj+SKg7GHvl2XvLfDWp5sxP4m+
eV5gxD8xFIJutc6xRlhg3W4JzZxEJiw8mr/b+z0IpEtk3ViELXBS22tNXhLh
yh1OlT3V3sCpWFqpfNQcx5XvLfwmOsenmZqG1R7gs6W6rOyfGSoGbB5UJPyr
edBQ79A7V9CxemVpkm+GP/siKk4TPTWyFmSSjsLz4kUbcwUzTApxOR5GdOsM
rp2mF83gdfRYwOPXptjPPb0mhOhHM2TT9rUfAA/JJfRyL1PEgPFGJ6KfSOkR
OAxHcFor7IfgSlPsKnzkIUn085LP8h3FSR8vl6TvrTBB37AIpY8kzhD+mMjZ
V8fQZJMN16yqCeqLdCiGEf2ZxDjb+1WnsVvkWmbYsDEeV2mNYyO6/+PjfqYl
HrhX6uvL9wHGKDsqGv+E5E3miueDqSf+mPeGr8bthhHmXd/erED2JWNvYjXv
RCRWz4b0Fu8xQC/NuMwtZB+Fiu7MThZeQMatmHmZE/rIYcst/fUiybOAe0ei
aQxWZ28dys/Xwx0/OlGd8Je2ywVdvhtx+D1trieBVxfbRJ6F/g0l/L6vZiR3
VTLu1/cW7mfVwkwnxyxTUj+NIhqTCZ3JKPhznjZirIm3fxqG5AYzQSJG82Zd
RAo+hRtBRcUaGMjdPPDbnwl1yodSrMdT0VNb0faOhjo2Trdzf3cn/Mh+Zd/q
y+kY4v3NWPKaCt7izw54eo4JOsE7+rdLZaBW8ltkLlPB55MO9umE15Ruv+Wu
eZqBO55oLKqePoJXaRPEoZP1ctQt+z2XiQscTgf/7VfGzZtaJvbbE345e2j3
pFQOvnux/P74u0NoPNj+iWbDBJuMWNfGqhw8XPd9or1NAeeshiM5rZiQcJfG
G7Q3F6fDLZar3ZdHvXtcFjdNmNBnZbfSQygPVWoWrz24cwCNNhacidFkgqVx
iMCL7nz8kKL3iXteBnf3MyPK1AgPern2O+8twBsX9OIVhWTwBDfnvYdHmHBA
zXNTUEIBPuBZu0fFYB9eX7FZrf8Q6YczfTrLDxSiwMUYTu1He/EydaG8mXBc
FFvH+nPiRTiZFyyrxyuBU+0vraokSB/WSNA00SrCjsaH70qGxJEx/vdJjhiZ
9/6amCHnIqyr5ZNzbxTDyTsuDcdIn4ydj0t7n1aEbcWBilvv7MTGfzxiKqSv
3hyBP6blRfh+KtvSsn0HPpo8tGsr6cNJngM5px4UoffCyL8bDFHkOTB+o5f0
84F6Lbr/myJUXSd/TMVnO9byy2yqJP1fmnbD2+NjEWaLhG3AHhFcnhA58f/v
hdW3qOhxfynCalsJ67eqIhgg/+mi7QomfJIePqT9rQgb3Tsny9qF8XEwnpbh
IueutbZ0988iXL5n+WdlB2FUeNWyhIfwoFm4yZHq2SIUPS7WcJ9TGGUahhvG
CA9KltpuGCPPS659vke4RQhP9AlzP/7/d8/Fwi89minCw+F77WLThNBhx8Wa
w3MU3Fstr6I9TeI5d/feL18hDChg2zf/gwI3yyTFyLEiZF3eszrwjBCO+au6
PGZQEDT0pt1toAi9Xp4o4vMRwpriKuHLhBN38LkG8nUXYSil8ac9SQh/yycc
cSL3/qk2VTnPR0W45qTUppyHQsjO0556iPiEtU9aJJJuFeHZ1D8eF1mE8f7Y
j7GtrwlXPjnc55FXhDstd72ONxfGvE7OFo5OCj5XvPFPdS9Cx9tDCQ0HRfDw
DpcRrhbiZ1aMNA2aF6Ht9Z8/ettEUKYoQHTTQwqmLvVY/5MvQjh9kv725HZM
aIrf5Uz4UWS+vrvjVyGCiPtbl4+iuFHBuLQ0l4Ju92HH9mcFuOKSTumWWjH8
ccUhtoJwYofAxKffnkSfCDic/l0cZftnLjQlUXC7+7tC1uoCrP28NMVWXQJv
5aRtP3CBAmGeMCV31Xw8nSaXuGXXHvR41HLmiBvhQWFGWKt3Lj4rnFVwntmH
Rr5fQs9rUvCPLbDj88ZM3B9kGlsXcQh/rFsfKqlKQfwGeAzhGfjXr+xhVsNh
FP022bKgRIF7jsu3wI/pGO068Ho5ixL+fLn+yJIDFPTJJV2ez7+CP0NG7vw0
JNx3c5Vb8S4KqiruXNr/IwU5dvsUqGxVRTcZ7adFfOT5B9sLOM7Gopb6/rt7
j2tjsk8lI5b4Z741Tcvef41BAbEendhDOpisMKGVuZICY0vpyaVnotGAbydX
9FpdvG4247STm4JfK0S6NjhFYpVZx9afz/RwXVOvR8VyCkrK70RGvQnHAnej
1btv6mOGdZ2tCfHtiZo/1ujlhGLqweMn45MNMGO6cfcGDgpoCQXXOF0D8AOn
oFqZpBHK3dh28AA7BQ+YTiVndX3x5/Df5HvFRvgoaJVbCOGCkjTzJdskvbAy
+vjH3HXGmHJorHeClYIXt1a8lt7khtq8ih3qCcZo/qXydAjRo5+6PMl7dxJ7
OXuraEtNcHnsHqkDRO8Pz0lwyz6Kn6Yzx+iBJugt/X3tBqKv9HLu2lVlgQ5l
zxIOfjPBnGDlVcJE57Q4pPLVWQ21JZRu658yxY7vO3j+/xz5RK1RDr+mMIi0
zCr0jpji1rcRVDnROYbZB/mD9SHxF+d8rQ25l5cu5O4g8au+KnKXFLeFbYU6
5VO9ZnglTLYxnayXt66Ul3vmFCxZ8Nn8o80cS2kJAzEkP4scfgtu3B6g6Cc9
dFXZAg1/qqwr4KSgYbfNN46N3tBYFRTo/MACvz1bnFPkomCj/y/mb7FAkNB7
d/b6DUu07liyq43sF7v13TUe4iEQqU/bt3anFcr+POPlvYKCBbm5v4aiYbBZ
Sv2eYpEV2hbGSh5eTcHs+oUUjQuRsK1j1dH4FGtkL1lVG7KR9IF5nv1Rh2Nh
y30G1yY3W8xv0XScFSR+Xma//M/YOMjpvneqZ8AWR0s2fby8lQIB0W0hES8v
wcZ70emvtezwhuFqFn5RCpx3PJI7YnEZMgs5NsVvs0cL3urUAGkKBpJqbGfW
poC/wKgub6sDRv5ZGyJtSEGmXtna0TPpoB/f08T6xQl/sbmWmhMuG32Zr145
mQ7WJw+rTq0/inaO25STLUl97slSM3PJAMeUE9ocGkfx2FG5MA0nCj76seWz
GGXC34qzZ1ryj6KBW5p/mRcFfh/7N2z7lwVv8kv6aSrHcPk90YXSHAoA8VfU
7VwQuvv7dpKdM/7DFe2fCwmPNO0aSvmZC/j5ycKHIGe0EzUvlikl/TDI0fqW
XB7wGXvaL8tyxl9c2/MZt/7//oTz5T8r88DwzFGX1ufOuEdqlbptDQUy8cKr
Vn7MA/kzymeMJ5zx5wUjrpcPSJ30jRziX5MPavpKGkUsLshg/fS5r5WCr1/H
PvW55kNbYsNLH0kXlOn29z/6lAKm2TOViMv5cP2+8uqZIy44obR6/Y8XFBzV
ixBju5kPxXqzakLmLsjTK3duF+nD8m/WBAd/zIf3XPxuMf4u6LbzY/KTEcJf
Onu0XWfzYc3TZJWaGBf8I8ZBOzNOwYh15ClBjgJ48sri6cUrLqgt/fbtqmkK
nn6LjkxfXQAcwi8n/ha5oMevZydqZyiY2aTU83J9ASgYql3jrnTB2mf3wx1+
U/A8w3PPi00FkDr+wKC2xgVzTcat2RcpuPyliyt5YwHElXxRn2t0QV/TvNRX
S5jgLcV0X81fALZ6G6VftbggF2/JpatshNeunOAw5y6A4ZmZUZVOF3y9T14q
4P/ffeO5yGe3kA+xvx2Oqzx3wZGkxHWa5D69sVzRb9eXfNh8y5T58oULhv58
PbiG3L+ctXVVDX35QFuf84N6Scafctj4//tR2U3snzY9yId3bkkCuURXSs9x
LeVjAsvS2KfauflA5xve39PtgkH9skdP8TMhXMy+TScgH5IipByvdLng+6zt
BWLrmbByoKRHxDgf8n52f/jQ7oKbRO7eH/v/d2GsixLfieZDrp7V4drHLujw
JMMgn/iNVzt6D/rO5sH3IQVJgQcuuCNx8Zch8ScsP4Zu/W3KA/ER83KWKhfs
2zH4iy5KfF30hYJPhnnwaaF7n2eOC8LBzc7yu5hQFXwupWR1Hhy07wlSvuyC
+kf7M9sJ990b/yF4pTsX+DP/vqkIdUHLfjGqm/grnSerNhxUzgV3+xwJQ3sX
FM0MDYuRZ0L8SO3sjZ/ZUDV27cNKLhKnmMAP0GXC/XJK1rMhA7ayOc26iTjj
ytNyG7X0mcAzPRXLppkBHbtVK16xOKO8dtlzNUMmHKEsF0uep0NrM5/QkqFj
+D5QoHWjKRNM3/ItaL26AlECG3PqUo5hu9imMGniS4/NRq7QakqFGw+jJvdP
H8WQZgXNV8eZMDlx4Pgj6wRolvu63cXTCdcqqr1ZdpLs1yDnpR7heHgWKH6Z
ruiEofyhxyVdmSCilMSVPhEHWzmH/Jcvd8KDTvfGtE4zodV3LHDi9EUofNux
7KGCI1LVccOtxG8fuSduwWsUCeIsH4zFguxx/ktX3XnCmzLfDJ9/Zo2AN/jd
8iqHPfYumaaJEt8efKPm6viZMBA5ZZzNSLFD1uFtJ9QJhxpf9uNiiAdB/57M
F5tLbXH6rtW2RqJ/pmV30WL8YcaGp3eXpC2eUHhQtd2TCY8Fk60tP/gATeqO
iGq1DWpLvTvcTPTan+tMc7a4w/zPq5PTaI3rHS9L/SV6Wu7VK9Wdp8A5Inq8
RM0a93aZjm/zYsLg1jNZP31d4L+Kzjueyi+O4xkhyZaRbDKjsko5ZM+bvfe6
RlY2ESGr7JVKysiIBiK6X20ZCdmVEQ3UvTKKUr/z+/f98nru85zzPZ/xwnM/
jPOp3+m2hbX79b4qmDMzbq8RTjqjy2bmlySNbcE0uOHhCcyV39Suyly2QD1V
PCUCAzbAEEA7dwTzkz+njcUXNRG96LpylZkNRJzf+MqLeYFmZMiVVj54f6XM
eWDYGiwHrafJ+H7+fmZNDMnUhyapaO47VtZg/DV1sAXz5jX/XKNx7Ft3jsfa
j1mBZWLIkD/m3uwNoz13XOGNoePdWVsr+JCZssGG+Uuue7F0FC/Yf6FkyXbS
EmTv2tHJ43U78Pn5/stywbCPc9HM870FaJpQXJvwfmXLX3t43ycGGGbKRXZ9
MgNq298c4wEU9IPdoHFb8Cxs3tb5dsXZDH551+uTcW+KeeqSnD+YALFP0jXe
jp2CJHFNtkVf3DveVIwGZCcBsqfdw19KAMYPd0jceN7MEsdOTtVdgN9NQQZ5
542AcoqaocODgsDtZNL+T2nglBzyVSrZEDybjYdN3SnovsieMiv+DEgKMi5J
vGAAKx+7RQ1c8L4f4bj6MSoLTHTf7hUv1oPs+oDyXNyz/ClsPncicmDWI26B
bloLhhfXxx9bU9CHaPJK6XYO3OvwfhmwdRLKNVpVFywpSOGcwJIh7pUFWtHS
i7wnwV2ydZ7ODPfNbqetlvg8iFsuzX7lpQHlr2wru/QpyEihibqTUAAVkx7V
Z/2OQWg0tzhRmYJquw75GZ8oBlmtKroibXnw2C93YOsIPi/jP+lF04vh9VnT
5ZdbsmB8vH405RAF3SzoaJp9UwwNch84Lr2ShlMOI38zcf+69apseNOiBBg5
mMKt7klA7okBW3qsM2e3TQt1s0vAN03iLmO/GMzwV4jEH6CgOjL9ktuLEjB3
nhTqpBKFXz8VelxEKCihlHBi9UApHDwx2ZQfJgjHzfdl9ApSEK/s/Vx381Lw
uTmf7X+WH5KSmOIVsU6+DfM4kB9VCtdM9DxiOnkhITTp2T9u/Ly0j9YPt5WC
/h+vN1zTnMAZEvbTHetzv1N8aMVgKcjcEiiPfMoOPo+FBJ9jPW9I12oZ+FQK
l+Ianj6cZoXx6oI6CdzX8l+Uy8LPUsjLO8nhRWSGh53aDGnYL/gl3/wOob0M
Iy7mQ2ZJuyFnZqvqK/YXTp6iX4tMl+H+ycvsj/bsAqf0ZxQjBqxvkxu35Ngu
A131zQtcu+lhz6VZy//f99vkOquhjnkVj6nVg5idkOJ4/8T/77UoInWUC++5
DDcOte5fdqSFjhsNXLG4x3WkT5i8x5/7lIGJfekuDRwYTcrqxj1OOehddOSv
UqjU1qCbiKaBfLumoOsbZCStvWNj43Mp7BsPvNDdTAPpN4Jvxq+QkdiohZLH
cCn8svq+1u5OC1FOVGsey7h/NU/rP3tYCilDi2Vl53dCH0VSxgz7/pp85zuR
a6VgFnpmxICbHviyI31035PRk18HZf7alsJ+uvOeYkW7Qbb3zw/COBk1aqpI
ZyuUgvcKcfTOOWZoD7wZ4jlMRvP2J2R1aUvBerRa3us7K4i7mindfUVGqlcK
xy2vl4CH1S2B4VVOoP35iuo4zjmDintZiwNK4Nea2PCqEDd4WJT1DXXhXhCi
l3ZLqQQitbIVMuN54azV/iKJNjL6FeNY7EUqBpTzLXX+lQBc385dD68ho5b1
Q4/y6ougU45DqaFXHP7dPTAmkk5GcVN6d4R2FEDXaLn1Lb8joNlAe60uBfcm
zraDauX54NqwTzCtXhHeZ12k103C/Uj4fONvtXwYULnfcWNDCe6ZPtBujyUj
ppTguduBeeDueM91pk4VLNW6dMuCcK88vc1y9WEOtOdnOFakqkPmC5u1XAfc
Z8uoiOMb6WB67LurGUUH5B5sFcbY4dzIL3/PbTMNVNazZC+N6cJTZ42QWJxj
y2Zqm2w3L0DNakuwzRM9GJgQTX+Bc++Vs6M7hH+kgNpd337eGwag+zUtItUE
9wIGqoP7ehPBw8m1muWCCbj7eyoqGeN8eDx5i/XROTjgIyfjdcEU2JpW0bYh
GU3u8ls64pAAex1mb5hlEGBT73TWhD4Z3R4eklzlioWt1PH3rb2nALkuOjzT
IaMvQed5N8ND4TBX3u2MBXOw/6X3Tx3z62wtnIeMgiFCrWxCK9ACaHR1lYa1
yeiBkEgcCQUAaaho48lPC6iakf517n9euaF0+YsPKDHu6dxItISsFS6kj/nm
daGtC7kekOtY/LyfyQrSvu38K4n5u16hxSMRzvD2RnmBcokVdJ6bEhfFnGZP
6eWnvVaQ6SaSJyhmDcENTpXKmH9XuWn2xMAQ7P3CWCPvWIPLXnVPj/+vs1nZ
1cJ4GF592m0ic8IG3qbvN6nFXDZ122vGWwGtfDQOle7BPliXo8WAn2voxRVq
D2cDlB5mV+puYwuH1L3eseqSEZGZ34XS5YTkTjLTKYfawTWZGdWHmEfe/X0y
cb8HgpdKqrf/2YFYtCx3HO77Yb3GHLOWPqh075w+10V7mLgz26BvQEa/SSNV
cXeC0IfW5eigGgcw/2rk6Yf35bFI4O91rlC0zu5hSaXhCH8ZLlPfMiIj9afX
ZTkIYYj7b6ul9LgjEOTGp8JNcY+7e9Bd5l4UYuQ+gxbonCHS5lSihRXuKYp1
ae6l55BkeZpEp5wrDATsYzLGc3VxZiLHsCIROc/ExAtEukKiBPOSE57D0yXC
ReVVSUi9KM6eAq4gJor29jmRUX/PrMqvG8mo9mj8iRaCG2wbGoS/8CEjQyd3
cAxIQ24JRU7p3u4g6naUOd4P33/3TFaFRTqa3rFPTa4O8xueyUan8b6LMt46
opyB1jx9ij8vuwNNtAiLxBkygiUvp0fLmaj+gNhcWJAHRNMZivcmkNGLxxX3
qfizkadA0KVeH0/Q76kJtr1CRgcePn4WqpSH/K/N3qjm94bfLtJ9stfJqEPz
y1xLXB7iUxQ3/m7sDQoBvR/3VJKR2unp7d6uPHSK4c7lO7HeoPzZpnG1now4
MjcLjFE+6l7MVEp+6w23GDaF1DrJiNFHj7uTswBJGSd+ywr1AbOxySl3rD/U
KlVBdzQL0HHVe1/7C32gc+XvRu4zMhq+EHD4uH8B+j7IHW/ywAcaJB6m0vST
0cSavg9dcwE6GpW3g7zmA9k8xwu1B8nIvlU3/PhwATrYuDJNy0aEhzV7VDNG
sC7JVx/Y/F6ASqaFTmjKEKGF7aC30Acyet+cufB7XyF6cM7XnseeCJPFaylB
c7hH92RzqssVotyQh7q1gUS48EjRo+sTGR0ODVD4d6wQ/d7LxmSSSAR9Txc9
9iW8nnXpHeo6hahA7HD8v1wiEJV7Yj3JZLT4pbvvj1EhYjm6HzqvE2HfvtcG
ratklPfoO8sxAs7tv401Em8TwWRlYYsO97i3wqvPf5oWIrlPS08N2oj/f4/x
uNUfMloZU3mugq8jfmDbieMxEYbOvNlrhv2rWrcy+o9WIdLlig6fekmEM/3b
FeHUFJRrVD2vf7QQnS53fF7eRwQrlawjJbjfJZ3hviokU4iEjtQ7OQ8QgZAX
FdJGR0EhgnQDF3gL0WyWeyXXGyLUHZSnHsU+28PlrnaethBpfnWxfvaaCDV9
ZVkU7Mu0bFkqPMsFyJJVOc23lwjfq4+20WMf//PhZYPxmwLk2bpaTfuCCANJ
onL7cO+bqc3hPnC3AD1unogqJBHhwRPRAmk2CgrlGUhtvFSADhTuEOBvIULh
LBuvLAcF/W7bSbjhW4B8jZhDhmuJcC5cjk0K541e9p+UYDwnr03b7xVcIcJm
eD8fJy8FsSYZ2nR9zkfP+eMGjsYRgXkin64a9zsVphZ7edZ8tP6tDE6KEaHh
c0peDM5FAg/qlreH8pC4xEBK7C4iuO7jk9EXoyD1eJ2rP/PykGMnXdqbZR+4
f/+sZz/OV+yflB5dZcxDPIyRzz7c9oGy1rqwqIMUJNmRdVByMge5pIra7Obz
gc2o5ok9ChT09Kh/JlzIQWJ2E5M3KN4w2baoeBnnvWt3LZwph3OQlR/Lsfjn
3lAcyTdTpEhBv04mM3fQZqNge6NUPj9vGNedXuQ9hvPMA8coX+YstLrzVPOd
ci9I0hSl5teioKvdazm9wSloocFWNP2pB7yfS+1k0KYg0/wFS9fsZPSJtun6
riQPyJt3y/2KuQUnv3FA/XnE+dhrjy3ygAjO7/su6OJ5MGvzynqXiHbkrkVn
tLpD3O9aGXkDnDOZqZ2mTePQU1GSTHKJG/QUtgk/xLzTsv9MbEAMIql+/XvH
FPfHhdpsVUMK8rk7f+HqhSikr8J9l4HWDXiLTtxmwX12sJh74vmDMKRWt1Tv
F+AKG/urCETMDRoEgsP7Q5Gn3FfzS4KuYHMumtCMedkl66Lt2WDksxQtLFjp
AhcU1LwljCmI/PTh4jCbH0JipUwkP2ew3WWYZIx59KLfyjcVb+SdqayV3ecE
l11p6bwx73aO2HZwdkc7VwplUuScYK//rc1QzGvFzRYydjuhXeW/bz686Ai5
8/d9zmDe1iw5XOFkheT8vO8ZfnOAI1Qzjj6YZw6dUMshGqG+VkLCKWMHmJvi
/2KK+fvhPxz8Wqqo29fz1Oc6eyB6ZPFJYz53q+nnrXYeeH5K9bz0Lns42h1H
v4mfK4iJ94YCOgl6KesXlHzsYOdp92cdmL/cufmSUnsK0mx3vRN9bgv2joPE
UMy1FuVyvaRswcXkDS2bqC1s7GQZ7MDr7P9L6o5Togco8txcsZq2Bud/zoFP
cB/Je85Y5PEvGK5V+Wln/v93uRDtfRjzCZWhK9lVobDbKEiNr9sCjrOotJfo
UdBdaiYLK70wyAlh3uGlaAH/9E3X9fE8xAkuVvbERUJW9iXBFBZzcMuo6lLD
83aq9uqwS+1ZeHftASW/kgCcE589L6lR0JP0vo6YwGT8nM4jqqp64D4k6xqB
59a9tZ9dgT0FFB03H6cc0wXjzE/2NkexXgnsOiN3LwX2lkhQj2nogMnBFb6d
KrhHFBsda/mUCmc7z+Zw22uBfldGMtdhCjrYKh3NLpQOo/x0b5+nINio9/pz
FJ/HIS/FyzIvs4DZUsv0CscRKLEUUOwVp6AonT1zzJIXgXfxOX3fg0OQEdk6
Y4vPtUjXqLZb8kVg0pMam/VRgOYIwfN+wrj/lpIWlOUvga1nGP/vcRmIbdBx
Or2PgmQGHo3Sm2SDWzQfWyKPKNQJTNR9wTojvXL1T1daNjw8oztLkRSG+JNa
2u48FPRx2e7cU8gGF67toPQaAZhyjNUxw3rVbLr2eoAlB+ju9KwdXeWGl1Hm
Ii+xvq3L5aDjYjkQ33eZUXER5/P+HUrHcW/KEdxbZaycA5/0qIvHudlBnPPM
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
        "]]},
      Annotation[#, "Charting`Private`Tag$118860#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$118881#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[1, 0, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[331777, 331775], 0, Rational[-1152, 331775]}, {
       1.0000060281817498`, 0, -0.0034722326878155376`}]]}}, 
   {RGBColor[0, 1, 0], PointSize[0.03], 
    Point3DBox[
     NCache[{Coth[2 Pi], 0, -Csch[2 Pi]}, {
      1.0000069747090357`, 0, -0.003734898488285673}]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{310.2810422978659, 311.25},
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.9592522513592862, 
   1.0424785379003125`}, {-0.04132865656982615, 
   0.04166433837392098}, {-0.0034722326878134616`, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{3.382553689982475, -0.09097320525962321, 0.007376334505005305},
  ViewVertical->{0.5893915177970027, -0.004316414364992693, 
   0.8078360027356883}]], "Output",
 CellChangeTimes->{
  3.964760379431897*^9, {3.964760983972582*^9, 3.9647610089173994`*^9}, 
   3.9647622129070826`*^9, 3.9647623260576787`*^9, 3.964771763320077*^9, 
   3.964774161515589*^9, 3.9648095101893864`*^9, 3.9648369751302304`*^9, 
   3.964839878616477*^9, 3.9648400858743906`*^9, 3.9648401411960373`*^9, 
   3.9648410841027164`*^9, 3.964853048615686*^9, 3.9648565612471733`*^9, 
   3.9649177472494574`*^9, 3.9650300892509604`*^9, 3.965031517181449*^9, 
   3.965090802300665*^9, 3.9650917155845995`*^9, 3.9650970179093137`*^9, 
   3.9651146625572834`*^9, 3.965117718328043*^9, 3.965124227586867*^9, 
   3.9651801220707226`*^9, 3.965217291022648*^9, 3.965220635182438*^9, 
   3.9652220762421904`*^9, 3.9652472147634907`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"b0fa1428-480c-4bd9-90d2-a71006242913"]
}, Open  ]],

Cell[TextData[{
 "Evolution toward the thermal state for (n,l) = (12,11) to the target \
inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "295d095f-d53e-483f-bb12-27553c799bf0"],
 ". The exact thermal state corresponding to this value is marked by a green \
dot, while the approximate thermal state is indicated by a red dot; both lie \
on the thermal curve."
}], "Text",
 CellChangeTimes->{{3.9650106773096075`*^9, 
  3.9650107036860456`*^9}},ExpressionUUID->"f21da54f-efbe-4bc4-802f-\
2b41a531375d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(a)  {n, l} = {24, 22}", "Subsection",
 CellChangeTimes->{{3.964774326979589*^9, 
  3.964774338709133*^9}},ExpressionUUID->"ac78153d-6948-4c13-8d86-\
7dbc3b0bc6e0"],

Cell[TextData[{
 "Now let us visualize the evolution toward the thermal state for (n, l) = \
(24, 22) to the target inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "8aad2d39-8ad6-44c0-a8e1-078fe08a4be3"],
 ". "
}], "Text",
 CellChangeTimes->{{3.965010845289305*^9, 3.965010873236209*^9}, {
  3.9650876463751297`*^9, 
  3.965087665405547*^9}},ExpressionUUID->"6e238a74-74e9-48ca-92d2-\
cfe91b3483d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"24", ",", "22"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647736681474376`*^9, 3.964773679673477*^9}, {
  3.9647743724951906`*^9, 3.9647743774594297`*^9}},
 CellLabel->
  "In[124]:=",ExpressionUUID->"f7587977-8c12-4d85-bd7d-d3012ce742f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.964773681633164*^9, 3.964774393306126*^9, 
  3.9648095196620655`*^9, 3.9648369970289373`*^9, 3.9648565614783573`*^9, 
  3.9649177473054953`*^9, 3.965030089370446*^9, 3.9650315172563705`*^9, 
  3.965090802395277*^9, 3.9650917157009783`*^9, 3.965097017972661*^9, 
  3.965114662634121*^9, 3.9651177184070454`*^9, 3.965124227769022*^9, 
  3.9651801221500487`*^9, 3.965217291091792*^9, 3.965220635275811*^9, 
  3.9652220763085876`*^9, 3.9652472148464584`*^9},
 CellLabel->
  "Out[124]=",ExpressionUUID->"38785ee1-f0ef-43b9-a5ea-5efa38f3dc78"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{
  3.9650122763028045`*^9},ExpressionUUID->"c7c109e7-afa0-4ded-b8aa-\
f0403b05dabf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.964837000432496*^9, 3.964837001542297*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"d64ce968-37ed-4543-a31b-f5120bb7f95e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", 
    FractionBox["47", "2"], "]"}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox["5"]}], "7"], ",", 
   FractionBox["188", "2205"], ",", 
   FractionBox[
    RowBox[{"21", " ", 
     SqrtBox["5"]}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647744875663557`*^9, 3.9648095232203765`*^9, 
  3.964837002103649*^9, 3.9648565615411944`*^9, 3.964917747359398*^9, 
  3.965030089473979*^9, 3.965031517325508*^9, 3.9650908024720087`*^9, 
  3.965091715800865*^9, 3.9650970180363054`*^9, 3.9651146627121687`*^9, 
  3.96511771847126*^9, 3.9651242279743056`*^9, 3.9651801222237325`*^9, 
  3.9652172911595106`*^9, 3.9652206353577266`*^9, 3.965222076383733*^9, 
  3.965247214920555*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"5e4dea11-fc0d-44fa-9aa5-0173b9b883de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"acbec128-3126-4202-8bc6-c3edb5a0498f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SqrtBox["5"]}], "7"], ",", 
   FractionBox["188", "2205"], ",", 
   FractionBox[
    RowBox[{"21", " ", 
     SqrtBox["5"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9647744930599833`*^9, 3.9648095280691276`*^9, 
  3.964837005244949*^9, 3.9648565616109204`*^9, 3.9649177474112387`*^9, 
  3.9650300895824633`*^9, 3.9650315173927903`*^9, 3.9650908025652647`*^9, 
  3.9650917159020333`*^9, 3.965097018084046*^9, 3.9651146627825785`*^9, 
  3.9651177185508776`*^9, 3.96512422816158*^9, 3.965180122301304*^9, 
  3.965217291222913*^9, 3.9652206354389668`*^9, 3.965222076458151*^9, 
  3.9652472150042224`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"334de25e-25d2-4cbb-a664-5b91bc0c841c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"7b0ec483-ac1d-47d8-a51c-0a2b066e4ca0"],

Cell[BoxData[
 FractionBox["49", "45"]], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.964774495465165*^9, 3.9648095312003126`*^9, 3.964837011128434*^9, 
   3.9648565616792684`*^9, 3.9649177474661646`*^9, 3.965030089687513*^9, 
   3.965031517470626*^9, 3.965090802651473*^9, 3.9650917159973774`*^9, 
   3.9650970181478577`*^9, 3.9651146628585043`*^9, 3.965117718613985*^9, 
   3.965124228325418*^9, 3.965180122372386*^9, 3.9652172912868795`*^9, 
   3.9652206355152254`*^9, 3.96522207652244*^9, 3.9652472150790997`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"8ceefcff-0692-4090-9aef-08d271c2fd13"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "corresponding", " ", "values", " ", "of", " ", "bplus"}], ",", 
  "bminus", ",", "bplusdot", ",", 
  RowBox[{"and", " ", "bminusdot", " ", 
   RowBox[{"are", ":"}]}]}]], "Text",
 CellChangeTimes->{{3.9650124466728144`*^9, 3.9650124489666457`*^9}, {
  3.9650128042111044`*^9, 3.9650128060125785`*^9}, {3.965089920351639*^9, 
  3.9650899339148026`*^9}, {3.9650899869705706`*^9, 
  3.96509003960703*^9}},ExpressionUUID->"f1e80ffc-7ee9-4538-9814-\
9c3ddb667178"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[128]:=",ExpressionUUID->"24414f9e-0e26-47e7-ac82-224ea1fdc821"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"47", "-", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]], 
    RowBox[{"3", " ", 
     SqrtBox["5"]}]], ",", 
   RowBox[{
    FractionBox["1", "7"], " ", 
    SqrtBox[
     RowBox[{"47", "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"6", " ", 
        SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
    RowBox[{"7", " ", 
     SqrtBox[
      RowBox[{"47", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"14", " ", "t"}], 
        RowBox[{"3", " ", 
         SqrtBox["5"]}]], "]"}]}], 
     RowBox[{"3", " ", 
      SqrtBox["5"], " ", 
      SqrtBox[
       RowBox[{"47", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"14", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["5"]}]], "]"}]}]}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.9647745010929394`*^9, 3.9648095481863804`*^9, 3.964837014238209*^9, 
   3.964856562412488*^9, 3.9649177481807823`*^9, 3.965030090412465*^9, 
   3.9650315182414865`*^9, 3.9650908033607025`*^9, 3.965091716833042*^9, 
   3.9650970188030863`*^9, 3.965114663601353*^9, 3.9651177193132515`*^9, 
   3.965124229171026*^9, 3.9651801231004424`*^9, 3.96521729201059*^9, 
   3.965220636227788*^9, 3.9652220772538624`*^9, 3.9652472158623753`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"ef0f9a88-6e71-4b64-ba60-bc9a80d21705"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "048dd718-64ac-44ca-b37b-811efbe16872"],
 " are: "
}], "Text",
 CellChangeTimes->{{3.965089939562103*^9, 
  3.9650899822524395`*^9}},ExpressionUUID->"8472f84d-2c47-4667-8932-\
39782e2db76c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.9647599956375804`*^9},
 CellLabel->
  "In[129]:=",ExpressionUUID->"03359857-0a1b-4f17-8172-d55b8cb6a9e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["49", 
      RowBox[{"94", "+", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}]}]]}], "+", 
    FractionBox["45", 
     RowBox[{"94", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"49", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}], 
       RowBox[{"47", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"14", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["5"]}]], "]"}]}]}]]}], "+", 
     FractionBox[
      RowBox[{"45", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "47"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], 
    RowBox[{"21", " ", 
     SqrtBox["5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.9647745198005304`*^9, 3.9648095582221627`*^9, 3.964837025075225*^9, 
  3.9648565698817673`*^9, 3.964917755625494*^9, 3.965030097698905*^9, 
  3.965031525554302*^9, 3.9650908106216583`*^9, 3.965091727344434*^9, 
  3.965097025517763*^9, 3.965114671073538*^9, 3.9651177266059566`*^9, 
  3.965124237161786*^9, 3.965180130504915*^9, 3.965217299302007*^9, 
  3.965220643510056*^9, 3.9652220847944765`*^9, 3.9652472233321967`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"427bfe65-0bc0-4ff5-be03-03b88878c82e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "FullSimplify"}]}]], "Input",
 CellLabel->
  "In[130]:=",ExpressionUUID->"cbf97bb3-00ad-4e15-9caa-880cc575bf9d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["49", 
     RowBox[{"94", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}]}]], "+", 
    FractionBox["45", 
     RowBox[{"94", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"49", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}], 
      RowBox[{"47", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}]}]], "+", 
     FractionBox[
      RowBox[{"45", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "47"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], 
    RowBox[{"21", " ", 
     SqrtBox["5"]}]], ",", 
   RowBox[{
    FractionBox["49", 
     RowBox[{"94", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}]}]], "+", 
    FractionBox["45", 
     RowBox[{"94", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"49", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}], 
      RowBox[{"47", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}]}]], "+", 
     FractionBox[
      RowBox[{"45", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "47"}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], 
    RowBox[{"21", " ", 
     SqrtBox["5"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9650879384009905`*^9, 3.965090817162414*^9, 
  3.9650917343603325`*^9, 3.965097031990816*^9, 3.9651146784827366`*^9, 
  3.965117733190098*^9, 3.9651242443973246`*^9, 3.965180137275013*^9, 
  3.9652173059928427`*^9, 3.9652206501379313`*^9, 3.965222091670091*^9, 
  3.9652472299824457`*^9},
 CellLabel->
  "Out[130]=",ExpressionUUID->"615c02ad-457a-43af-9fb1-219added4653"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "5dca2aa8-e5fa-44c3-bf89-e9e17d45aadc"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{
  3.9650124602860723`*^9, {3.9650898697274857`*^9, 
   3.9650898705658684`*^9}},ExpressionUUID->"b39707dd-016e-4efa-902c-\
c657f498edbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.9647749806841116`*^9, 3.9647749816284947`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"c0c433c0-e4e1-4e6f-8fe9-72777415363c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"8820", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "94"}], "+", 
        RowBox[{"45", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"14", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["5"]}]], "]"}]}], "+", 
        RowBox[{"49", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"6", " ", 
            SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], "2"]}], "-", 
    RowBox[{"4", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"49", " ", 
         RowBox[{"(", 
          RowBox[{"47", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"14", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["5"]}]], "]"}]}], "+", 
        RowBox[{"45", " ", 
         RowBox[{"(", 
          RowBox[{"47", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"6", " ", 
            SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], "2"]}]}], ")"}],
   "/", 
  RowBox[{"(", 
   RowBox[{"8820", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"47", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"47", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.964760066273921*^9, 3.964760946691349*^9, 3.96476218370989*^9, 
   3.9647623119776993`*^9, 3.9647717008151608`*^9, {3.964775039611407*^9, 
   3.9647750426431055`*^9}, 3.964809562206317*^9, 3.964837027871356*^9, 
   3.9648565732587805`*^9, 3.964917758598815*^9, 3.9650301007511654`*^9, 
   3.96503152854112*^9, 3.9650908200942945`*^9, 3.965091737905577*^9, 
   3.965097034850813*^9, 3.9651146815283237`*^9, 3.9651177361750307`*^9, 
   3.9651242478760624`*^9, 3.9651801403214016`*^9, 3.9652173089836693`*^9, 
   3.965220653061441*^9, 3.9652220949765973`*^9, 3.9652472329925823`*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"31c529aa-65ff-433b-9c0c-e93075bf2a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.964760091159008*^9, {3.964775564447522*^9, 3.96477556548307*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"d41955a7-33d1-4e64-a2ab-c619ec18f20d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", " ", 
       SqrtBox[
        RowBox[{"47", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"14", " ", "t"}], 
            RowBox[{"3", " ", 
             SqrtBox["5"]}]], "]"}]}]}]]}], "-", 
      RowBox[{"7", " ", 
       SqrtBox["5"], " ", 
       SqrtBox[
        RowBox[{"47", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"15", " ", 
       SqrtBox[
        RowBox[{"47", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"14", " ", "t"}], 
            RowBox[{"3", " ", 
             SqrtBox["5"]}]], "]"}]}]}]]}], "+", 
      RowBox[{"7", " ", 
       SqrtBox["5"], " ", 
       SqrtBox[
        RowBox[{"47", "-", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"94", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"8", " ", "t"}], 
         RowBox[{"21", " ", 
          SqrtBox["5"]}]], "]"}]}], "-", 
      RowBox[{"2303", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"14", " ", "t"}], 
         RowBox[{"3", " ", 
          SqrtBox["5"]}]], "]"}]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"188", " ", "t"}], 
         RowBox[{"21", " ", 
          SqrtBox["5"]}]], "]"}]}], "-", 
      RowBox[{"2115", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"6", " ", 
          SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"105", " ", 
    SqrtBox["5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"47", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"47", "-", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.9647600955481253`*^9, 3.9647609572279406`*^9, 3.964762189712345*^9, 
   3.964762315911848*^9, 3.964771702991533*^9, {3.9647757534732647`*^9, 
   3.9647757539034257`*^9}, 3.964809568787628*^9, 3.964837028175019*^9, 
   3.9648565736303596`*^9, 3.964917758915509*^9, 3.9650301010730023`*^9, 
   3.9650315288601265`*^9, 3.965090820387745*^9, 3.9650917382869253`*^9, 
   3.965097035106112*^9, 3.9651146818236103`*^9, 3.9651177364601374`*^9, 
   3.965124248220259*^9, 3.965180140600791*^9, 3.9652173092607036`*^9, 
   3.965220653419597*^9, 3.9652220953432283`*^9, 3.965247233298981*^9},
 CellLabel->
  "Out[132]=",ExpressionUUID->"cc7c7087-605d-478c-9081-6626a05f89bd"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "773ee058-fcae-40a4-91de-c783c0b1b754"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.965012478958375*^9},ExpressionUUID->"28eee95d-3b4e-4aad-9036-\
0c13595d4d61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.9647760672370667`*^9, 3.9647760683524466`*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"81db4ca2-2a79-4c50-bd4f-6cbb9650a33b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"4868648", "+", 
     RowBox[{"2209", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"8", " ", "t"}], 
        RowBox[{"21", " ", 
         SqrtBox["5"]}]], "]"}]}], "-", 
     RowBox[{"4418", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"14", " ", "t"}], 
        RowBox[{"3", " ", 
         SqrtBox["5"]}]], "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"188", " ", "t"}], 
        RowBox[{"21", " ", 
         SqrtBox["5"]}]], "]"}]}], "-", 
     RowBox[{"4418", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"6", " ", 
         SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], 
    RowBox[{"2205", " ", 
     RowBox[{"(", 
      RowBox[{"2209", "+", 
       RowBox[{"45", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}], "-", 
       RowBox[{"49", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}]}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"210", " ", 
      SqrtBox["5"]}]], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"490", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["5"]}]], "]"}]}], 
       RowBox[{"47", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"14", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["5"]}]], "]"}]}]}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"15", " ", 
            SqrtBox[
             RowBox[{"47", "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"14", " ", "t"}], 
                 RowBox[{"3", " ", 
                  SqrtBox["5"]}]], "]"}]}]}]]}], "-", 
           RowBox[{"7", " ", 
            SqrtBox["5"], " ", 
            SqrtBox[
             RowBox[{"47", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"6", " ", 
                  SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"15", " ", 
            SqrtBox[
             RowBox[{"47", "+", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"14", " ", "t"}], 
                 RowBox[{"3", " ", 
                  SqrtBox["5"]}]], "]"}]}]}]]}], "+", 
           RowBox[{"7", " ", 
            SqrtBox["5"], " ", 
            SqrtBox[
             RowBox[{"47", "-", 
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                FractionBox[
                 RowBox[{"6", " ", 
                  SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"94", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"8", " ", "t"}], 
              RowBox[{"21", " ", 
               SqrtBox["5"]}]], "]"}]}], "-", 
           RowBox[{"2303", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"188", " ", "t"}], 
              RowBox[{"21", " ", 
               SqrtBox["5"]}]], "]"}]}], "-", 
           RowBox[{"2115", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"47", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"2209", "+", 
           RowBox[{"45", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}], "-", 
           RowBox[{"49", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "47"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}], ")"}]}], ")"}]}], 
      "+", 
      FractionBox[
       RowBox[{"450", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"6", " ", 
           SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
       RowBox[{
        RowBox[{"-", "47"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"6", " ", 
            SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["49", 
          RowBox[{"94", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}]}]], "+", 
         FractionBox["45", 
          RowBox[{
           RowBox[{"-", "94"}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ")"}], "2"], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"49", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"14", " ", "t"}], 
              RowBox[{"3", " ", 
               SqrtBox["5"]}]], "]"}]}], 
           RowBox[{"47", "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"14", " ", "t"}], 
               RowBox[{"3", " ", 
                SqrtBox["5"]}]], "]"}]}]}]], "-", 
          FractionBox[
           RowBox[{"45", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"6", " ", 
               SqrtBox["5"], " ", "t"}], "7"], "]"}]}], 
           RowBox[{
            RowBox[{"-", "47"}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"6", " ", 
                SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ")"}], "2"], 
       "2205"]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["49", 
         RowBox[{"94", "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"14", " ", "t"}], 
             RowBox[{"3", " ", 
              SqrtBox["5"]}]], "]"}]}]}]], "+", 
        FractionBox["45", 
         RowBox[{"94", "-", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"6", " ", 
              SqrtBox["5"], " ", "t"}], "7"], "]"}]}]}]]}], ")"}]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.964760239583626*^9, 3.964760970108362*^9, 3.9647622121313066`*^9, 
   3.964762325248097*^9, 3.964771715621935*^9, {3.9647767316825905`*^9, 
   3.9647767375394883`*^9}, 3.9648095860686855`*^9, 3.9648370441011906`*^9, 
   3.964856585730056*^9, 3.964917770462329*^9, 3.9650301128990803`*^9, 
   3.965031540696991*^9, 3.9650908252932425`*^9, 3.965091744211277*^9, 
   3.9650970396464767`*^9, 3.9651146868848124`*^9, 3.9651177413887615`*^9, 
   3.96512425360423*^9, 3.965180145714764*^9, 3.965217314194084*^9, 
   3.965220658557313*^9, 3.9652221008733635`*^9, 3.965247238435482*^9},
 CellLabel->
  "Out[133]=",ExpressionUUID->"22b9af31-da42-4eb0-95a8-50364d501bb0"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t=0 be Xi, Yi, and Zi. \
\>", "Text",
 CellChangeTimes->{
  3.9650112000650897`*^9},ExpressionUUID->"5b09eb0a-f6d9-4341-b341-\
8b786bfb73cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647602985304937`*^9, 3.964760299665609*^9}},
 CellLabel->
  "In[134]:=",ExpressionUUID->"f9349e04-7bb6-420b-b55f-514ae18bdc5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964760281673687*^9, 3.9647609743312473`*^9, 
  3.9647622122891417`*^9, 3.964762325414926*^9, 3.964771729584259*^9, 
  3.9647767533451977`*^9, 3.964809591073567*^9, 3.9648370442436132`*^9, 
  3.9648565859076962`*^9, 3.96491777060573*^9, 3.965030113023982*^9, 
  3.9650315407878795`*^9, 3.9650908253982944`*^9, 3.9650917443554573`*^9, 
  3.9650970397266464`*^9, 3.9651146869801655`*^9, 3.9651177414684315`*^9, 
  3.9651242537156916`*^9, 3.965180145804924*^9, 3.9652173142816176`*^9, 
  3.965220658668809*^9, 3.965222100999036*^9, 3.965247238534898*^9},
 CellLabel->
  "Out[134]=",ExpressionUUID->"46c9b2b0-f6c4-4a50-a61c-4d5c08fabec2"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when t=\[Tau] be Xf, Yf, and Zf.\
\>", "Text",
 CellChangeTimes->{3.965011207468646*^9, 
  3.965013058266371*^9},ExpressionUUID->"d60a58b1-da2a-444e-970a-\
a5cd0ab50ba8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"41eaaefd-9554-4337-8b87-1dac03adeca1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["4879697", "4879665"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["17672", "4879665"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.964776759455576*^9, 3.964809594242241*^9, 
   3.964837044387265*^9, 3.9648565860048475`*^9, 3.96491777066829*^9, 
   3.965030113130085*^9, 3.965031540857547*^9, 3.9650908254810953`*^9, 
   3.9650917444532595`*^9, 3.9650970397746086`*^9, 3.9651146870547657`*^9, 
   3.9651177415472527`*^9, 3.965124253811219*^9, 3.965180145883515*^9, 
   3.9652173143394885`*^9, 3.965220658756365*^9, 3.965222101110894*^9, 
   3.965247238617244*^9},
 CellLabel->
  "Out[135]=",ExpressionUUID->"1c723c76-0fbc-4459-b594-bc07a6a4b9fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Red", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Coth", "[", 
            RowBox[{"2", "\[Pi]"}], "]"}], ",", "0", ",", 
           RowBox[{"-", 
            RowBox[{"Csch", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.9648095992108107`*^9, 3.964809612703676*^9}, {3.9648535110341253`*^9, 
  3.964853561266754*^9}, {3.9650964283325663`*^9, 3.965096429263977*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"75c9159f-225f-42fc-a263-1f79a5d34a15"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
Ue9Ief63OlT4u2XP+H0SNK/2nNYOoKBgXs3fyvp1qKvlQQ7TExJMhtiH7Qr7
/88NbEilFbVImV7trvQ4CcQ/6U+nRlPQmUzKW6l7NSijKfsm13MSPPtHN9OX
QEH7N8QnTqlVo1ettXV3J0iwtE+Wthb3/fafzD0BtZXoSR/VN85nJAjl3ssl
l0VBf3Wq7GpWy9HkqrD9vkck4Ln5ZU9AHgXVfbY991WmDHlviHJV3iXBm2m/
3UbFFFSm3EYd5lSC7AxYZ3pvkcD1Sl3CWDkF3TzXaukWV4QGNw3euV4jQaXz
+gFyNY6P1XeLn9kFyPYyE2tRFQluZH+431JPQb2Hb50Pyc9DNuyPGE2zSPDY
3WboTxP2tzn/Osv9eO6zPMpdjs/l5fuV3EXsVwbvDlb8I2cg40SyeYQrCYLR
gFEQ9rfKC1c65UOSUHwiWWffURKwCF6v/ol9b+4l+fvkRAz6sagftsxGgpAL
pdcOdlCQm7VnyERHGNI5vIe+5ZsJVGk43JnB/LK+xumzu3xQrZClZ3+7CXSf
2LZRvkFBDYrpn+5pmaKZ5cMRMoEm0O8spS+HeTzHefr3h0zgmudUjLSYCaTQ
+Fc/xOuwGz/wpZf0hoXDr6Pm543BOHBX8x/spd90k1XnUBg454puhRUZw7+w
wR+P2/7//8szBg8cYmCH7jkmvlPG8OmviMNx/F5CphaNP+WToI0bfjD/MoLS
yIG1U1fxPnl6Kk5KpwJXxBZ9ar0R8H4x1tfFnhke9N22bv0SBKyFR35aM4TG
PtrX1KUUJC1saedgUgy+1a86S1MNoFhJWeP/P/fbvb9BL5m2FMiznadrjhjA
p+R9xOds/F7XLTk9rpfBkpPD0MlH+hD8zimp4gLO/yQV1b6xSpj2aPWM26sP
ezwMbKf8KejhCRePiEN1EDBIf/FI5Wkwdl+0JeE8L6KMyq721IFCBNlUQ+s0
vP5PVqXUiYLcv6SfNdCqhxPtTbEmX09BybLRdrUpBc0Y05yrUmsArZe65SE6
pyBChnFxS56CLnIJPVK51ggHjreeS+fWhWxpSx8rSTyPKJaQdn5thMthIxxM
MzqQQ3r5tFIY32u3r8jhUBOk2SU+ulapA3mea64veSiIy/cSy0m9JpAfsHhd
5aYDO2aTwujZ8fx4oul1i2cTnKio/MV1VAe4LqroKuC69OF1NX8Z9jcJ60lJ
u21tUBMwZHHBdYw18efQwfgmCOqO78qe1IaUOm0a4T8EItb77qpEN8Fwb/fs
5zZt8JFz9S9eIdCZE8qH9vk2geaLk5SibG0wIFZCBWYJRFe2u+mGcRMwmmrz
DYZqA/Po4X1PnxDoG6/wTe0jTTAqaeGR7agNJBlh2ro7BKovWRf+9qsRlP5b
ThA20Ya5iKhfjW0E8v5jsDrV1wj1wbzT9TracIGsS5qvIVAO/zLv0bBG0Ne4
FCaqqQ2HT8Ub2+URaKQ7KVxKqBGOfTD/+lBbG0qtnH4fTCbQpqeIJePDBqh7
88ul1kgbZkVl+ETDCXQtwz+c2q0BPoB0JDhoA/dHNesULwJROwx22q3VQ+Hf
gFOKZ7XBhXXnDnXcv/KmXr6xjKmHA6aMbnvx+34dZv7w4iSBmqR4Y1xC6sCr
rOvHjmnMj9+ov61AoHBBWxLTu1p4PsbXL7BLB4Jz3WbYxQjE907ZsUK7Fh7s
u3O2/YQO2FztXZdiI9Cfs1eiLVar4O6ej0d/9usARWrL7tcuAt36meY+nFMJ
biwnuItpdEHJOVBGc5uMUh6p5A8eqoBn3Hseh5vrwukfj/XDvpFRUOgRH1/e
UhD6kHenkvoUfPh6gqUR+97MVX1zn5I86Au2TY68chqEHBxfR2Lf++clOXAn
PAeE1yNuOkrqgbcxsUl9n4wm2J80y1/LhI3VBww+XXrwnJqKrD9IRmfa01ls
J9PgDTjvsNPUh48Zjx8a3yYjtmeti1aUZMiVfTpCmdIHpalxbRbsP1IiUmdt
qRJgSSBe43OgAVhd4xgowH44qZXtyX8wCsIYEwTX9xiCeoa5/KsuMjKf3sFs
KRgM6+jc9rN2QzC+I6A720lGupmbn4P0nCHsh5iPgLURMDXKqDZgbnYs0T3Z
igqeuHnQFFMZg4tc2KYEXoefQ9G1ysMJBWT3NE7eMAYfazOmCOxpzyy/FerU
ByG9hFHvBHdcJ0+OtSTcJKOsh37OogOR6LKToz/PXhI4vblRpo/9ltb95Z4D
lfGI8T9EbeRDgte2PTbP75DRkpbabrPOZNTBI2tTPUKC8V8tJLYHZFRa8NNP
ziYTXRR49+pJsinM+0lfe/AE+7Mv36Ucthzk2+/Ko4rnXANjD26ZF2RUtLsh
ytkxD929zRj3VdMM9gjIZTMtkNGNaYvWY58L0ZXIUi9JKnOQWJb1L6InUIXr
8dBu1wr04i2TVMg5C9Dg4sk5x0qgInl1tXdvKpEmu16w2aQFjHDLWn/jJdCl
E3fmT2hXI2qv35RUKUugJdjY/Y7he0e35VsWVIsUqhzFlqYtIexeZ+u2P4Es
tWqyNgvq0Qfml10RbNaQyq800nCeQP49tqOnqRqQWWrWmSVba/BVLOmtyiCQ
yJQL6wmPBuR0tMbteqU1XPofRecdj9UXx3GFzKIkEjLjR7Ip4dik7L33Jsre
O9l775UiDaII35SUShRCUyEk7qOsJP1O/75f93XvOd/zHZ/P4/Fczshyv2sE
am07HP+Xqg6Vf7secOaQOWSgnXpZ7L+KrVcIfc065FkBp5vOmUOq8lSX2ACB
ZjpoE/TC6pDGC48zYVHmMLt0wcpwkkBaf++nD1bVoRGDROXYJnN49MPpaQ7W
aWP5RHxdZx1SMcg+nD5iDuYeb9jnfxHI70WWVtuTOlT76LWRz7o5RLtN8/Hh
/lZnxeI+jzn3QrHcKpMFxIsSGca4H8Z0VZqcuF+H9J7ZHNkQtgC35SH+GNw/
x3J+1URX16EoUYtYXUUL0Av5dbeaA8/Brf1SH/A6qQ7r+b7RtoC1o4n0d/hx
f47n8Pm3r5ZvLEXnDSygRGL4620REhLTmrVc3FOHQDUvfwtzTl9V2gJprAc6
S0efdtSi1PUKDsdzFtAfpqRopUBC53eqCujta9HHlTypbCULaHsubritRkJ8
FbUm079q0JAAtU3ICQt4tXGPO+AcCR21zx6IS6pBjs/E++gPWcD1ofWibiMS
ahYZu/kfTQ3KrbjnqbVhDreF5u/9+3yPdcuj72h0NVK743BG6LU5OLx8VXrb
gYS+D5jdbluoQjG1ahfar5iDEtfA9dvnSci2UM/fTr4SlSQG/NqQNwfNA4tt
zwL+zcG7Vr2vytHWDYpXQztm8NqdRrkY6zdeAZNL+UZlKCYl8ndBpxkQxcJR
Gol4XxvbV8K5ilE092KaP5cZSO6DY+FYd2VvlpA9/pONus7yJjM1moD2U5tH
A8UklNWAfTRHFvozoG83r2wC9VlGRHsZCR1WLDZvd0tDfzi0GmzHjCGL/OAV
pUqstyPsko3iLqOmlZTVDmdjqAt6KuxSjbnobwrmjATEkNL2U5lkBPO0Ugy8
tST0riLfriY9BgX9nZZQCTECHjUN4dA6ErpwTPa0JVUo1mMLMzR/DOHumDke
oyS0xprS+H7WDx1Lul65GGUI13Yd+vMN80NXt/dnhzigtl7KQwo7BuBcSklQ
Yt3C8aL5/gY5D3panzxoGm4AthGQcxdf31amqOzjbAtP3ZuHc9f1YWTz4Vky
zENFF/TH/H1hkeyBjYGfPtyo+/l8Cq8z/XhQ3eSLYKDw9T724ZUedIZ2HbDE
OnPg9tyT2BfRINNXKlnUqwuCIu+8fKpIaBe5woMnk/HwdP5oSeEtHfAa4tp0
LyUhqqN9I/HZqfC1R5U3LPMsdCeQxEz+/d05bFbpmn4mROZSXfgWow09wgNx
03kk9Ku0g6E1IhtCG8dp7wWcgf3UBfYrWFff550LEP6bB5J/y3OjXDVhkMX+
T9BlEto7SEG9r6kAFqsn5LZdNMBlVuNlYzwJ/XbKlNbTLIL+UhajT57qsO4c
lSQcSkKiEhGD9DqlMMa3kXg/SRWKos7xxviT0MWo8Gtdd8ogpL1Yl71aBTR3
XAxzsI9Y7O1hlaSpgGt9fs//fX7+7qVJPBnO2xed/Ca9clVAtp5XRcWtBMkV
iwJx6rjuNqTL9PhrYNlpamm5TQ7yeqVllRSxv9g3Z5MQXwOLIpXueumn4Bez
Y+SUDPY13Nrv/47VwAb/777lyJNgq8T70g37rEGt/U217LVwM+mvbdVlWdCn
C995i33ZmccMsRZmtUDlokFz7IYMhEtJflbkIiE7a44jTJdqYWC294EoIQ1R
FGGqRawkVHN5hPXZ1Vogaz5xweqcNCjw1S8sMmI/EtM0Eg218Lc4bECqXwr+
NLOnKdKQkDbDHnGFZ7XQdM/8qLSNFGjv8RvN20VCMp1XfA8M1AJoHHd4tF8K
7sgIt339SaDnL4RWDnXVQregB7PUjCTYx1xX654hUN7t3WQetbVgNBjtOjAq
Cebfn4q3jxGoo8kvRyS6Fq5YuMi1TktCiDTif9uP/X4NHV2WXi0ItfUbM+D7
S0pS5ojfw/PFGW30HqwFvbK1uAVrKfi5GHa7D/f55AcKL7Ze1kDa7+rh00+k
QNlnJbq0lEC0NIM1wVE1MIeC+5b1pGGCIr6j+9/3/30tfoTx1kD2267ayXVp
eE8tNy4RQ6Do+Stnz/VUQ2QZT9fD+zJwofGrmoQrgTwEYhUy31SBb37PhEnF
STBqTj2vIEuggvnmV7tlykEihDvZu1MBzEJ8xW4dJ9CXHJvEUKIUkp7ccm1W
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
RWTWe6zzJ05RM3jlonOkke0pWk+s99XbTmN95W9ied4qJRd9ulgXeFvGE2w6
LR58WySQ3IV9Z8vLc5HJWcnlV5ae8GfTerroJ9a9tCwVE3W5aHj2fTlfsCcc
FqpwVf73/YrV0UnWqlzU+HneLCvVE07T673wxT706aGFL36ZuUhCQ6mJrMgT
JMaS3WUpSUgzfIT298Vc9E3X7a9LmSdQRWydWqMmoc/8npST2rko52vCjTZ8
faqu8tYV3D8ZRSgnJVlyUYG1Kvu3NE9INvvPW5uRhN5+Uxk4PZGDSnrNBnaH
ekKj/nGbD0wkxDR6Tl4wIwedeRLtRGHjCRtzo2IDbCTUEfhQ8OZkNuK9tC5P
0HvC90atFQ5OEtI6cfn9W99sZCj/hWl7wgOOXLAgLLBOEzwmIrx3G59jcAvd
qXIPmLe7dSRGgIR+fv6t+IHIRESle2DfPg/4/e3WR2khrDfE1moyZzKQ5gG7
Fe6H7nDovu/G0HESUtkidsU8S0c/0JdFGV932KpbYLsuTkKuPM/3/PBORdsD
RIfYXTcw5VSdnTlFQqSx0rkk7kuINqC98hXWe5TPRUrLT+N54WyuaNWWgK4R
+foKKS7wq1UhWQLrvaj1e3ceKsWjs+9fb+yjd4ETv8NzlxEJ5bzxsZ1QjkFi
L7ksN3c7g2/5laaDyiR05uvp6CsXI5FxJP1SVYgT3Dvgu3oQ68NZCfLhVbMw
VPgw8uXwN0fYFPnCUKtKQhGyiVfW6APQSvGng7v7HUC7X6FYTI2Ealo3kPmU
H2JWT5K8IuoAP/lTHhRibsN+TPKLoxfisX/QfKjQHhaUU0snMI8NPUEnTOGC
btreeGbwyw7UaFnMfmJOtqOBbPVtkJLj9JJrry3w1QzJzGMumyUvxlSvjyrL
EinZk2yg0PlF3l3Mp/5OlxnKiCGPBvoF7rPWoMEj8dkB8y7N8nTxj0rAP7Oa
L7TPCnJZ7lfP4fXPEtyCjM+MwcWapWd+2AJ0T4heOIO5Rru3qlaUPdzgGDZh
yDOHOtHBnSQcB725P+lkMa5wqdqKx8DcDMaX5vwrsD456U0uQc96AQ4rHfu4
9NUY7L3e12njc0kWEhSq2QiHrcbCjeui+kC6ZdbahM/R4euDUpqIKBCMNR+p
5NCFxyyrcSuyJGTIz6vZGBADBkdHakbmzwK3SV6CGNbzN0LHxei648B0v0Dj
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
AW/pnsM/79tgkx/HbJsdDTNT2dffb6iBwqybX7+02+ChbWdf3XIlHMvcyiZ2
qhrCeJedulhkg/aHl60r9abhGRO3itDnKijTEvLcF2qDO8be9iUE09B1v6T7
iEAlBFu+tXmywwbFdMWlMsNpYD+RKb+/rhx8eys6pr9bo8Ku0x8MY0l7a/7B
wQ1lQGubrFi8Zk38/ZTIk9OEW85KXGIeKIb0pPRFC01r7GypzK4gvPep6fGX
2cAc2LVQe8RlvRX+FIzLPVdBQ9rldOZCyIKi29NaFncscUv/QRWHahoCmMxs
biWnwR/vT47vAixx/4eNL1triY/3W7bW9SbDgGGfltJmS+QH6d/nCQcOiO3w
Df+aACWXrp9I7rPA3i2fD+udJe35K5oyV8dCgzaPHouXBbZrdMufIjyTrJa+
eMgoDH7r2F6aZLXAf7c3FHueo2GDylrd+AB/UDd/KulcZ45R70F4kujX2tbF
mgm6QcDph/nN+80x8UhVOTPhJfNRDpWXmiLwMWXrt7VvzNCclZOzl7QvVvjz
4eGkI4b9p63YH2SG8v0NVwSJ7skE54IlfLGGR1KWa5UZSh/M2SlIxnP1BefR
Ff+Fou5R7siDmqboq2Ihig1knWVWNLQ1RCPbZTaV28dMkNfoX+cyMt+v0SGL
xuIJWFj203m6wBgt4nzfhFaR9qVylzgunsZvoT2/z/xniA1R4ueaymngsM6+
dcgmEx1Enxft5zJE/dc+4cmlZN18Rrz057JReMfWVS+USR7ceW+5Th4NnVut
TuQczccZvx2Dq3P0cIYuu7wxjszX6PSNkSulePBzt+UWLx3suxewejSCho0v
6raOCJeh6o2cL5fqtFHYb9k3Z5IvNgj5H1oVV4415/3Lkz9r4dcbd8Jaj9Bw
tMfshNCyKrTX1/m1lKiJ2Wp1MrNmJF8I/1a/yVODuUPNwcLc+1HjoYvsZnIv
TkoF9FZE1eAfwfS4xdWAVS3jKdvJPVLqTziyOFaDk6fHW0xWq+PXB/mPR3bR
MC1x4NvZ6Fp8zXXF8JzWPrwmacyVL01DyFft8b4btSjoVvf4b8Re5I+W0lQT
JfdL9cRKerYWd5/ITUu/p4rMKmrZI4I05D91mhITrMOODeMX3oqrYka1+ebj
JPfx+e/Q81KrQ9lPD3QCqlQw8r+Mv4skJ174t9yoybwOV8SYCl2WUsH+1dy6
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
d1PkjqqTgpr5pMqp1Wt+8B9c5MEr
        "]]},
      Annotation[#, "Charting`Private`Tag$120359#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$120380#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[1, 0, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[4879697, 4879665], 0, Rational[-17672, 4879665]}, {
       1.000006557827228, 0, -0.003621560086604306}]]}}, 
   {RGBColor[0, 1, 0], PointSize[0.03], 
    Point3DBox[
     NCache[{Coth[2 Pi], 0, -Csch[2 Pi]}, {
      1.0000069747090357`, 0, -0.003734898488285673}]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{314.7502467503524, 314.7911930966296},
  ImageSizeRaw->Automatic,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.9583440297848369, 
   1.0434733133993987`}, {-0.042352919695598006`, 
   0.04252573051499591}, {-0.0036215600865960123`, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{3.3835285649051476`, 
   0.03592449799561448, -0.021068481546477443`},
  ViewVertical->{0.5959623517303941, 0.012817310752901878`, 
   0.802910077072795}]], "Output",
 CellChangeTimes->{
  3.964760379431897*^9, {3.964760983972582*^9, 3.9647610089173994`*^9}, 
   3.9647622129070826`*^9, 3.9647623260576787`*^9, 3.964771763320077*^9, 
   3.964776763725171*^9, {3.9648096086879034`*^9, 3.9648096136339574`*^9}, 
   3.9648370460757236`*^9, 3.9648565864236383`*^9, 3.964917771029952*^9, 
   3.965030113544145*^9, 3.96503154122184*^9, 3.9650908258835897`*^9, 
   3.9650917449132338`*^9, 3.9650970400934076`*^9, 3.965114687424655*^9, 
   3.9651177423082466`*^9, 3.965124254207447*^9, 3.965180146250798*^9, 
   3.9652173146899786`*^9, 3.9652206591922703`*^9, 3.9652221015344906`*^9, 
   3.965247238998274*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"bc3edda2-488c-4d49-829c-f01113a83445"]
}, Open  ]],

Cell[TextData[{
 "Evolution toward the thermal state for (n,l) = (24,22) to the target \
inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "880b245a-960c-4091-be03-9c3866da18b2"],
 ". The exact thermal state corresponding to this value is marked by a green \
dot, while the approximate thermal state is indicated by a red dot; both lie \
on the thermal curve."
}], "Text",
 CellChangeTimes->{{3.9650125009029074`*^9, 
  3.9650125096043816`*^9}},ExpressionUUID->"74e04250-3380-49b8-8e96-\
d21f9a9362ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(c) {n, l} = {36, 33}", "Subsection",
 CellChangeTimes->{{3.9647770978077707`*^9, 
  3.964777135489561*^9}},ExpressionUUID->"7d44fcb3-41e0-4cf5-9b45-\
1f4d33b6bf5b"],

Cell[TextData[{
 "Now let us visualize the evolution toward the thermal state for (n, l) = \
(36, 33) to the target inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "fb0b0a8d-27f3-4472-9bdf-95942343514a"],
 ". "
}], "Text",
 CellChangeTimes->{
  3.9650109656437263`*^9, {3.965011005269883*^9, 3.9650110085394573`*^9}, {
   3.9650876907541823`*^9, 
   3.9650877066352797`*^9}},ExpressionUUID->"9870b9ed-764d-4198-b476-\
cdb6e08718cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", " ", "l"}], "}"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"36", ",", " ", "33"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647773015173297`*^9, 3.9647773015193453`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"3a9318dc-1918-4071-9492-85e2c0a66b4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{3.964777302738804*^9, 3.964786408974861*^9, 
  3.9648096474073353`*^9, 3.964837058939825*^9, 3.964856586637166*^9, 
  3.9649177712351656`*^9, 3.965030113656434*^9, 3.9650315413026648`*^9, 
  3.965090825970784*^9, 3.965091745013524*^9, 3.9650970401412797`*^9, 
  3.965114687507983*^9, 3.9651177423875923`*^9, 3.9651242543033*^9, 
  3.9651801463281937`*^9, 3.9652173147621803`*^9, 3.965220659290179*^9, 
  3.96522210161726*^9, 3.9652472390735426`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"cae1c319-9a5e-4e93-9d4e-159a6bed97d9"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{
  3.9650125884732885`*^9},ExpressionUUID->"29bf46aa-c8e1-4113-9f40-\
2df352fda5a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellLabel->
  "In[138]:=",ExpressionUUID->"ae2599c6-f36c-4298-a0de-b4d376d97bf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", 
    FractionBox["70", "3"], "]"}], ",", 
   SqrtBox[
    FractionBox["67", "73"]], ",", 
   FractionBox["420", "4891"], ",", 
   FractionBox[
    SqrtBox["4891"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.964777325592687*^9, 3.964786413993909*^9, 
  3.964809650773456*^9, 3.964837062163181*^9, 3.9648565867062497`*^9, 
  3.9649177713058043`*^9, 3.9650301137631397`*^9, 3.965031541371828*^9, 
  3.9650908260556316`*^9, 3.965091745135409*^9, 3.9650970401901627`*^9, 
  3.9651146875793014`*^9, 3.9651177424191036`*^9, 3.9651242543982115`*^9, 
  3.9651801463987856`*^9, 3.965217314822722*^9, 3.9652206593721094`*^9, 
  3.9652221016994014`*^9, 3.9652472391566725`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"664fee82-780b-459f-bfb5-ce477787e1dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"86cb9b21-123c-476d-bdcb-116ec27ea161"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox["67", "73"]], ",", 
   FractionBox["420", "4891"], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["4891"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.964777336270184*^9, 3.96478641824312*^9, 
  3.9648096569134693`*^9, 3.9648370652578106`*^9, 3.964856586777196*^9, 
  3.9649177713653383`*^9, 3.96503011387982*^9, 3.9650315414395504`*^9, 
  3.9650908261412845`*^9, 3.965091745231599*^9, 3.9650970402377214`*^9, 
  3.9651146876510987`*^9, 3.965117742546795*^9, 3.9651242544932036`*^9, 
  3.9651801464734683`*^9, 3.965217314885823*^9, 3.9652206594533434`*^9, 
  3.9652221017768*^9, 3.9652472392401543`*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"51c0c879-1adc-44bb-a630-e55e954b1cd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"c6ce7a49-3ecf-48ef-8e75-73dcd6a86c9a"],

Cell[BoxData[
 FractionBox["73", "67"]], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.964777354914748*^9, 3.9647864249129915`*^9, 3.964809659970873*^9, 
   3.9648370685150776`*^9, 3.9648565868773174`*^9, 3.9649177714295216`*^9, 
   3.9650301139999084`*^9, 3.96503154150556*^9, 3.9650908262248335`*^9, 
   3.965091745361313*^9, 3.965097040285107*^9, 3.9651146877142572`*^9, 
   3.965117742627329*^9, 3.9651242545721984`*^9, 3.965180146545187*^9, 
   3.965217314948494*^9, 3.9652206595431805`*^9, 3.9652221018758154`*^9, 
   3.9652472393187766`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"98bab43e-3798-4a1a-92cc-d660ebb5aec7"]
}, Open  ]],

Cell[TextData[{
 "The corresponding values of bplus,bminus,bplusdot,bminusdot, and the real \
and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "602b8a35-baf7-44ce-b45e-8b08b39be4bc"],
 " : "
}], "Text",
 CellChangeTimes->{
  3.965012601263026*^9, {3.9650127890934277`*^9, 
   3.965012790692356*^9}},ExpressionUUID->"2b49fdea-a5ce-434f-9c1d-\
b1cbd76ee5d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[141]:=",ExpressionUUID->"4315fa2d-8018-4d4d-8c0f-d82e59dd1d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"70", "-", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], 
    SqrtBox["67"]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{"70", "+", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]], 
    SqrtBox["73"]], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
    RowBox[{
     SqrtBox["73"], " ", 
     SqrtBox[
      RowBox[{"70", "-", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
     RowBox[{
      SqrtBox["67"], " ", 
      SqrtBox[
       RowBox[{"70", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.9647773688616667`*^9, 3.9647864331020684`*^9, 3.9648096636754336`*^9, 
   3.9648370840588627`*^9, 3.9648565878862863`*^9, 3.9649177724241514`*^9, 
   3.965030115244375*^9, 3.9650315424763165`*^9, 3.965090827199688*^9, 
   3.9650917465223365`*^9, 3.9650970411776*^9, 3.9651146887260847`*^9, 
   3.9651177436411247`*^9, 3.9651242555876684`*^9, 3.9651801475473404`*^9, 
   3.9652173159553523`*^9, 3.9652206605590086`*^9, 3.9652221030413103`*^9, 
   3.965247240301059*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"6fc5b9fe-2276-4d92-8763-675d68a8b376"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{3.9647599956375804`*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"681e2a83-fc06-4ee4-95ff-68b9186247dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["67", 
     RowBox[{"140", "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "-", 
    FractionBox["73", 
     RowBox[{"140", "+", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"67", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "70"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "-", 
       FractionBox[
        RowBox[{"73", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
        RowBox[{"70", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["4891"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.9647773933008194`*^9, 3.9647864641106625`*^9, 3.964809684557268*^9, 
  3.9648371062365537`*^9, 3.9648566059157944`*^9, 3.9649177904857655`*^9, 
  3.9650301331522913`*^9, 3.9650315604161553`*^9, 3.9650908453483133`*^9, 
  3.965091764086896*^9, 3.965097057693732*^9, 3.965114706898082*^9, 
  3.965117761647498*^9, 3.965124274088587*^9, 3.96518016561592*^9, 
  3.965217334244154*^9, 3.965220678776203*^9, 3.965222121906351*^9, 
  3.9652472582805047`*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"07f7de68-6505-468f-846e-a63284b843c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellLabel->
  "In[143]:=",ExpressionUUID->"95a9e24c-659d-4003-be06-98837ea43557"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["67", 
     RowBox[{"140", "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["73", 
     RowBox[{"140", "+", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"67", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "70"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
       FractionBox[
        RowBox[{"73", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
        RowBox[{"70", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["4891"]}]], ",", 
   RowBox[{
    FractionBox["67", 
     RowBox[{"140", "-", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["73", 
     RowBox[{"140", "+", 
      RowBox[{"6", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"67", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "70"}], "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
       FractionBox[
        RowBox[{"73", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
        RowBox[{"70", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    RowBox[{"2", " ", 
     SqrtBox["4891"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9650879042614937`*^9, 3.9650908458539886`*^9, 
  3.965091764564477*^9, 3.9650970581550555`*^9, 3.9651147074032717`*^9, 
  3.965117762155639*^9, 3.9651242746126366`*^9, 3.965180166123993*^9, 
  3.965217334715808*^9, 3.9652206792460527`*^9, 3.9652221224574184`*^9, 
  3.9652472587843757`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"320a4964-8ae3-4841-86da-2308e9c976a3"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "bbb9a69b-dd70-4bdb-99db-d4454b42512e"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{
  3.9650126160636396`*^9, {3.965089849070116*^9, 
   3.965089850025235*^9}},ExpressionUUID->"2c2d4cef-5bf5-44da-84ff-\
4b9ced56bc29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.964786471225672*^9, 3.9647864722946987`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"cf9e754c-3641-480a-aa85-caeecff0d664"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"44019", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "140"}], "+", 
        RowBox[{"73", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["67", "73"]], " ", "t"}], "]"}]}], "+", 
        RowBox[{"67", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
    "-", 
    RowBox[{"9", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"67", " ", 
         RowBox[{"(", 
          RowBox[{"70", "+", 
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["67", "73"]], " ", "t"}], "]"}]}], "+", 
        RowBox[{"73", " ", 
         RowBox[{"(", 
          RowBox[{"70", "-", 
           RowBox[{"3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["67", "73"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"19564", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"70", "-", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["67", "73"]], " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"70", "+", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.964760066273921*^9, 3.964760946691349*^9, 
  3.96476218370989*^9, 3.9647623119776993`*^9, 3.9647717008151608`*^9, 
  3.964782846270963*^9, 3.9647861699286103`*^9, 3.964786475150141*^9, 
  3.964809686730686*^9, 3.964837108385011*^9, 3.964856608257442*^9, 
  3.9649177928003817`*^9, 3.9650301354624805`*^9, 3.965031562687688*^9, 
  3.9650908480307784`*^9, 3.9650917666138864`*^9, 3.965097060117797*^9, 
  3.9651147096089363`*^9, 3.9651177643891897`*^9, 3.965124276871008*^9, 
  3.9651801683572545`*^9, 3.965217336913418*^9, 3.965220681466603*^9, 
  3.965222125060977*^9, 3.965247261032935*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"48c653de-cd0c-42db-819c-6d5a1e4e3e62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.964760091159008*^9, {3.964786480610053*^9, 3.9647864813333287`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"36873a14-7378-4066-90dc-00592e766270"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"3", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"73", " ", 
       SqrtBox["67"], " ", 
       SqrtBox[
        RowBox[{"70", "-", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]]}], "-", 
      RowBox[{"67", " ", 
       SqrtBox["73"], " ", 
       SqrtBox[
        RowBox[{"70", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"73", " ", 
       SqrtBox["67"], " ", 
       SqrtBox[
        RowBox[{"70", "-", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]]}], "+", 
      RowBox[{"67", " ", 
       SqrtBox["73"], " ", 
       SqrtBox[
        RowBox[{"70", "+", 
         RowBox[{"3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4690", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["67", "73"]], " ", "t"}], "]"}]}], "+", 
      RowBox[{"5110", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["73", "67"]], " ", "t"}], "]"}]}], "-", 
      RowBox[{"210", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"12", " ", "t"}], 
         SqrtBox["4891"]], "]"}]}], "-", 
      RowBox[{"9", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"280", " ", "t"}], 
         SqrtBox["4891"]], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"9782", " ", 
    SqrtBox["4891"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"70", "-", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["67", "73"]], " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"70", "+", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.9647864821490498`*^9, 3.9648096924324756`*^9, 3.964837108715316*^9, 
  3.964856608589219*^9, 3.9649177931182365`*^9, 3.9650301358439226`*^9, 
  3.9650315630465384`*^9, 3.965090848371338*^9, 3.9650917669466095`*^9, 
  3.9650970604066505`*^9, 3.9651147099587812`*^9, 3.9651177647539487`*^9, 
  3.965124277217589*^9, 3.9651801686744175`*^9, 3.9652173372337294`*^9, 
  3.965220681789205*^9, 3.9652221254624443`*^9, 3.965247261422372*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"7767edff-3a17-4e9a-ab98-850a571a45ab"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "0a8e760f-dbf7-4790-9e81-eb76143696e5"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{{3.965012631654235*^9, 
  3.9650126637800407`*^9}},ExpressionUUID->"f88e2df8-5d64-430b-8f2e-\
2bfbd1334f30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.964786494720104*^9, 3.9647864953111024`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"4244aed3-8918-4275-a3b0-c39306eab05e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"95819743", "-", 
     RowBox[{"88200", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["67", "73"]], " ", "t"}], "]"}]}], "-", 
     RowBox[{"88200", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["73", "67"]], " ", "t"}], "]"}]}], "+", 
     RowBox[{"44100", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"12", " ", "t"}], 
        SqrtBox["4891"]], "]"}]}], "+", 
     RowBox[{"81", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"280", " ", "t"}], 
        SqrtBox["4891"]], "]"}]}]}], 
    RowBox[{"9782", " ", 
     RowBox[{"(", 
      RowBox[{"9800", "-", 
       RowBox[{"219", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["67", "73"]], " ", "t"}], "]"}]}], "+", 
       RowBox[{"201", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}]}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"19564", " ", 
      SqrtBox["4891"]}]], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"9782", " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"67", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "70"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
          FractionBox[
           RowBox[{"73", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
           RowBox[{"70", "+", 
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
       "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"73", " ", 
             SqrtBox["67"], " ", 
             SqrtBox[
              RowBox[{"70", "-", 
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]]}], "-", 
            RowBox[{"67", " ", 
             SqrtBox["73"], " ", 
             SqrtBox[
              RowBox[{"70", "+", 
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"73", " ", 
             SqrtBox["67"], " ", 
             SqrtBox[
              RowBox[{"70", "-", 
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]]}], "+", 
            RowBox[{"67", " ", 
             SqrtBox["73"], " ", 
             SqrtBox[
              RowBox[{"70", "+", 
               RowBox[{"3", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  SqrtBox[
                   FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4690", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["67", "73"]], " ", "t"}], "]"}]}], "+", 
            RowBox[{"5110", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["73", "67"]], " ", "t"}], "]"}]}], "-", 
            RowBox[{"210", " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"12", " ", "t"}], 
               SqrtBox["4891"]], "]"}]}], "-", 
            RowBox[{"9", " ", 
             RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"280", " ", "t"}], 
               SqrtBox["4891"]], "]"}]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "70"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["67", "73"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "9800"}], "+", 
            RowBox[{"219", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["67", "73"]], " ", "t"}], "]"}]}], "-", 
            RowBox[{"201", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"70", "+", 
            RowBox[{"3", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["73", "67"]], " ", "t"}], "]"}]}]}], ")"}]}], 
         ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["67", 
          RowBox[{"140", "-", 
           RowBox[{"6", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "-", 
         FractionBox["73", 
          RowBox[{"140", "+", 
           RowBox[{"6", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}], 
       "2"], "+", 
      FractionBox[
       RowBox[{"9", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"67", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["67", "73"]], " ", "t"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "70"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "-", 
           FractionBox[
            RowBox[{"73", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["73", "67"]], " ", "t"}], "]"}]}], 
            RowBox[{"70", "+", 
             RowBox[{"3", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], ")"}], 
         "2"]}], "19564"]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["67", 
         RowBox[{"140", "-", 
          RowBox[{"6", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["67", "73"]], " ", "t"}], "]"}]}]}]], "+", 
        FractionBox["73", 
         RowBox[{"140", "+", 
          RowBox[{"6", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["73", "67"]], " ", "t"}], "]"}]}]}]]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.964760239583626*^9, 3.964760970108362*^9, 
  3.9647622121313066`*^9, 3.964762325248097*^9, 3.964771715621935*^9, 
  3.964786499102889*^9, 3.9648371173094025`*^9, 3.964856612094406*^9, 
  3.9649177965599003`*^9, 3.965030139319668*^9, 3.965031566622321*^9, 
  3.9650908515296307`*^9, 3.9650917699214063`*^9, 3.965097063160898*^9, 
  3.9651147131638927`*^9, 3.965117767860386*^9, 3.9651242804772224`*^9, 
  3.9651801719071903`*^9, 3.9652173404196644`*^9, 3.9652206849717083`*^9, 
  3.965222129528299*^9, 3.9652472645778294`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"ae644d4b-b160-49f5-b3d0-502137555a08"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t=0 be Xi, Yi, and Zi. \
\>", "Text",
 CellChangeTimes->{
  3.9650126956382914`*^9},ExpressionUUID->"1a49a683-c875-4d0a-87c0-\
abe551bf3b53"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647602985304937`*^9, 3.964760299665609*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"2e806413-6616-4fee-9f9d-cfdc8d778d34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964760281673687*^9, 3.9647609743312473`*^9, 
  3.9647622122891417`*^9, 3.964762325414926*^9, 3.964771729584259*^9, 
  3.964786507371831*^9, 3.9648371258053856`*^9, 3.9648566121875286`*^9, 
  3.964917796662279*^9, 3.9650301394468126`*^9, 3.9650315667178135`*^9, 
  3.9650908516343145`*^9, 3.9650917700374155`*^9, 3.965097063241212*^9, 
  3.9651147132476654`*^9, 3.9651177679574533`*^9, 3.965124280597416*^9, 
  3.9651801719964385`*^9, 3.9652173405027742`*^9, 3.965220685074942*^9, 
  3.9652221296811247`*^9, 3.9652472646776342`*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"a56fac6d-ed58-4051-8092-c854ea5c9631"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when t=\[Tau] be Xf, Yf, and Zf.\
\>", "Text",
 CellChangeTimes->{{3.965012706167365*^9, 3.965012709538224*^9}, 
   3.9650130436487474`*^9},ExpressionUUID->"b20fbaec-0a56-4643-93a0-\
7a65235148f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"e5148bc1-23a7-4e5a-9e86-a02167da5481"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["24010081", "24009919"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["88200", "24009919"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.964786511835945*^9, 3.9648371292777243`*^9, 
   3.9648566122558146`*^9, 3.9649177967188463`*^9, 3.9650301395512233`*^9, 
   3.965031566794854*^9, 3.965090851722701*^9, 3.965091770128528*^9, 
   3.965097063321068*^9, 3.9651147133234243`*^9, 3.9651177680209002`*^9, 
   3.965124280693144*^9, 3.965180172075615*^9, 3.9652173405532055`*^9, 
   3.9652206851379013`*^9, 3.9652221297530613`*^9, 3.9652472647603064`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"87987ef0-320a-4238-a6b1-4d5ec7fe3355"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Red", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Coth", "[", 
            RowBox[{"2", "\[Pi]"}], "]"}], ",", "0", ",", 
           RowBox[{"-", 
            RowBox[{"Csch", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.964853578850316*^9, 3.9648536146604643`*^9}, {3.9650964393533134`*^9, 
  3.965096440223779*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"a7a1d1bf-4623-4b48-a3a3-c085c87c8248"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1: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
1yiGtsz1p/Ve1qBPKmLfdW+dgKMmXxIUiJzr0XJCSUO3Fj3PpRgrT2SB6+JN
bR5Ebn0/7h9CUVuLRDZyPF4wHwdvd5MIL3IcXWoO98p5WYtYQl8rTAUeBz3e
Zcub1DhKCeP5xT5UizJv0jG6pLKCg9xXq22iDzRnKw3w1dUiH65ms1YHDpAS
/F2gwkn0q3s/f1oR333x46CaSjg3KNFakkL5cURvq5VR/bQGdXbzNjQz8oHf
QKdQMpFHTPRbYv5jqUHHz3PE/EsShEndf2y0ajhqff2X8p98FRrWGrQXc5YE
jT9yrgF6OPpJzV+6Rl2JOJmVjdp7pMH5a9fMeTMcMUBH04XucqSOW7/4L1ge
xlyrxc1ciZzVtnYjuLgEVRzbJ/B9UQX+e7FNedSH6G9Sg4xXxoqQ7wD3+jEJ
dUi4wiyhdQ4n/JO6Gel7AfrzuoHjXJUmnKVD6tsXcRS11K05lZKDDk/p3gl+
pAeSLgzpHjE4umZYfD6dIQONGvBcOhZmCBaTNw+eSsBR0b17rl/DkhHleFjq
OqsJVLopjEskEzko9tX6Adc4FP09jHokzhSMpjXI0lNxVN8aZZNSE44myE+E
f/tuBjpedlPc6QTvej+M0zl6o/dp1WZHiff1c1Kg9y+hf2J/pNr5Vx6VCT1T
o39oCap9mB1jBjHewfrtu38u8N+WPF8ftzW8Xme77E2MZ4L4Qv2aULjB8kgL
S7CBOpYfUZvEd+HeVTmh9mhgyLe8lDljCykczAnPiHVq6ec1i5omQWRrNUuq
oD3seYSqvyX2pbvEWxN8Jh1CTv73eCXAAcbCi6pPxxLnPxuT+ncrG+IpLA99
bnAEg9/lVS8iCb7bIHKTkTzgtGK7UffCCa6NiZ+/e57QteqY7xwoBJmvjW1p
c87QZcWxVEfcyyUWmYdlIqWwOzAaELLkAn9PXBBsI+6R/ftj5XWGcmiFYJOP
Vq6A6TxwE7Uj/EzG9Xr+NxUgu2ymoXXfFcw/9xcKE/VwbFhA9Pr5KtjrZ7KV
onMDqxWJsC7CR3WrD+4XX6kG/28jW+r2biCyJ2bzWgVHT6TnT7Qq1EJ1dTf7
6Qo3oHeI4CmUJXzgsdejvGJ10Hh2Vf3WsBvE3Jbg2U/4vXl9ZfPBa3WAqbab
tP90g4/FH/YkT+HoVb/hmfyj9ZBxeu00C407mMf4NYmw4WjMXPgDrWM9KLd9
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
zZiAgmdpJUW4K4BW8G8jl4IZKFhFNG/jPnlkq8TI1bIceia/te3VmUItRGal
4tz353X8Hfs/pVD/TOPv30Om4Gs4VrZNTUCM1FIMa8QiYLRv0LBqMAbnxtoj
B0gJSPOVLpfewwK4+YQqYGrdCGpLxcXNf6+gkHlLmmTbPOh+oshcJWkE5bdO
NvB/WkGxtyVbbllmQXpYdO7xxwbQtD9auP8d5tfuudQm7zRwV7lZNv5XH5xM
tLe+v1pBSpf89Da2E4C0rcz+l5A+fOPrcc3uWUGWJGNeb12jYYZsJdvWRw/q
rrBeHoEVdELeQeFYaAhUXzMfZ2vUBZ81R497TzCPElVWL627w/jEKgnDig7E
i6Sqcj9eQRcs67LOcirAVvm4Ip+gDlTnhNqoYl3YMG8qMNAODYtLMmQRteDT
snIs+dMVVPe0+4Dze3/Etfs91S9REygCLF95dq0gmU+pVyz4I5HwCeqnJdwa
0O5akOjTu4L61F5bHZqJQ7bbssJZk2qgTuulf3RwBfHInmjnjkhBdK0kl7oK
VeFDMPu27OgKKo17XOp0PRP5Xb9RFe2sAkJ3uDNIvqygcFc9taiLOcj0cA0P
i5IyLBBn9BQWVlBGY3d4eNcNtG72UuK+qBJ41G1WsmN/cpYvjq+/pAhNZ5Bd
3NNVBIUDLR8r6QmIV6KTpPJTCfpFkF1Ouq4A8tqpBZ44p9tcX9sN2CxFttVq
Oq1d8vAzREDDR5SAYhhDfnAGlyM1o/aPZ5nloeFzZE0e9l1G59VaOK0r0MBm
zopVohwsCo6Uv7IkoL8HpKlsBSrRLovS6cGjcpB7pCrjf84+MZDwzvlZiaQi
jiS23ZWF3paDnP9wni0bVDXNSK1CVDLkQqp2snA+Riauu4yAaOFXqixDNeJ2
qK3M4JeF/WWbhFKcW3MpqV7wh1ejY9JP5BIYZGGcA3muDhBQx8Tdp/Gvq1Hn
ptnAErUsiDO5jFV/I6CxE2ZQf6AG1bnIlYaflAXChQ/MJTifiqRbkZ7grEE6
3+b9v8jKQtKnnkarw0QUtdnL68tdg3jCj4UXB8qCw5xq4jo95iCb4lfn4zVI
xkg04zzIwuRvk4SE//+v4soaxbvFajTq3Jw4zSwH5EUONvuwn28JvKlwq6Ya
MZNwD5LHy0E2991yc1Ei0mF79HnrSjVKcvb6OUwmD0b2H55F4bxJGgnLh15X
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
+A+Plj1U
        "]]},
      Annotation[#, "Charting`Private`Tag$121727#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$121748#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[1, 0, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[24010081, 24009919], 0, Rational[-88200, 24009919]}, {
       1.0000067472114338`, 0, -0.0036734817805924294`}]]}}, 
   {RGBColor[0, 1, 0], PointSize[0.03], 
    Point3DBox[
     NCache[{Coth[2 Pi], 0, -Csch[2 Pi]}, {
      1.0000069747090357`, 0, -0.003734898488285673}]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{348.54266569414926`, 346.6666666666667},
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.9580414970771776, 
   1.0437812252044798`}, {-0.042686956083564265`, 
   0.042842640502802606`}, {-0.0036734817805737646`, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{3.383309226210443, 0.030414664152160206`, 0.04789183692242593},
  ViewVertical->{0.5794993987743712, 0.011429958350571411`, 
   0.8148925100111342}]], "Output",
 CellChangeTimes->{
  3.964760379431897*^9, {3.964760983972582*^9, 3.9647610089173994`*^9}, 
   3.9647622129070826`*^9, 3.9647623260576787`*^9, 3.964771763320077*^9, 
   3.964786599000628*^9, 3.964837134089882*^9, 3.964856612670097*^9, 
   3.9649177971097803`*^9, 3.965030139982348*^9, 3.9650315672614164`*^9, 
   3.9650908522147846`*^9, 3.9650917705135913`*^9, 3.9650970636922827`*^9, 
   3.965114713754009*^9, 3.965117768416239*^9, 3.9651242811313267`*^9, 
   3.965180172495881*^9, 3.965217340947398*^9, 3.9652206855700846`*^9, 
   3.9652221302495747`*^9, 3.9652472651929893`*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"1a3b295b-fb78-4ae2-9a5f-06450b946c7c"]
}, Open  ]],

Cell[TextData[{
 "Evolution toward the thermal state for (n,l) = (36,33) to the target \
inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "8fc73efe-da3a-48d1-ae47-1aad607dfa82"],
 ". The exact thermal state corresponding to this value is marked by a green \
dot, while the approximate thermal state is indicated by a red dot; both lie \
on the thermal curve."
}], "Text",
 CellChangeTimes->{{3.9650125313038054`*^9, 3.965012546515093*^9}, {
  3.965013179549408*^9, 
  3.9650131816394186`*^9}},ExpressionUUID->"6590a7e6-8992-4d15-9298-\
6d32800fec09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["(d)  {n, l} = {48, 44}", "Subsection",
 CellChangeTimes->{{3.964812700450225*^9, 
  3.9648127155717096`*^9}},ExpressionUUID->"0b2ee915-97ed-4a1d-bc46-\
e856c9af5107"],

Cell[TextData[{
 "Now let us visualize the evolution toward the thermal state for (n, l) = \
(48, 44) to the target inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "724811bf-0f83-45e4-a62c-1d3d27d4a2c9"],
 ". "
}], "Text",
 CellChangeTimes->{{3.965010975134411*^9, 3.965010984935171*^9}, {
  3.9650877184140654`*^9, 
  3.965087761582553*^9}},ExpressionUUID->"1c02c9f6-5786-4c74-b217-\
b1a69a346255"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"48", ",", "44"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.96478614276801*^9, 3.964786163236477*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"ae42e2eb-eccc-454d-899f-5931963a9218"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "44"}], "}"}]], "Output",
 CellChangeTimes->{3.964786174220108*^9, 3.9647866070983877`*^9, 
  3.9648371434044895`*^9, 3.964856612739502*^9, 3.9649177971760035`*^9, 
  3.96503014008627*^9, 3.9650315673391085`*^9, 3.9650908523063264`*^9, 
  3.9650917706096425`*^9, 3.9650970637719307`*^9, 3.9651147138407097`*^9, 
  3.965117768495287*^9, 3.9651242812264194`*^9, 3.965180172571789*^9, 
  3.965217341184766*^9, 3.9652206856428776`*^9, 3.9652221303220944`*^9, 
  3.9652472652757425`*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"78425ce8-9aba-41fb-a0e4-370adaf4305d"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{
  3.9650127400175915`*^9},ExpressionUUID->"90228d57-14e0-45e7-bfa2-\
a69181b4bb7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellLabel->
  "In[151]:=",ExpressionUUID->"1cdf0ca8-309b-45dd-a454-62d1a78ed316"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", 
    FractionBox["93", "4"], "]"}], ",", 
   SqrtBox[
    FractionBox["89", "97"]], ",", 
   FractionBox["744", "8633"], ",", 
   FractionBox[
    SqrtBox["8633"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{3.9648371460160446`*^9, 3.964856612806864*^9, 
  3.9649177972376924`*^9, 3.965030140198151*^9, 3.9650315674087334`*^9, 
  3.965090852392921*^9, 3.9650917706946425`*^9, 3.965097063852142*^9, 
  3.9651147139138603`*^9, 3.9651177685587735`*^9, 3.965124281320797*^9, 
  3.965180172648794*^9, 3.9652173412292023`*^9, 3.96522068571294*^9, 
  3.965222130393992*^9, 3.9652472653579383`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"e66457ac-a64d-4ce9-91fd-ddb7f018562a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"9d4c0d3e-ee02-4f6e-803c-a536c4d02046"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    FractionBox["89", "97"]], ",", 
   FractionBox["744", "8633"], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["8633"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9647861795835943`*^9, 3.9647866117663345`*^9, 
  3.964837156528455*^9, 3.9648566128710814`*^9, 3.9649177972982135`*^9, 
  3.9650301403025975`*^9, 3.9650315674947233`*^9, 3.965090852477299*^9, 
  3.9650917707694397`*^9, 3.9650970639318314`*^9, 3.965114713987212*^9, 
  3.965117768638094*^9, 3.9651242814103403`*^9, 3.965180172722437*^9, 
  3.965217341306923*^9, 3.9652206857752166`*^9, 3.965222130462702*^9, 
  3.9652472654382057`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"159e0c67-da9a-499d-8fe8-ad210eac1c7f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"5f774b86-37a7-4c35-9b06-bb491174c44a"],

Cell[BoxData[
 FractionBox["97", "89"]], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.9647861869417677`*^9, 3.9647866149567165`*^9, 3.964837163700824*^9, 
   3.9648566129372253`*^9, 3.964917797357999*^9, 3.9650301404035454`*^9, 
   3.9650315675802827`*^9, 3.9650908525670967`*^9, 3.965091770850628*^9, 
   3.965097063995324*^9, 3.965114714055561*^9, 3.965117768717456*^9, 
   3.9651242814953876`*^9, 3.965180172807254*^9, 3.9652173413754225`*^9, 
   3.9652206858355727`*^9, 3.9652221305294247`*^9, 3.965247265516292*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"35c9a7e4-ab1c-4ee8-9a24-2362cbfe5594"]
}, Open  ]],

Cell[TextData[{
 "The corresponding values of bplus, bminus, bplusdot, bminusdot, and the \
real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "4c845f62-67c0-41db-b6e6-f8c5ce0bcc1e"],
 " : "
}], "Text",
 CellChangeTimes->{{3.965012754319885*^9, 3.965012775403969*^9}, {
  3.9650128409377155`*^9, 
  3.96501284892922*^9}},ExpressionUUID->"24e83fb2-d0af-455e-a1ed-\
863589bcfacc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"2df03f82-6c41-4089-8c27-9078cece0bd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"93", "-", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], 
    SqrtBox["89"]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{"93", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]], 
    SqrtBox["97"]], ",", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SqrtBox[
        FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
    RowBox[{
     SqrtBox["97"], " ", 
     SqrtBox[
      RowBox[{"93", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
     RowBox[{
      SqrtBox["89"], " ", 
      SqrtBox[
       RowBox[{"93", "+", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}]]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.964786193522727*^9, 3.964786620879633*^9, 3.9648371844782352`*^9, 
   3.9648566137888308`*^9, 3.9649177982447133`*^9, 3.9650301413400855`*^9, 
   3.9650315684499393`*^9, 3.96509085352669*^9, 3.9650917716849585`*^9, 
   3.9650970647970614`*^9, 3.965114714929843*^9, 3.9651177695745573`*^9, 
   3.965124282466454*^9, 3.9651801736842318`*^9, 3.9652173422605467`*^9, 
   3.96522068676729*^9, 3.965222131589649*^9, 3.9652472664037857`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"f5fb0a3b-7b3c-4cb9-8002-5207f0ad7d3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647599956375804`*^9, {3.964786633005628*^9, 3.9647866338179164`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"64d7281e-ab32-42fc-ac71-83d06c2173a0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["89", 
     RowBox[{"186", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "-", 
    FractionBox["97", 
     RowBox[{"186", "+", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"89", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "93"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "-", 
       FractionBox[
        RowBox[{"97", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
        RowBox[{"93", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    SqrtBox["8633"]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.964786200823799*^9, 3.9647866349197884`*^9, 3.9648371879471717`*^9, 
  3.9648566143328085`*^9, 3.9649177987819076`*^9, 3.965030141869635*^9, 
  3.9650315690540113`*^9, 3.9650908540372515`*^9, 3.965091772693597*^9, 
  3.9650970652910233`*^9, 3.965114715502356*^9, 3.9651177701612253`*^9, 
  3.965124282996537*^9, 3.9651801742563596`*^9, 3.9652173428215303`*^9, 
  3.9652206873118277`*^9, 3.9652221322705803`*^9, 3.9652472669968815`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"bd9bc015-ee18-4e83-9972-5777c9087cff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellLabel->
  "In[156]:=",ExpressionUUID->"5e2519cc-64ac-466d-896a-4f73b642f544"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["89", 
     RowBox[{"186", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["97", 
     RowBox[{"186", "+", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"89", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "93"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
       FractionBox[
        RowBox[{"97", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
        RowBox[{"93", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    SqrtBox["8633"]], ",", 
   RowBox[{
    FractionBox["89", 
     RowBox[{"186", "-", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
    FractionBox["97", 
     RowBox[{"186", "+", 
      RowBox[{"8", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"89", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "93"}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
       FractionBox[
        RowBox[{"97", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
        RowBox[{"93", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
    SqrtBox["8633"]]}], "}"}]], "Output",
 CellChangeTimes->{3.965087817891463*^9, 3.9650908543903294`*^9, 
  3.965091773031641*^9, 3.9650970655458612`*^9, 3.9651147157974377`*^9, 
  3.9651177704633303`*^9, 3.965124283363003*^9, 3.9651801745483685`*^9, 
  3.965217343102821*^9, 3.9652206875952578`*^9, 3.9652221325716767`*^9, 
  3.9652472672922707`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"7a3836a5-a481-4505-aedf-af047cda6732"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "ed59421d-66a6-4b5f-b988-dd62ce3343e9"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{
  3.965012918567001*^9, {3.965089835466852*^9, 
   3.965089836118222*^9}},ExpressionUUID->"43560c66-d191-4f45-97ac-\
d20b189c1795"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.964786272183951*^9, 3.9647862734050655`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"5154e968-31dc-4a44-8aa9-a34cfc8d266e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"138128", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "186"}], "+", 
        RowBox[{"97", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["89", "97"]], " ", "t"}], "]"}]}], "+", 
        RowBox[{"89", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
    "-", 
    RowBox[{"16", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"89", " ", 
         RowBox[{"(", 
          RowBox[{"93", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["89", "97"]], " ", "t"}], "]"}]}], "+", 
        RowBox[{"97", " ", 
         RowBox[{"(", 
          RowBox[{"93", "-", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", 
           SqrtBox[
            FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}]}], 
   ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"34532", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"93", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["89", "97"]], " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"93", "+", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.964760066273921*^9, 3.964760946691349*^9, 3.96476218370989*^9, 
   3.9647623119776993`*^9, 3.9647717008151608`*^9, {3.9647862795228853`*^9, 
   3.964786285234374*^9}, 3.9647866419920855`*^9, 3.964837198430945*^9, 
   3.9648566170883045`*^9, 3.9649178014200077`*^9, 3.9650301446049194`*^9, 
   3.965031571722077*^9, 3.9650908570749474`*^9, 3.9650917755578995`*^9, 
   3.965097068045223*^9, 3.965114718485874*^9, 3.965117773186414*^9, 
   3.9651242862749405`*^9, 3.9651801772605085`*^9, 3.965217345787795*^9, 
   3.965220690346623*^9, 3.965222135301647*^9, 3.965247270030266*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"5b584d17-c90e-4290-89b5-981421a59b24"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.964760091159008*^9, {3.964786292797888*^9, 3.9647862937266088`*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"112ff945-a63d-4c06-b281-e7cd11d670b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"97", " ", 
       SqrtBox["89"], " ", 
       SqrtBox[
        RowBox[{"93", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]]}], "-", 
      RowBox[{"89", " ", 
       SqrtBox["97"], " ", 
       SqrtBox[
        RowBox[{"93", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"97", " ", 
       SqrtBox["89"], " ", 
       SqrtBox[
        RowBox[{"93", "-", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]]}], "+", 
      RowBox[{"89", " ", 
       SqrtBox["97"], " ", 
       SqrtBox[
        RowBox[{"93", "+", 
         RowBox[{"4", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", 
            SqrtBox[
             FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"8277", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["89", "97"]], " ", "t"}], "]"}]}], "+", 
      RowBox[{"9021", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox[
          FractionBox["97", "89"]], " ", "t"}], "]"}]}], "-", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"93", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"16", " ", "t"}], 
            SqrtBox["8633"]], "]"}]}], "+", 
         RowBox[{"4", " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"372", " ", "t"}], 
            SqrtBox["8633"]], "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"8633", " ", 
    SqrtBox["8633"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"93", "-", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["89", "97"]], " ", "t"}], "]"}]}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"93", "+", 
       RowBox[{"4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.964786294470849*^9, 3.9647866498524714`*^9, 3.9648372020256433`*^9, 
  3.964856617412577*^9, 3.9649178017353287`*^9, 3.96503014498899*^9, 
  3.965031572072361*^9, 3.9650908574452133`*^9, 3.965091775908292*^9, 
  3.9650970683659773`*^9, 3.9651147188407507`*^9, 3.9651177735357924`*^9, 
  3.965124286651884*^9, 3.965180177588421*^9, 3.9652173461173477`*^9, 
  3.96522069067746*^9, 3.965222135632347*^9, 3.9652472703837657`*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"c5f6ab44-c64c-4373-baea-9897c40cdb85"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "7710895f-e7a2-4dec-82f7-03bb4d815341"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.9650129460421553`*^9},ExpressionUUID->"1023c082-af24-4e05-8c1d-\
513fc11ef50f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.964786360213028*^9, 3.9647863610358157`*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"7f66ba11-5e72-491a-b047-17ee7fd8612c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"74632413", "-", 
     RowBox[{"69192", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["89", "97"]], " ", "t"}], "]"}]}], "-", 
     RowBox[{"69192", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox[
         FractionBox["97", "89"]], " ", "t"}], "]"}]}], "+", 
     RowBox[{"34596", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"16", " ", "t"}], 
        SqrtBox["8633"]], "]"}]}], "+", 
     RowBox[{"64", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"372", " ", "t"}], 
        SqrtBox["8633"]], "]"}]}]}], 
    RowBox[{"8633", " ", 
     RowBox[{"(", 
      RowBox[{"8649", "-", 
       RowBox[{"194", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["89", "97"]], " ", "t"}], "]"}]}], "+", 
       RowBox[{"178", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox[
           FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}]}]], ",", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"8633", " ", 
      SqrtBox["8633"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"17266", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"89", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
          RowBox[{
           RowBox[{"-", "93"}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
         FractionBox[
          RowBox[{"97", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
          RowBox[{"93", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}]}], 
      "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"97", " ", 
            SqrtBox["89"], " ", 
            SqrtBox[
             RowBox[{"93", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]]}], "-", 
           RowBox[{"89", " ", 
            SqrtBox["97"], " ", 
            SqrtBox[
             RowBox[{"93", "+", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"97", " ", 
            SqrtBox["89"], " ", 
            SqrtBox[
             RowBox[{"93", "-", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]]}], "+", 
           RowBox[{"89", " ", 
            SqrtBox["97"], " ", 
            SqrtBox[
             RowBox[{"93", "+", 
              RowBox[{"4", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", 
                 SqrtBox[
                  FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}]}], ")"}],
          " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"8277", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}], "+", 
           RowBox[{"9021", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}], "-", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"93", " ", 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"16", " ", "t"}], 
                 SqrtBox["8633"]], "]"}]}], "+", 
              RowBox[{"4", " ", 
               RowBox[{"Sin", "[", 
                FractionBox[
                 RowBox[{"372", " ", "t"}], 
                 SqrtBox["8633"]], "]"}]}]}], ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "93"}], "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "8649"}], "+", 
           RowBox[{"194", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}], "-", 
           RowBox[{"178", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"93", "+", 
           RowBox[{"4", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}]}], ")"}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["89", 
          RowBox[{"186", "-", 
           RowBox[{"8", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "-", 
         FractionBox["97", 
          RowBox[{"186", "+", 
           RowBox[{"8", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", 
              SqrtBox[
               FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}], 
       "2"], "+", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"89", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["89", "97"]], " ", "t"}], "]"}]}], 
            RowBox[{
             RowBox[{"-", "93"}], "+", 
             RowBox[{"4", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "-", 
           FractionBox[
            RowBox[{"97", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               SqrtBox[
                FractionBox["97", "89"]], " ", "t"}], "]"}]}], 
            RowBox[{"93", "+", 
             RowBox[{"4", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", 
                SqrtBox[
                 FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], ")"}], 
         "2"]}], "8633"]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["89", 
         RowBox[{"186", "-", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["89", "97"]], " ", "t"}], "]"}]}]}]], "+", 
        FractionBox["97", 
         RowBox[{"186", "+", 
          RowBox[{"8", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", 
             SqrtBox[
              FractionBox["97", "89"]], " ", "t"}], "]"}]}]}]]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.964760239583626*^9, 3.964760970108362*^9, 3.9647622121313066`*^9, 
   3.964762325248097*^9, 3.964771715621935*^9, {3.9647863563412848`*^9, 
   3.964786365028022*^9}, 3.9647866641485434`*^9, 3.9648372138401556`*^9, 
   3.964856621122547*^9, 3.964917805068237*^9, 3.965030148398035*^9, 
   3.9650315755525923`*^9, 3.96509086063451*^9, 3.965091778960643*^9, 
   3.9650970712978296`*^9, 3.965114722232217*^9, 3.965117776718279*^9, 
   3.9651242900968957`*^9, 3.9651801809175367`*^9, 3.9652173492664833`*^9, 
   3.965220693859776*^9, 3.9652221390705004`*^9, 3.9652472736793904`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"8037e277-64e3-4c8a-aea5-5b0f59ae1070"]
}, Open  ]],

Cell["\<\
Now the initial values of X, Y, and Z, when when t=0 be Xi, Yi, and Zi. \
\>", "Text",
 CellChangeTimes->{
  3.965012956090436*^9},ExpressionUUID->"51c38967-6109-4357-a124-\
93dfdcc04384"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "0"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647602985304937`*^9, 3.964760299665609*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"d42539ea-48f9-42eb-bf38-e0ab13736340"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964760281673687*^9, 3.9647609743312473`*^9, 
  3.9647622122891417`*^9, 3.964762325414926*^9, 3.964771729584259*^9, 
  3.964786378137021*^9, 3.9647866700203686`*^9, 3.9648372184604893`*^9, 
  3.964856621213952*^9, 3.964917805161903*^9, 3.965030148532011*^9, 
  3.9650315756382713`*^9, 3.9650908607309303`*^9, 3.9650917790724125`*^9, 
  3.965097071377425*^9, 3.965114722330964*^9, 3.9651177768293557`*^9, 
  3.965124290218543*^9, 3.965180181026708*^9, 3.965217349339225*^9, 
  3.965220693942217*^9, 3.965222139161625*^9, 3.965247273780367*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"cf6a1be4-fa7c-4700-9af0-457959da5e77"]
}, Open  ]],

Cell["\<\
And the final values of X, Y, and Z, when t=\[Tau] be Xf, Yf, and Zf.\
\>", "Text",
 CellChangeTimes->{{3.9650129726585073`*^9, 
  3.9650130287334337`*^9}},ExpressionUUID->"09fbcb31-646e-4922-b064-\
89c968692d3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"2ca4816a-bc96-4504-99dc-295b7ba7b8fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["74805457", "74804945"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["276768", "74804945"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.9647863826553497`*^9, 3.964786674894475*^9, 
   3.964837221555628*^9, 3.9648566212796965`*^9, 3.9649178052205462`*^9, 
   3.965030148634774*^9, 3.9650315757099004`*^9, 3.9650908608266973`*^9, 
   3.965091779153111*^9, 3.9650970714257574`*^9, 3.9651147224069586`*^9, 
   3.9651177769084015`*^9, 3.9651242903210096`*^9, 3.9651801810999765`*^9, 
   3.9652173494114456`*^9, 3.9652206939972*^9, 3.965222139225201*^9, 
   3.9652472738609548`*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"47576a0a-f7f5-49c6-9fa4-f74836154eef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "1"}], "}"}]}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}]}], 
     "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParametricPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Coth", "[", "\[Theta]", "]"}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Csch", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", "10"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", "Red"}]}], "]"}], ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xi", ",", "Yi", ",", "Zi"}], "}"}], "]"}], ",", "Red", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "]"}]}], "}"}], "]"}], 
     ",", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Coth", "[", 
            RowBox[{"2", "\[Pi]"}], "]"}], ",", "0", ",", 
           RowBox[{"-", 
            RowBox[{"Csch", "[", 
             RowBox[{"2", "\[Pi]"}], "]"}]}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.964812109276575*^9, 3.9648121212041907`*^9}, {3.964853632364383*^9, 
  3.9648536439013395`*^9}, {3.96509645897911*^9, 3.965096459621967*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"485e3d0e-4b35-4713-ae60-f408d9fe6492"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJwUm3c4l+8Xx5EooZSvkZUdKTMZ6diy987eZBOyyiZk7z1KqRQSiZPRnlJJ
MiolDc9DKkr6Pb9/6rrOdV/35/7c9zmv9/tNCboHW3jR0dDQBG2hodlA/S1J
S/1BQ8KQNAg1XtU7xMYUvZsuW6iPjV2pYCtVz+D2Fvc/Jwp6xskcYrLT/baW
PJsOUfXvk6dOxnjvB28vo5a2Xf/6ZUL0G7OousSf9uqacICSyAPmbuFsKP7h
y+5lqs7fc5uG3lkbXp3Rqfg2w4+6KU4fomlJKDZb3Mxz8jCwDIibtv4Wx8dX
1a5w0JHQtjQixsJgBCaLjfS+wrIoe3f2132qnmU/q7A4YgIbFzVV3gscwID0
PViwgQSm2vgd+7zNQNLMryv2oxoCe+Rlf3oSWOPWBScJM1iPZz5e16mJRMNH
IdONJFiudlg+XTMDLmYuviMPdfFXwFWxgwwkSGtEbDiVagYePxvM/soa4nBn
cP5eRhLM/nE/GdlkCvkRTfwBb0wRooW2CGwiQU24qDfkiyGUXvt0es3VAlm+
KvMybyZhZO6jcE2bHsSrxEWpfbXCi2N207eZSAi+O3cq7u4BOJCa8eWZogO2
GqhmnNpCQmY/c4B3tiDso6vawvPlCFp8qX2uzEzCUcHDn4YSduHyzJXAiXoX
PEo7kvOIqnNeIxY+i6jimuLT+iuSbijsp3VNk4WE13OaD05N6+H2FB+TDSfc
sTSQprqYqkt+/FN185g5+lQcd/vvsQeO9vq+HaTqwm61Bq2mtqigOKojsd0L
tbMEs+5Q9ZflcvZe/k7YLe0GxfreuOnV+pZ6qq5OcnNfeO2GJdcq7e6H+uDv
gzetjan6oKTQ8CirF7aMtXM7ZPjiHtGY8fvUOd1aauU69HzRYUv46p8sP6yL
OFnERdW3iHdJfzoegAOF2tEFUf743OPpf4rUPbAHbhcZqg5Ch+OpL6WNAtDy
WUuSMHVvB1dpvTueheDOF9V2OxmPoo5SSvlb6v5tY/wjIrTC8CtDMfPTM0dx
6qx0Ryj1Xqu6vwd7KsPxuGIxA5NkINaMsA++oN79VoKigvzLCExvObMFTwfi
84I2021Un9ywDRK48S0Su69+bxQdC8ROzgPRIlS/OTJMFgVMHkNa+i15V/8F
Yuzb9Nn/qH62kknkaaqLwq0992t2bw5CsVdDKSN/CLgfebZbSD4ak81fvj/+
PRBdD4gf0/pFgFx3GTtLfjReK2s0+9wfiE1TTiOnlggITTEsXO+Kxn9HDnb+
CAjEQMUXhVe/ERC2MHeQvSEaJ2r7xB3/HEUXqRa/h58IqGbRsfllGo3iprbE
f0FHMS9nOe/NewLeuN/N/dgfhb57to073grAtAsRvUtT1HlIsUt9346h/PkR
4Qq6AFwKlfTwekFArfwN4zuZEfg4Niinc78fpru3u795SkDx0POHi7/CcJ0x
7o2ztC/yvIoRy31IwNEzkgYr4qF4SkFufzGHD4ZULeKLYQLax3s87l30w8dD
berTXZ6YqGiUnDJAALfVRp/d3Z6Y0XADn0d44OOd0FTbT4BY0saCln5nfPU1
4PpWSXe8vmWMTe4GATQKH5I97C1xREfRXHrcFUPcqj7qXCfghF3MO0MbNdxm
deLCtc0umBt1zXC2mwDRI0Yr1i8VgMbcxSTZ5QgqSw86/UfVXS9yfPq8zwJC
JT0luXrssXNH1I6ZawTMtjI1HY91AWEukeGbPLZYNxEgZkCttw3UcXVJ9Ibi
gJHLV7Kt8PgA3bptDwGDEbkWAcaB8O19wCYaNgvclXijirmXgLGBfwsyzGFw
SEhAU8bRFKfyd+T59RGw3Pk6TNI3EqavOSr7PTbAJ52b3gfdJIBB2eF8Sns0
RA3F17em6OI4d8YOHureXERlD7K8j4U1I1b+8DRN/HHhMVPAXQLaYr5bn15M
AMO6Knvja2robvX0+9tnBEzr3hLerJ0EkVrcps7KsvjTIdUyZZwAMwOPbIPy
ZAizO24lnSOOO39mTA7PEPCFXTLm+p0UKJ7/vhBhyIcm485Wxf/vH9nkzFf3
U+Fu5dnTvDpbUf3n3bAPJAFCvEOcx2rSoDLmnI3Xv5X+7LNbGRtXqb7tMbs7
fCgdolZmfiiXjfaLuHszOVHcnm+uuuDZkg7f+Xrfvwoc6r+m2pDARPGT79Cv
+6Gv0iHozOdfc5WL/Ybzu2wfU/NrPMUznvcwHeg/MaUPim7Gb/vOB1Rtpeba
sW75d1I6JMVa0Shs4UbOO6XbfdlJODBeJZTxOw0Mje+otb8SwbPXvTVEuEnQ
z2N16ZZLg9m0mVtK+6Rx4v182xAfCR1X5ul796TCyzWhrwZd+9Fh74O/SkKU
jlRes4/4mAw/ztDWNl8/iAx3fo4fEyPhg43ElpOeSfDYee21kb4mtqgbqHLt
I+GrQtqCkV88JFzPtd6taIjpD32m3GVJuPejcVGYJwZGxiz55beZ4ZZ9Z2q1
FUg4JPnAaDwoAr6KCS9fbrTAzncJn9oVSTi/fpJLbTIIrnb9zl82scYiU5nd
TUokfLO52nPV0BMS5oSUhbfYoVpo9MpWFRJ27TNSP5RiAWdrMozlRxywPlAF
CKquIXsq9YSILOoLz67+K3fChbM+RgdVKZ266LX9aKkj/hLdcnWftCuabCr8
vkSt913rk7Mp9kPfy95nS0654VbulrptVP0/Xsa/B66E4QW1hgs9U+6o/9XG
p4g6j0Zut9XFzGh8tjJ/UUHUEy1whjmROn+lC3vQdu0ELNrD53zP0Qul+LYy
j8qT8MpWPVHt00kMsMsK90n0RvLRocIiGRJ+/oxkqTqdgv7VwQf35/hgwJaM
uHtSJMhf1zRO2ZaO73cvB5Qm+WIPUfz2gjAJzxrYV1mSTuHl3P8UmHn80Yz+
4FgQP+Uffso0mHjlYItazWH76/6433z9230uiufMf+YTGU+jTWuKebdyABpM
Bux+vJ0EvXeNihdl85A77cNtrrIA/DNeU5FG6YunHKuv0PU8VD+ybX3geQC+
6TbS2kD1J9nT6CzDk49lD0JTLAmq7ul96+w6AaP/iQ8YWObjlNis3/BcAD47
tr2ObZGA0mkrfiO3fLyYNpbl1k+tb5as8qJ4G2D27WG0dj7m+F5buB8egBOb
6fAWxVVbj8LKE2t56H+O0YLcFICjRvOKVtRc11x+5JiYmYdMChM/mBP9MeLn
t43yFE9oj36+tDJ2GntYUp80jPlhxPufl5IvESDp+Cp1RD8XNQYH5SPZ/XAg
ifjg3UDATgnekyoB2RjSJ82VfMAXm06d1lorIaBVY/q/i5CF3g4X6Gm1fDCS
52ldZxIB55Iv6BvuSEVa3j+iG/m8MC1/8QXrcQJ+v210ouNLwpej1TJ3SA88
da1MKDOMgJit9ENpk/FYeMXvn8c1dywxVruqfJSA1OAf/T38UXhr+Jz0jXA3
dJDaLa/gQ4C1tvioDnMIalRvqcDdrpgibHkq04MA7ROGfMkBbngyfkn/cbsT
pke1PdJzI2C199zgoR45VGJtjXVic8S168hw3JWql18ebKV3gPLE6yv84XYo
px4jsJtab7E44t0UfxTO2/G9/z5pjf32gQM21P5tO4/+1f8TCUq8f7TqbS1x
f7gBMFLn4fqlpbKvKR4EvV5a3fpghjx/xk4eoM5fLMJuEVOYBNxZsfIVPMa4
ote8+pb6voaxP/8mK6XB4yc2+c/PHcZc/uvFf6n7+VjyUYW2OxNa44d/bD+h
jUmKlzA+hYA/WTdaZzblwONJFeP8s+p4J/3ia59KAnpWFMon4/PhLzvX7RhO
BVR6d3eo7ywBjN4OZcSVAlBusvZ6zrAPs/x8WemuErBh3IMhZKgQln/Jhem4
iKKagB3BO0SA8y2hloi2Igget3hYUcCLMyrDOssjBPDOjUiYhxeDAMRcG21m
Q/XWJ30BbwnoDs14XcNcAsVSj0SaeOhxN92HVU+qbx8U82lpx5SA8/3iQhXv
X/2FJ1PeTlO+Rf3lxcS4ayXA518pcEp7ud9cQ3rXXsqvDnP3w9StEiDvf6k4
8nK9P+Hez4oMNhJad3CauDeWgN9Ankr8yS0ostdEdIbicPdBtkQ/0xI4tMf9
Gb8oJ0p5nJYUpHirymXxbuBeMWg29nIsfxTEW8rXx5QkSYh12Mneur0YaHxe
OiY+kcBdBnsPs8uR8FvJPWtcsggY1PltdKplser7YmedMgkhg+q90TsKYUSI
bk/U5gOYZlMimqxHwoD6MA2rUx580T42VDmvgRybnyxdNaY4zOLX7pSaA/uu
7Hl3O1MH4xOgy9KShGg23je76LNA8L/Gtb2++pjJq6hgbEfCBQudIU21NBg7
6WcwHmuMp5NexxcdIcGJoaPvqBKlC3IzPs2TZvg6MU+Az5WEufriAMa1WDBR
XvxjwGqJXfEjhm/cqfv5MhMisS8cVB8dzb5hYI0GnjW09zxJ+GJnv/2PgicU
b7PTvpFjiwsfe/e+8SLhuuD9kswzkvBjfmvw3xF7bBWiu73Nm4S7/U68mdxu
qBc29kNu+xG8uy465UGt/1rKwfLnRyi6V//9y6fvjDfepl597kGCrl6baqdZ
LO6NNlV4rOSKD1+e7/N0o3KcpXV4kVYSMknpHXfUckO2G/blnM4k2Bh0O78d
SMOzjAruYxru+HtKlf27PQmmXft8LnCdwtw2bsaNch54/HN2go4pxfNcxRvF
hfmo4uq3ZDbtiYGN20SeHSZh28/PD2e9CrFiqcFhtMwLae9icbsGCZN+5zSP
sRXjI1KE+dVBb9SoGKH9Sb2jR0bfkFVBCW4aZXrCdd8bZWbUGS9SemqTfqec
nC3FnV0lR7PAB5kdltLmd5Owpk7bIc5QjttOZrE4V/ngUHlkWL8ACb3DuwWM
vpcjuB9+TDvjg25aGuXAQcJtmuYNEucr0DZFJ38Xky++M9GKPEnx/yC7+RYG
iUp8ar/GU7/TF8/3nP5VRvn5mV32zueCKrFtIienic0XZ+zvtypS8/JkIWG/
3fFK/EZXpJ5C+OC4gHmH6iQB+ZyPBF8aVuKjUZ09Tzp9UGey3y3gHgEGFnxi
Hu8rsLJ3ZUTX3Qe/eexNJqi5Vnj0erBbowJ3ShvPTKx4o/LkNppFitt253g4
GHzL0TJhLe58jDeGBjgHb06k5lSu+kn4jlJ8KRDBLA5eqMifIxwQRMDeP0mh
bNXFyGeWaTqU5ok5Bnoq084EDI+dlij+VYhBp/vrAvs90LuRcTheiwDxnbtM
9aXyMJtbOXKO3h1fzf2+9fYA5bcFnCViebLR0s7Rz43TDWNGb67c30uAUo6t
n3B1OuWbe1FR0BXPBbEaJ/FT9yDS2/J0PRbZzHboxekcQZHUixjOTYBUZdfK
zdlQzPWcsOw76IBJ7AwvZDgIMPbSqizTcUadugtm7nJ2eO/dp5AhdoKaw55W
VlU9eLMzbc1U0gbXc2uV5f4j4GvuBoHGd/7wyYq578huK/QoKs44wUnAB5eI
b69+RUHfTW4ZQxnKb0vyOV3iIaBrQUKWT/4kiK0LkMM6ZshUbGHeLUhAAX+f
+3PLNFh4Ybqx9ZURNh9Syy+VIKDi5MJqu+UpOMoz8/S+iT6Wvvb9ySxPQEnY
xlarTXngqUSzNkCvi3HVzbX7DhGwfVtNsplxAehfiGCUXtDELmJ3wFcDAjIN
jsQJRhQBTXnNxtRt6uiX0rxR3p4A71lN2kPRJaCV2Axn36qgj0fk4hdfKq/p
PuzRtS6DDIvHAfHiithy4WjB3xgC4np4ubcyVoB9WZP419+y2HVswPZqLZWP
xq+OuIxXwR5PoyCTx2K466moF3cnAXxmSa2TS9XwyLOjTpZTCF1FWtQsqH4b
Ch4c4BqtgZkDz3nVLPmQt6lRXmmaABnftCv+UbVgrHqa8xUHN9ZOmhjV/yDg
sfH+TyWTtbClJqZ0MpETDQc23ZSh/M/W16V352nr4GTD5o+3T3Ohv4NBUjPF
eZ5nEjuefaoFGe3zO3s0eVFK0t6Mk/LVsFa9cPtULTzLsRK/qieIl905NgZR
c3pfQeRByNcaOD1u9yKjQxT7q/zF8il/WKDPmci/pQa+mFt+u+KwB9n/O8Tn
e4gEhuO0bzo+VYFIXZKdOJcs6hK1m55akFCxlKm3a64cFHb02tAVKiNTS7Wv
LMVhne7X9/qYy0CrlUW4+fQhjP01vjpHcdXz7NKNR7+LgeH9p62+6xqYXa5k
QxNBwo/Zl8ma6vkQy9M52/dbD/MdAvpUj5MwGpQp808jB/I/vTmUIWeI5eUX
mU8kknDGsl6hvCcdFHSOTTxMM8HgL7/J/mRK14xvutJ+PwnPGAyuTv4yw7Gm
9wFf00iQej8Vq/8jCupYJYPPtVMuWePKv/UMEvxuJRxSOeYDzuz8z3qDrbCj
4ugokUmCmhLlBy+J4r1JTf2Ne2ywiv/Do+tUXePwCfkIc3/kStiz7cSMLab8
YDnrnPH/n5Pcma6qiMFdszF9qtn2qFenSbxJJeGFxML8ie9JKJhgkuIr6Yhx
tLrMKkkkVN38w7t5NYOaR4GfbteOoMMnNqn4eBLubFIL132ai9luJWw90s54
3v/J3stRJAhfZnlAr1iAt+smg9XyXDD2du7J6RAS4k3dA99MF6G5MWMnXYAr
hpbl/OP2IyFMcw9dj0spMnGsJ6v8c8XFi8M3ftqQ4Cw5ujzzoBIPXmKJU//l
hsG3Iz7cNKK+156iD0WXqvHZormjob07ErSheR8oXQi4NflA3qoWua9NTIie
c8dzuh9c46h8Ece65cP5I3Vo55s14vbRHZ1HX/yppnxCjUmHQ8m3OnzLNSCI
2zyw8ZboLQ8qFzAO3ygYcqxHYwGae5K7PfCo2fXqOapvz3X03PY9U48oNe3U
J+WBydIdjVobSXjwl22A6VE9mlzuEuzh98CNARxfhCnODx4NuxD7pB6Pfj16
OX3dHaduliy+GiNgnO+3+PjFetRlPeJ27aE7rhMN+uP9BFy/vOd6pm89MjPI
BKxkumMfQd9kc4aAX2J6fco09cjetz7BfcAdT5xV4DmZS4DuhO/0WGQdKm8c
iWR44YZWciazaVEUD3cE1woV1+IZm8CEAU833DahurmI8refEt1cK/9Vo9SF
3NMec6541a7LzFeZgL7tBZGLIhWYt8VZbF+RC7rLm3UcFyfglTlzot9cKdba
X2Y3t6f8QNnrGkmKn+di73VvOV6M5zT2NyqyOuGQ/fvnr/4sgPddO80woTys
4HqUssHCAWlKcmmZFhdgcnYHGKVkocg2YRG7j3bIO/XD4tCnBbjdU2p89lQK
ui36EuqRtjjzYWg27e0CII9jc9eDODySf/+/UFobvPSK32PxzQJI/TFq3XMw
BEcGWkwKc6wwoX49OvD1ApiNmRmomWhh79GVU1J/LfCRwwf5E1S9Jn+S3orG
BzQOaWxlDTfH3vO5q1KTC+DgeMbuvkcMFE105g3NmuJex5X9Ye8W4MjJOypZ
+cmQ8CZVxGfNCOveSZjpf16AnkMCaxvMsmDs50bB13IG2FnvW3dmeQHKO5vF
9gfngbSFkl9jjh72F9551LqNgKbqS037ykqgw8ZPsGVYE5/S6o4LCRGQ9Pjb
hSsB5cC44bnRvvPqOKDfHtO/nwCX8/48/UxV8H7HkINQjhp+CPbOtTck4KbS
hb8jQTWg3fP44WMVFdTrPL96z52A6Dnb1HeH64Bzd8r1So8DqHjLpm8mlgB5
N5WtXxXr4acCZ89N5v047loh7E/lNUXfvovv1utB3k/0vqeKPFpe+vZjbzsB
wqH8Pr41DXB57EhZHiGLOcE7h4nHlE6du992dEcjPBjirRPcJ4sBbuJqwV+p
9Sea5xWONIIKo82Z/p8y2Pv7hbEC1f83F/be9IxqhGR5RuLRYVlM2mJfaMBO
8YTluQyDZyM87pi4HCgkh5Y5H99bU3n8Yif/pnzBRnCLPWcYfEIeB08oTchQ
/vxUy4OSxbYGMJfvuW/tvB/jlInKq+okvD1n55y7tQEkMn8q2XUdwOfvGHeL
UtwekxI3L9CtAwdfjRK1a2r4XlK055YvCZ/fDr7K16wBq+4IIXkqNy1cVimO
o7jt3vfk+NWzlSC7RKuyr0YTRcNzMs9RPBR8mqtuX14Mkq+L8hZ+6uKHk82i
s3mU7lzfOq6lUAACmfdl6Iz0cW1oz0YsJeHfxTWUOpADjImsCeodhrg9bcsT
kWoStmfL3F25nAo85PjFNlETvN5bqkpfT4J80C7Vb89ioeGtea6AiRmuy75x
N2skgcXKPL7wuQ/cb3jLQqab40jHlRWaJhLkdv7Sju8yw0+uU1lPblgg5++L
Edup9TGH6M626kegbVu5kvO8JXrpnRVJqyOhnJnHWVsgCXPDdY3cmazxMaOC
hHsVCflMHHfPkJlo+ND98CivDb700DtypYTSZddvsfSDefh0LNRgls8Wp6IH
hZJPk+Ajbfal1r0IOQ9I87NsscMJxnjJL5QeZSa9qSp5WopehXazbO/scGxt
ioOW4v/O62FP1+kqcab6j/jment8PF3DPxNK5Q5mCf22xWpcfbTX0FXXgcrx
BdVnqHzRlbcs0WpQh8HcvppTTx1w8E5XdSSVj3qveEjdDq/HqjdXGpvAER22
VTuEGJAgXcE0HxLagF8LG3mkCxwxIN9vsFeVyncNt60jNBqx0CjJy/yuI/LT
GP6KlyKhSPJPKe+7RuwOfvNV/p0jcrBxPZ/kJcFVy9lL2aIJs2k/6pjOOOIl
QYdjdCwk6IcJJfDmN+E4x6FL3kOOWGauVyv6m4CGar2YkpomnO0Zu3cy2xGH
9CDR/zUB9da/BZeON2Hxk6YnHw464iOP1mD+XgJyV8bPLog14aHkelvWlw64
tdtjNLOKyuPSTLPdjY1Is2y+0mzvgMkNP/8uJhBwZS5+6f1SAxrvZ5pMuGeP
qdduTPbqEaCaUfg7els93h/H8LFIO3RsV/1XtI/isO3i45N3alHHNfXziS5b
XCzcK25PcbjVkGlAUqwauwfptrd/scHBL/P3nIkFuCh8TJJJtBSnMg9fDDxo
jbtnS/8tTi3A07wqsw/PCpGhxo7Z5ogVrj/4HrtjZAEubet4x2CVhzV8myOj
YyyRc0OL4fStBfjzfAMtq2smdmfsF/habIEdIds0jvYtwBs+9+ijkyfxteX3
h9c6zDGt75bmf90LsKFwPKzMNxLPOctMZ703w8awHx/Vri6Apcqsz0C5Ix77
aXbsJqcZulRe1f7auQDfR39kDQ85Q5Dh80OFjSYYddzfR+gaxdUrNCYdmseg
asyzYaOYMQZtNDWY6l2Asc8/tVbsk+AQTdE7zx5DrKPFUe6hBWAMpdv2OSIT
ZjyMVlhdDVAx1evp/YcLkFvgrxwklwd9h6qKZHj1cd21aeHdqwWY9/ynaJFb
CPEu7W8GCT1sNbp+3XRuASYaL1efvVMCVkzbzDLf6OLLUaeq378WQCTvzgL3
q3KorOwY3TqrgwY7rry8y0SAue+v90k9VZASrD/dwqiDhHr1qUoBKr+UhDgt
e9UCEf3xQcBhbTwa+mDIVJGAUZWdMW+/1IFAgJeu/FktnCjIi+s3IcC6+k/+
XfoGyJsR/VwpooXyvqp9Nyif7zpClu790wCtxYVbNgxoYnmG5lWeFKpPJA53
DTxshPMuQTdS4zRxfnl0tqWOgEuJiznBUU2Q8VmOg8ZWE5XPqJnvo3xF7R6n
226rTTD0VHSc2UwTw9Ozb4e9IcBn989Lm82bgRTQCNnoo4krrwrFVf4QYGnq
91w0vhnULU4E0FVqIr9ty0chal6chc753I1rBgHeuqQ3nzVR6rxo7Hlqvvab
3Td1Mm2GvU8Oye2z1sL5U9yN26l5/Ezb3du23ASTnlr0Nq+0kK3qxnllan7l
Epo2EkebQGY+siAmTBv7udhb/uqTcFnXrLu9uxGY3+03zRTUQV1ts5GDFB96
jrCl/X3VAAp+B3h13utgicuIaUsYxaXm5yuW1XWQnZX0cqFID2+omTIWJ5Aw
963GlulUDaxMmlrXJB5G5oGb0QmUH2a8cmB5U3ElPJ8+2nYqTB+lvT8xvakk
oYxd4r4+UQRKn5h7nnoZYuJg1OtdFG+PNEsNbDbJB7zBNhbnaoRT60Nh9OdI
ONB+XSWW4RSw1mtxCtkZI0OGKlfURRK0Oz4+2C2dDGN8lgbbDEwwM7Xn2tHL
JHxTYY4sMTsGQ20zD7rkTbFe/z7n5BUSWk1snzuK2sGFzHMlNpvNUHrD6O8h
qu7cu+HcgQZP3MOws9EpzAzb//LIClL7PFl9mSlZdhx7a6PUyFEzHJlWqFi5
QMLXy7ar3Rap+C9rinHvXnMsFDv3n0ULpXdbp0VrJHLwU+EOOat4cwx1O+6h
3EDCy2arTjWXAuROexx/b8gcHZRMf/RVkJAw+Ejj079ibPczrvuPxgITlTqv
LOWTsBShO50dVI6nY/rWPspa4M5bu1u/pZMQXr9/U2JjFS50T15js7fAY8f+
PLwTR0KkqH9Tb2ktFjz5IHE60gILRfecqKL8fw5d4Oc4oXpke752LS7dAk0e
VBpkepCQ7qMk9saiAccFVIR2nrbAPfmk/0VrEtjtAwsaHRqxZlDE5k62BepV
Hw6X0CMh99En3rkDTbiWMTZGe9IC2VeXZ/mVSFBl7OLYPd+EFiumL9yOWqDZ
MsOTNio/ljdpiFkHNuNTgnalxNQClXIsQ9e5KP1KCXt0d6gZWU/VbPLaY4H3
Xqt9kNpM5RSByxd1vzZjl65kdB11DwNJZRU9S5TvbX5/7dfHZhwWEZyRfGqO
rkJxXM6jBBwqiIz26mxGv8e1mUSFOValcW1Kp/L1Dg+HtgjrZizPjto842aO
hnM/ekIpP+ZYcMHd5UETulu/WiNFzZG10VEi3ImAa2fqxuQPNuKD248jtc5R
/ByKEPyhSQCdQNE5OtUGbByWO+bub4aby2ZfsEoSwDonzO7PUY+WdwSv2kqZ
4epStvO1vwuQ86afM/V1FZatlO0+eNQUjTwst2yfX4CPPnqhOyvKEbk1LMV+
miDL3SjYMLYAbExzc+KCJTgaB84emSa4dqXM/NKdBZjjHmI4G1WAoTrFbYni
Jmh37cIbGYrDJc174loNc/DzFfrx5yPGaGGfeKPhygLEciY1mvumoiHdk4dp
mcYYuEmZhaN1Af6OrKStXTiO6iI760+aGqNGkodU6dkFEF4yVblY44nbLp59
FSVijK5OitelqPpue04H9SI7WJ9Y2f12kzHK/rKpGDu3AK+irx2eyD4GSlHP
r61S/vyETfn3grYFSNYs93J2T4YX3DoPB2iMUfRkxz4rSo+Ko8rDn1qdAguV
iMW/O4xxmlRaZhpegB3w+ZdiWj5c8hPOPqBojOI0pZL1zxbgrcmQPcfBYni1
7+WHPm9jzFvY8+P3+wVoFkm93DFUBoUCc+1nm4xxq07kjkBWAh4PRZyW3F0L
U/YcBktaJrj4IHSjLJWbyIJPr7/8roPzsd8rjjeYoIw94+et1Dv++yIyk6La
AFbyz+1ubDLFtLMnz4w4E7B4zWtzo0Uj2Nds2TcZYYo/PXa9VIonIC7l04C5
WhNsd4xSn6ZySrTg+c0bqgkIu6feubDSBE9HeJMs95gh6wuvnfN9VI6ov50r
n9wMd+eT39N4mqG5/LuC2mkC7LndJuB1Mygoi8fYVJphyYf7pV9oSCj5Ln21
Ya0Znm6IXt/31AyTVYJv8G8nwS/+PK/nfDMkKEQketGao8rDqt5DlG/fu75S
z1LXDNEyHz6NU5xx3jSpvkuBBJFFDY72Xc3Q5n/6aaSVOfqtvS8o1aZ4O76Z
/B7QBEcLet1lI6h9zm/bEWNFcY9ej4UpuRHOvIx25so2RxmDH7fLKQ54Jm04
MejTACFDagymlebIaNM9/4TykyPOj7mSeethd673HEe9Odov5CR9pzi/x3Hf
69zDtfDSd9ButMoc7yky/J3KIkExuc9YaWMVbHoifZol1xyXVk9icDE176M6
f/dFlYH8sL94NHWeGv3nvWk1JOwafnep+mwR7HJ9unHJ1Bw/3fjxY9MZij8Z
9nyFdXnwRoo5JGOXOc4bXl+bbqXWa/JdHh7PgPBeZ/3oj2aYda/b7HcbCUfF
rGfXpE9A0Wdj130NZjhfTNdl2E6d/2LgtoKgQJAKejmka2VG6ctc4COqHmOQ
d+jIxcNIu1xwkOOPKeZH37VJoPh/MTrPN/NFBNaufVSaUTPF729fkO6XqJzS
wptUticZj36nmREON8GghhK9VEqPjDh1uVWunkLtPecYXauNUdjg181livNb
y0vrZVfykUWj6B9FAXy/oWz0FsX5G4mrGP2+GG/7ycTPTBiiMdP4GTaK86fT
rB5zFZTj1TcF3cI/DfDv6cWpghgSOjRZD+9hqsNPERtc4mT08QINdzvLUSrf
ud29txxQjz1lf5HW9jBGbSn/l+1EwhCty2p4bQOmFBwxps3Qw9gfzy4qm1C+
vWdpZktDI3418Ht6+rYuSvdFbTl0iATatnuVXaFNWE1zXrTuP10sWB9WvbWX
hCixtZqNLM14G1LrVqN0kMum89xvym/IJio0C4Q34793kCxNamPOalLKZmYS
+hQepd1obMZMz6Hy8hPa2HRqKFfpJwF7zxaaCtQ248OQZ7+N92jjyPK2yu7n
BLxTE5tj9W5GsR1f5nmWtDD22+WP7zoI2BXXVvdotQkP/7F7mP5SC5V8wjM3
FBEQaLN/w7YjTejgycJ/d1wLb74bC3GPJEBZK/a/77mNGHzghsnQmhbu1DQn
NO0I2PbrYMhSUQM+P3A0kFVdG1/Nmbu/P0iA3+VV06mQenygu5z+tVEbDwpP
fo0TJkDBUv3FiGgd6gmWNJns1sHBQ5zaWswEfBb+IG0ZVI3q5Q/Vnj/UwRea
LdY3KV9qraOWwuhagXcqhwuWsnWx2i3xc8uHBbg2PBSzi6cU+VQeBwf56+GQ
dCUL/0vKz++s12Y6W4gzEhIRLJ6HMV1hPlL13gIsFZxYC9ySh2/3Xa82idZH
vRbaNE5cgMbktav6dRmoPygpfbTZADcrq5kOUf4897B9rt3vE2isovDEad4Q
8/oHSgw6FsAtUE7D3z8M682dZ19rGGO+a/BEB6ULaS4GEWnbddFg+ru80wUT
VJqZc6Sh1h+hu/nq+y0/MIWtc2w7zLBpQpVXitq/+bfZnW+ecXDd6bsEz0sz
pGnh/bK3n9KLGiOmhpFUWOPitOysNkea8iHvX5ROJb6PVt0GOZB8Witd2tcC
3wlto4t8vgBfmN9ey91fANtj/sbck7fE91svMOVSPP/p9+SZZmMxCA4Kc15Y
t8SzjnH/cWwm4MWT7YfcPlWClo5t2tksa3wr4mijQvn5DNoXMe+u1AD32RDd
UT0bDF7xP+95gIDX/mEPLlTWQWG2fF7kmg22h+444WFOwE8+oTyfnnqoqtke
ffqMLYYRO87RBBKQNlTV4NXWAMnBAcfEte0w4OBcAW0WAfTLP67JxTaCS98/
wmTUDgu1+HLFWyi9CNrLc35nEzjl/hXZbWGP2mSqmMwdAlTEd3Wsn2qC/XGR
x7/22yO79+2cFx+p/jR3Whh81AQ/Xv5i/s7pgMv197J9Nvz/92vPvMipJmhm
q4+85uiABRHiX3x3UNwOy6Qh+puAO962eSbDAd9LcpcepjjPsGePU2VgE7jf
r+3Uq3FAbwuVZ9NyJFTZimgafWmEHIm0k+sVDihpmzvCqEmCtVLm6EulRrC0
/E1aJzigpXGLVIUZCfumL5nk2zYAY9Na83s9B7x0JNsy1Jny1VkSW63060FD
Kfhf2i97/LbbbrNfAAmpy31no7fVgVBx0d7AHHskJBzeOkeRcGvp3p2LLtXA
wRUrx85kj9wPPvXKJZEg42sinmhdAZs6F5qMguxwXzuj+p1TJCiM/hD7vLkU
Yn9tY1fptcXW7AETuiIS4sRui2ulFoKqpcmS+ZINrv3eEfiI4mFB88EZqfrT
oFPyaMXuPxs8MuopyFFH8VBk9jXXl3RQZ9GhcRGzxrsqVzUeU7lgEVymJVYT
wfL7E7secSvU+Som87WZhF46/cHU88HgQmty7Q+PJTpsm9sQQOmImtp6wNbz
O5HL22aC2GiBDFWS1QbUelkOZI+uDMFxXjHe7E9maHWnoPE0xe13tBEHZPRP
4I6a/ySe5Zhi7dSGYC1Kp5q2tM31b89AEf7dDoGHjfHdu9aJ8DISJuRmL8qV
nMYz04/y3BgN8UFmLZP8/3k+vPZT0rUQZ5O8L4mPHEZdtYCyHko3rS7Vv+N/
W47nWJRTs2u0kVX5Sti1cBLUg84+Me6rQv1j4+1HLmki74C+6GUfEor2C50v
Na7FCcOAOpW36ui7QSvolgPlBybulcjcrsOPX+UGn0cfQvozVbd3GlP7p7n7
pV6vR4UMGqf4TFVkrOucfU5xvvL+AcY/Jxvw2wPpEO6/Snh5KkaDW4bKX74q
Mlo8jfjs6n8t2hOKeOzN1QYWQep9F0D3dGoj/lCt/i9ecj/mmdpdGGMjofuh
rELOzUbkuJ70gIuUR+bPmser6KhcSTx+4/6wEbPerl0FGXlci9RPp5mjeMsr
Yt5yrhEFT1wxnP8mh3ZJ7GxG9wg4YBmx1c2+EYXp2VsmJeVx8ca9QucLBPw+
6pq5/KYBN7/hKO2Zk0feyM+lUXkEjL0WlhJTbMCYxHnOH8L7kf1sxK1nFP/v
bdmzi8WnHuO6iqe/TCri55pLi7t1CDDwve6T11GDgrkmGpKoikfpLz+clyHg
u4bchHxQFSbT7jr3tOkQqhrkXvfjJyDqoaRB9I9y3P/wkNWDZXVs0GTy4flH
cfKHMwNXYhEKZLRDTJ823lWc+xu/tABdG5SX87LzMbhotapiUhe9EmRMaD8t
QMLJ8zVnVrNR10iWlk5QH10ZLNQ7pxfAM2FCIa81DWm5M9/OJxsid8j2xfrx
BXgR8Orwa5UT+MWhOcGEzgTzl4y7Rl5QPl84tkXBJxwdFMIcVg0pP9P8Q0SP
4urdGAu/lK32aN35JkKuzhxVp5Y46aj1ZaFi7IohjsBAf5kt6Y8FFrt1XVun
8oV6yYRM8kw4sN6juZjkaIWjph5J+ycXwN/5XshLuxNQmGKZeaPPGg0nLlhV
zlJ54cP0SaaqNPgulXC+RcAWjZxelF5dpXTn11ivhWY+yBseWtZ8ZY/blQ/+
1mCkdNwz8AEtUxE8FfOf6ZRwxF9DZzwuchBA27LIxHiuBJ4J9xj7hhzBgoM2
V1pVCDgZKKB5zL4SltYiPYRHnXFXnmv7HxMC0qNDee66VYO3Sxo982cXDNKp
kmn2JKA9+q2TuXQtBE1GyNAec8UAIZtdzoUEVPyLDpzaWA83Im83TVq6YXvb
/Ts7qP7p8mG21M6qh9KbIvR5l9xw0JJpJPgWAeb1XceVvtTDxXvCZ0J/u2Hz
L0pcKH+uLMTmNiLeAKVOmgn1iu4o6t2sbLZKgJ76jrAAaICUn8t/7N3dsdno
3K2rVD41ePnn6gXZBlDs/bpnOc4d3XoO/bjIQQKqfmPIWK+HyEOSNz6nuqNV
QGZ8JMVz+zm3djhDnUdN7Nkbav3IzpqDi9IkrGdE+vlI1AP3rGV9nps7yuje
cmI4SMJGvXGPDxl10M51pe2HvDvKxhRUV1C5O4UpTfHDqVookubqElt2w4PP
vsxNHCFh/D/JqsD+SogefpxyANzw9rBXn7035f9TSnPfJZTDxvf3H+574IoP
uK6NrgSRwCy98U0kUyloLhUwCeq54mzkzGXTeOqcAk/j+Mrz4VtK+pq4mDOG
mXcWzlGcpzO0shs1ywGmZ8GXuR4cQY7UUTu3dBJO7EqZPayYDpGZbqqj9o7I
Mr9Q0EH5f7tP6z6Z5Ak427Y2kPbCHlcyBNvHskkIrr5cOMETCX4ss7PVGnbY
NunIfT+HBFbhu080I1xBac+I09V6G7ytuFMii6q/2DBNTldYoMD01K38VSs0
1uGFndQ+TK1KgRF+oag5ua2L3dgSucT4WhMzSXg1dc/FajEe6Tkzo2SpuZC7
+7xsMJWE2tOFN+XZUvGKycTPwW+m6EWMEN9OkMCyl67pG5mFt3Zqn5E9b4Rs
TmsSW2NJOEvDtzFfJw9PGhvejIzXRwv124KKESQ8lx389Gu+AK3tUqf5g3Xx
xaT6eATlw62eZXyXdy3Gty8n34ekaeG3X76q01SeSkKH/ZaNpTgZLDNvdl8d
9W98bMildNmNoV/eMLES7yunmO16dwC1up/W0+lSupNgbL6XrRqz9L7XVPfL
Y+F7nbZ/KiTcpR+NZnWvwQrpZUwRlMEQjYJ9tVT/tE2PWG0MqcWTfS8vRYpJ
Ypq22d3fVL9teh64Ostbh9blHfuu7BfFtaXfu6W4SLDUtMy2d6nDWHZ1fa04
Qew44T5kRPl2WVXTVbvEOqxT/zr+byM/bmOtKY2k8unw4+2SYvF1ONvqnril
jgffnRr5Gz9PgCX7k7cG9nXoVhxUlvqIB73HvnOVPqXmzuC5gClLHU7zLYX0
z/Pj2jGfI4HdBNz49btqu1ItBgxvecGTKoTragmzivUE2BTwh2uw1uCzRmuZ
AjZxzMzQ0xI7RYBveN/S5voqjLa7cmAz214U3R6v4H+MgJHE0L2PlitwKf3l
8VxVOTz+gcV1rwcBa7QHrV1Yy9HD1/KuQoUi7lf/lnNbg4AH0NUs0VKEzN/W
aY0q1DEpKnfjG3kCvqR56d2VL0BjrozEXRe18N4l1yhCnADPwDyVJwdO416b
+y53/uniI9rTe/+jdCH0s/7W/EeZSCtOPrc9ZYC7Jf8+O0Lxzfwa/9vK/Sk4
vBNfhRw2QXrhS5Ej2yheKdoLDa/G4b9ywScNnOZ4hqYsJ4aFgOKHObNjrqEY
dCyd4wXlT+K/yjPaUvliaszr3tbPNvhiy03ePClrzDxkYu5DrY8+nO+tFW8L
DdZ8EmE6tshs/DSwkdo/ocNl0w7LUDD+vAP/utnja/WwjTTUeWYr4/a0psfB
6dGxjrp4R2ypiEwI5KPyi+FHFsv2ZHjlPlzWW+iEjE+ucbwSI6CqZ0PGvvkM
qEhvST9X64L5UiW0u+UIsHjBNMU6mQPcw5v3eT52xcUPkKUB1D1camsu0sgH
E8Uvl9WH3NAirHSLmTMBgrP7rNlciuHM55UPX9I8cCClsvBPMAEDD1h2Ru4q
hfH4/El/c0/06BQ/PJVE3Vv+l9alljLgD84YqN/shVa75fBBCQHXG0Q27fpR
DgxDpWvnL3qh2TH2v0WtBORcMRbloKsE97f6JrdUvfFDQ+qDTQMEuJeU/o15
VAkWl5md7du9McUkc+fySwKOcIUspFhXwZ5b3br/tvpg6QbfAKFvBDCsZCox
l1fB8asddCmWPugnfEOojZaarwJHn/TSKij43Va9EOuDR6fZX3dTc8FCd9vz
P/MqSDscypqa4YNOa+3ehZwkRKsa/U28XQk3c7nLn0b7oCB7nICIEAkHFiwq
1VYrwDs1vbzeyAf/mDWTZlIkmLxLpg/9Ug4rml7F2+mp/ZmvnqFRJCHHse/L
x9oy8Mt7dCyr1htXrZaVeYAEw9LP8mw7S+Fx079nfQJUPWgsRMmUhO3mpQK2
IYVwl3199uIzT1yVPxa6w4byt76DnNo2+RB7zOi41SZPnG1PzWaidKF0N1/H
hGQu9NL3Eym7PfC+eNXFrW4kdCZ9vHLfJxM8A14neO53Rw4tHn9OLxLeO6Wx
iYWkwM6gpEVrWTfkHjgrzu1LApdA/c1TDQnQGHydXOJ3RecSOaWt/iRoPXy0
oV82ApKvZndtonPGqU3PP/+k6p/bXc4csfQAhX6vnO+djuhUTZf/lKozf6R1
o1HZgyz18WdvHrHH7JvrUbV+JNzWOX/v2HFvLHPg3NT+zwY9/1W99KN8b2yK
dGOvVyTmXW5M4Wuyws5nc21KniQIRk5sP6aciCXbH9XamVlg5YJjK6crCTfJ
ZsUF0xS8vqZd1MRkhtwnht6zO1L5iDyY9vtmBpZnjM/sbzfEROEvF9WtSVBm
Mztj/CEbrxzxVVZM1kM2RfG5IEpnhfeu3XFgK0AyZ/P+a68Bc86fvVtBvUuG
C68sa0kh+mV/9hLer4zFXKnZegdIsOnmrr89W4Qt3Jd4C/Tk0Tm5oyR7Hwn7
P/UxiP4pRu+khacTmlKY2Bv1/KQo9b7T4qZBYyUY8+FX44Y6Ydz7QygceCm9
0PozmhVdikElwbInY7iRV220fHI7CWycgt0bpkrR+lvgq9zzrBh4WUA8gvIh
zU8bfNcZy7Do615Pu9e0KCbkE76T4vbnMbU4xV+lmK3p0Fyku9r/UmWd3EAQ
8ISH+WtTRykqJLvcfurwt/8s/X/CylPU/DK0qIVBKRqqv2gvcmXE6SM13D8f
EaCU7X4zvKoEFzUPde2x2YG13HwZDv0EWM8snXz5sBijNFnMYpX5cZopgzGl
jYC31xm7OEeL8Pgf3SOxQmLoZb3paw7F+b2uvO/XrhTinrdxDNWX9uH84VNb
mzIoDiyy8G5gyMcfK2Fp/kwq+HrZ4OTreAKqAwVlGzacRsZZfnovWXVkGSWL
dSIIWN3eumfnnVPIMT+3o+y8FjppSHR+DyBgjo2Vc8opA+/OTb0X89fDJBbZ
ZJLyjYpdH9XznqSgqkzmr4++hphe9d8nbReKh2sX0n4Kn8TQyzNGB2pN0V7x
A8MvBwJO3W9/NXbrOGoUvzuVRmeBB2dj9JjsCGCraNjfvDscT4dx+NLoW6Gq
YKlTog3Fw53vOblpfJC8+/H+xRob/KAhaGVF1Tf9Dkkl3phg1U+hqO3/7LDH
UrsyxZaAMk/hb73njcHIjyuszMsR71wM4t5Mfa5uHaze0PMGhZkV3dJHTti0
ug1eOREgW3nzWbhbGOw4VH1zL7crltYL8n10p87vsvc2n2sMGKCQTKmeG2a8
CUgQ8SPA+OXeII3NJ+BpOr67FOyONao/NIloArafXk52lkmD9qwzf1oaPXEn
ve68FcXhyn9fVd8uZYD640o2plYvpKHxmKnOpu7tfvtAavQp8Pt3PUig0Rv3
zDBHtZcSIP9PJOPhjRw4dsCz63WmDw6XjmTHNBLQ5u9mMdB7Glysexv1nXzR
/NJ/A6+ofjhwQDGZticPfEYjYyt4/PDORofmzhsErLDes/UKyofi7KTQXUN+
KH+ycYmk8mBxC9/9lbV8OCJ84KethT9e4RgbCBkjgH7u/K4/HgUgtGX/5Oc7
/jjz4s5tjg8EBHZZKdI0FgCN7JJJp1AAxsxU59xaIuCFy7M7iz0F8OrVk4hh
twCk+bl9UpqaC3P+LtZt5wrgwO+/jz1SAvB9l7rILAMJZlUXqhZDCoDDXFCY
IysAr0QY+YSykJCeYh6QtL0ATkVMLFWFBeBKxOOpeztIGFUz56Q7nQ9MVSt+
q2oBuPe7j/n//5185aFoddpPeWBeLHU18Ks/2hq7y7cIkFC+vWeLs0AedGUt
dsQn+KM2E/et/ygO7Du8NS8xKBfIY9q/F5b90ODWDWl+SWreM4WOCXtmg967
Su67Zn5oT0g5j8uRUNykMDDclQ5TNVmVjP0+OHc44n0spSP+xxZsGgVSQZ1G
Wa7tmTcOPOj5UqZMwiDNluGN3klgFtLupTLqhQcfO7HLHCJhYQOX1TGjGJBy
z18dqvPAhkMyPk0U3+5+vaDb6xgOxz9pCRaEuWNIs+v5dHUSLgqmia30+APH
e9+bY8puWLP5RuBrqs7BvfY3KNoJ6PeZ+FcsuSCjVXFVDVV/l1Ikuu+hIgzo
dAsn+DhhDevR8DFq/6BdAzu3njXHsEgaNtZXDvjhUUdoJnUePlNHXQdZT4zN
Vg3YbGCHqyE0h69TOSixYOpThXgwhvYq3ZcassYAvS+DIZQfdothybj6JAIh
VPmFsL4l8uRv7+ikOJzFX7fl0UAM6iYyGMW+NcNgp9pnuQokiBr5XvVzTUCH
J8lS4sLG+CiuM0BqLwkXego0RtST8emH2o6+Cm00oj/2ll6ChDcc5Xxcf1Lw
gKfSQ+Zb6rhgJKVeLULd59eBier4NBzojGJnzlRBo5DDdAd5SPhewPfg6mgG
Vp+Ts1VL3otVW9SvhFF5MND7yD/X+ky0jYqMy7YSwVsZSollbCR8c92e+UEh
Cwf42xsmq7lRZ6OW9f/9Bg2D+9fY3CwUojcWSGVkRunSgKk3jCQIFOpbTF7K
wpOdoqny93/1610aDNm2gTq/Fu0TtdIsFGDIN5JtHevfS2dM9qwRkNnMfk1H
Pwtjq6/Pm54f7qcNf36r9DvFq1uFwkx3MnH4n8p4Rf2X/p9G07sefiZgfcT3
Fv2OTLw5V8RydWgD+kicSPZ5R4DEq99iW2QycGbKm6Xl7Q4U9LHkinlNwH76
zzE6gunIeaXlDs3lXegbqaqv8JAAg16DFIfcFEx2MrP/r0IWz6u5Plymcvf2
F6+/PGBLxuA1GZMC/wOUns/vt79JwFc8cD0r+iQWm3wofPFTDWN+9z6RuEaA
VK5u0FnaOMw9OLHVPV0X+7k+zNd2EPAunesgrU00qqmb5p7vN8DRQ2E3H12m
IvzOIVGHwgh8lJJV+VLRFMemV+Q6L1G8/fxb0m0wBP+GbjJr/m6Odz62n7K4
SO3z+06cxZgf1p1XqknwsMIn4QynzlwgYOO7yI/S0u6o65+Yp/XRBhevXIm8
QNVfFRWft1S2Rt3BQwPcUfb4kD5K1IXaR6NkXaY+Vhm7r+7O28R2BG/rivF2
U5+rXX66eVxUHX6cej1H2+aM/15Ml7X9/5yLD9hn/lmDp29M7Y9mVzSoD2w7
SH2vfcP0dQNn3ODUFm1vy0U3lBvZcH2hhwCOz8Pjwy8C4ZvUbWyI8MRGKcv5
tT4CDjep7IpvCgWabq6JsrNe+ODlW4/wQUpPRz9y2AtGQK79j86sR95I/ufB
50m9y5kcnv47NtGgrHbw8cF5Xww4Hdw9OEIAUXnOkJ7pOMR6sLi0v/bDQbdd
FRYUb/2EI7e/iYyFEwGkd2mXP260UAnfOElAlMLHbpfyOHAFrnCh2AB82bv4
7yHVJ+N3AjPMI+Lhcm6HY5fYUWwv+yhR+f//f8p+iV6YMQFyvz1m/XjtKBod
zZFwXyDgwgWND6RFAjCAwebovYHYoNh+hn2ZAF4Hj8h4+wSwCWcL80sLxKJv
N8eaVwn4oW7hJsGXAMZD+x+SA4HofCahdvM/AgqEVdY/18WDls3+/SemA/He
82CrnXQkrG89xa/9KQ4kiA7RO1OByN9opZ5LT/m9w58yFX/FgsJzvgsdGIhe
ivovJyj+2wLT/gPPjkO1v9DO8KRAjF5+NL2+iQR1zl8OuxJiYHtArUCYeCCu
KF+++p2J4q3uhWohmmiIvhRseqTtKG7uucmvx0rx2fCrRVpVBIxx75wZDQhA
6fvd3vVbKV8q/4bObzAMyqLGVD42+KPV20/zw9tI4Hy7UKTzIgRUE1nPfhrw
Qz3xHexXKD60vaB5tbUrEGq3nQptvu+L5Y0zhBflA63cOqv5OvxgP3PpMw70
wZ53EsKzVH2fVSWheNELGFoT693rvbHpQOq8FKVTdzanhCW3ucFw9JOaF+Fe
yKklw6JJ1Z9qCtd6ZDqCzqde9yklTzwpHjIlStVLTcPedH2zhBeONuuM393x
+L8MiQlq/0HFycpzavpQlDzmvNzkhjc6Qvf8/zzKom+GtnYrQujsyyQbc1fs
4AhMvUOdf8Ve2zCvmQl39E0Jjf9wwmTJTmkGqu6cOvZzV4QqYkPQ7e+HHZG1
wSVAlLoHt9zS5DO9h7GoeDd3Ur0dimy8+T+Ozjsey+8P46GIJMpIJSORnb2q
Y2Tvvffe2dl7Z++9E1FWKsUnI2kRlRFFGpruR6GB/M739+/1ul/nOefc535f
1+XluZ8uPrxvZG2uDxd1DOCN21XS5m5T+BWazbGGOfnQv67kpp0FyD1xX6Ym
NwAeW7L05n14PvctTWa7rUH+5U3y6WVtGNU4yWKK7xfjiFKOtZYdLNGmbF9g
Voequ6fGd/D9/etFGxyWZw+ho8eb/MuVwY4mIb0V81ZoF/1DhhMOMGFt7n+S
AoEBf+8bB3xOBNqt4hitHGD3okXouUZpiKsN3XdyDwnxR5EddEIOwPe09sAd
YVH4WM31+S/ms32h6yPqKXtI+fDpImHDC3Q9QrPL+Hw23RFb5+KxB6bxwgfb
j48B3Ri6ReAeOvdB5L6Pny3k6p3/GiVAB35+FpNMWL+1KlUrxmsNZJRhrac+
bvRPLtLPWuM88yzgkX5asgU0icZPjV572H9858fNTPxcrKoEHXKrNYVjZP38
fmo3+3PN0pJb/hGI+uatswGXjED4yvVknsur/ddfaZQyYJ07oMi1w1ofyiLI
QlwnqeH252+MQ9uYM3mNbEG6mkBe//D90VFWKM4zedSHdccQXncgOw+tY9yp
24EnYTh28ewO1p20l/7m/JKHV9FlCRx7T8ONOIauBDz+1rfAly0jpyHG/oXh
dz0pUHeJPKOK5xnS3No/8fEIuNqF1RfFn4WWxdduHHhd8sakePfBf+fs7myH
ZD9QgoHFKuEerKu5XTr6a54TvWGnaUOiajBpOhlsj/dnrONu2nFRQbRQsc7y
+acWUByTnvuPA5wOtRV850RRuz1ZCEe8PkSQ329axPp7sdwzOmfE0Pd8EWp2
ASN4dLX/bSu+X3nxsVXjf06jIdkHzmUrJhDw6LldOOZGZczYnupxftxjWvf+
vW8OuY8Pv/7vewe3uqJp2PceR2QLiiYBLVYw4Vewfzc+J8y15jVOHB/7C+Zd
bzAW2sJrEnvXDax7CN2N+4V4IKo3kPcC2IPGUaNOI3zeTluzf5+7Jg2XP62n
epx2hA0fcd5ZrJcpeb4vPaoMp/plo7dLnWB82ypMEZ9bhmeL1NrntUDSiOgY
+u0Mzp1GfqlYTzX7W6xzxBBut1LT+Gi4gnz6qEIL1ntSawPqP5iCNNs+6if/
/R2DyqOpHutz9yuS81atIKwifXm+yx0Wbx1e8cf63di/k8sF9tCCYrWfPvAA
OWqlfwexrvuir1XvjBMoeIVnUAx6gs2//V5JeJ5Mz/ev57xzAbGWP/ona7yA
09gwfBSvN2QoXWMy2h06el9eZrP3hkTuAwLzeN+cte7ZbJJ5AZvvjTNcu3yg
ftNWdgDvM9VCKNlbex/ILFd8dzPaB9biRtjD8H15uSNO8s/2g28LAwI9r3yA
q3iOiRLfx+SwQ+9W710AZzVBTs1DvmCSqErrhc/JjQrfO35F/vCaUv3Qb15f
eMVmom2Gz2cvua/hlFIA/HA4e6HisC/ITh6xL8H+0iQK1UIDAdD85Fqr1wcf
iKfqO1W/TqDIM0We67SBcI+X59xqlg8IPMwuj1/FfXP5cpo0VyDotnNd38/s
A+dtf15T+k6ghk7TqJLtAOAgM5j+GeENnPf1pEnYB/W5toVdKwKArcVC5eSg
F7Q1f79X8p5ApjMHrzRs+YNkrcAXny+eEKsm5Ka5SCDoyqw4zOYPK7+aWRY2
PGDNsab50DyBXr2WMq/+6we0mqc+PsQ+3tabhShmCGRxI+iStrwPHFvlZrp9
3w0eUo6o5TzDvfX7oZ5YdVd4f52Hc1TZBZZf8tZr4l4/I6G63HXcEd6kbVC9
/eoEj4KDR50f4X6ncvDxJ3or0P2e+uxtqiMk9AlPf31AICZrunUhNgO493Fd
Yv9xB+jeu5/lG851BMx+ipmTBUGJXWvuNnZAW+U4dmGYQNprh3/s5xdHEk3N
Q3aR1nD5YuWRxCECJbHzyM9f0keu72zsrlVbwKSf+mNhrLtH/X5R22WN1hmn
89aemkLYkwV0EevflH+1H8xxRvrhKnu69xvDzS8cHAZ4fE21y6epfDxR6gd1
62+5BpCYn3b7Lp7PgcZ4ckGeC4hiQnb5up0usH2x5erD81e44zn26kAgYt1j
bRs0owEd4VR0Rni9AjacwfLfglHPQrutaLEKjBn5D0Th/VGRuW36uusikhBN
mHJpUITX5K408jgvkS/W0KnYRaDWwrKtTwfOQGTwXi4bnIePe59QmOaMRSc6
up8z3xYBWusw5p4FAvVdZ4g4JB2HvrXm2f9bOwnztX6rabi3XmxdErorEo/o
6bIM9KaPwjRfzNHxrwS6pX3yZvzeBBSuuLhKfoMOsnzdi8Nxn81lkNrQ7E9A
ujGN7zjF//ab8tcyxOJzu+vMRJmEbiL6K3rB3XJnun95bPqPOz7/dDFp8g03
EpFXnTbvba7r/bRXr/Wdxs+X3D+1I9o/ElFB7ZOQVwYf+6VN33gewM/1EavM
SAnyJFSUbJfMfJYc9/HfVVvYT82Pr0cMvUtE6usx6wzCh6AtZiybwL4sMZIv
NlyYiOTvUv797s8BaMPl+ALOD6Wcyjw+LInoTCJdeBUDH1CsZ34dYCGh2NHl
ly7uCUh5jePLdocobIoSPlm4N+1NUtJ+nBqPbt9uaq1slga1ag9qedyXxfbs
rxQPi0O35ngG9zidg4ETk/p0PCQkxULXXlkZhUZ43Eq5SaqwwVyryoX72ksO
41Exv3CU3fTbL1BRC9jEtdlWBUgooJN17ykiBBHynpfSJ/VgQFXKNECYhJTE
Px4OOhGInqpYGA9qG0II5cU/ladJSLSvyuzDSV/01HW+e+e+MezoDF/zxr37
aNeJ5PZ0F0TG02FTqmcGZ27wvZwWx/6upRF4idYCmZuJPNr93gIqU41LZ3Hf
XBp37yw0l0XuxjpEZZQ1UP3coPaRJKEq13n3uSca8LEts6Kb2Q6kmcn5s7DO
xu9N/wjZQ22jOv3TF/Zg+slhlxzWU5aPCP/k9oQK+kfxZocdIfr5RoMvHp89
jdeYhzIA7KUFrWWMnCCGKV9TAM+njZp5MoIIgQSB2uCheGdIDRxTuSBKQq7L
6kZfByPA+MOssnuDC9y/kkOPREhosbfLM0AuFih1snbduuEKDyoru5P4/vu+
ZGNbQH0iyEn8FHKvcoer4XJClHj/+2v+bnpeSYbS0fKg+/4e4Ns8W//fewCY
vKJYrienAq3gF/Vngp4Qh9r3L7CRUHvra0oj2XSQsSugPDDmCYF5r0xUWUno
+fIFpXt3MiAkvAWdN/aC7Wx5LXtGEmq8cqVqgDoTliuzv17o9wK7a/SXpPB5
qw4cPprFngVeYTTvXu7zBhcize85NQkNPG6OmfyTBaFugS1r8t7wfP72d0V8
zsU3eRtvF2YD7CfLytb1hlx5N9qjmP+8ypYBP0nZwGJCMDcre8PB25ZaiZjn
t6IPSb/enQOsfxqX4o96Q0blBtMMfk6f9r38Mf0mG9pu0S2XT3nBp33uZiL4
ed95JkPW5JcNkhwrp68Fe8Gh9TzR+jHMvZ0nd5nuZsEElzp/6x9P2Hv95og2
5hjDa6fKxuFMWHCrC+1zwvdzI8+nAffHEz/n1qkOZIDXmwNZbYQ77GYkvsbX
E8i5bXbXdeM0eE/puTnM6A7DozPlv0oJlF9e/uywbQo83Il5Zs7jBltFN9f/
phIIrZxdb3gYD0XHslvXmF3gvfmqZmccznvmRRKd4rGwB+maKPx1Ap7SizP6
EQSal8x/kr8UDnfsGkaSJx1h79X3ton+BHLLTD5suOIDjPmDZmZe9sBM9pBh
0wf70YC23zNZe5h79CRFRtAW+sakHwx5EWja4krR8O/TIMQ4kFwZbQWi2k+a
PnsSyLdBrF03wRwdV7kZ8/u5OczIbi8G4etrtL4UsTzA3P5ktWEkZgputjsp
nnj8iRM/fkY0BaF8+6PxVdVGAIUH455cwH1c9Gya6FwEis+cS63mNIDqcDuv
0mACUQr8k08KiUMyq/uqZyJ0oKSgMvcJXtfgxbO3Wz8kIlbb0bu9P9UhVujp
gk0C7qHRp9pVxFLR4JtQv703zoNbqtMbxUsEOheRs3nZKAMt+U3eU3qoAB8P
WHV5FP33PbvWG1aKWUjHL2QVPyDwg7KFb6iWQLKsAQ/Kw3JQjtOFAw9ZJcCQ
uR1kcN8fkI98cKM9F3kuCo5/EhICV3+Jvo47BMrJtc7TGcxDPrlVCTPfToD6
z1yDg9h32iXvX//dko/quV70fqFhBXJ0tVd+lkBWwQwHy90KEO/bN+gmFy1Y
B0oG037G89G9leu/XoB+0FqtXj681Z/t9DzEHvN/7eM33mOGhWhLAV4IPib6
Ix2Fb+/F+arCXWWgKaIQcdhdFvs68rOf8bdifsR+Emo9ZB1ZfKEQMVE0v3Ga
oYCvr7znfjKR0LkATu7vIoVI9a5cF+X8QVD6fpHK+jjufWF6nadvFyCXJdOI
ghZ2eJubx1uFOVD+xKshhLYAFdqs7r129BTsKabnbMBcVRAx++7Mn49u/T0i
Rs0sCjGeB7+bSZFQYtpTXSnGPPTsPeWQ7oYUvLaWe1V/FvM5oOXzncc56DGp
Kz6w+iw4Uf4uatfE/X3liC+vdQbuH683g+JVofVxF4umPgn9yDzx4nl/CnJs
Sue0eKIJboxrDUL/fU9hmDLg7VQCMpBjJJka6sGDsfmb/73f46vfHo39pSHo
ZvZzkc8XjGHfF+L4P1sSOnQw6N/cpidS26q8N/vJFHjJl/uj7EloK6LoF0W8
PjrbO7xt72IBQikSDrQOeJwlqorCChMo5UhufLFgBQmLEx6N+Ppe6WUhjV2+
wDSd1lJgYAuhoVkrqnY459tLJrLlXoTSx2K76S3tQaVIaHgVz+c2e0KF4q44
CON+VlwQ6wBnBXdimy1IiGswWyukLAkKErgmjUsdYdef90FBeF1FBxJfddKk
g/d9W+nwWifYk7JZZIX34cQHaFg4nwUiB4wSnIqcweaqg4cn3re0rW/NPcdz
wS6UU7I12AW6GaafX1PGvkYXK393LQ9EpkwZxM+6wocTHBsyZ0joZNEQbXB1
ARwiaOPZv7pCg7bGzyPYX/aU7/bWPFIEIzFbwx+i3ODCbYqb7thP9yjs2cvr
UAyvGh4vaKy5QUiWR4805j8nOQqIu1ACNFlcVg467jAyG91WdZiE3oxwXnRW
KQVi/OmT/FR3kNsByxt0mM8j93WDX5fCOAufQlmjO+xa/idbgLkd/tq+7JdU
GehqbOVGNbhD7xffmCtrBDo6e9xtXL8M4k1vzuYnuQM/xwMBNpyTg1/Yi8fx
l8GjodDtSA13oA537Ln1mEBZzvXip4dLob7lYs7xVTeIzbzyqPUmgToC0L+y
46XQ+yrpWDVe19v63XT8DQTS+fPhGbN8CeRFz2/Yk1zhZNxWl10ugWLnJOrT
jhZDTlsHbGm6gnTCwpGIGJzzixRlnQYL4S97RrN8tgtIN5zzb/LFPcKp27VQ
rACCj72uYwBnKBouejmpj3PsKoUPV1QO/DU3pN7zxRHumcSXHzlPoEehM3Ly
cAlozXkzr352gDv5WSq7ZQmksXD94znpVBiLizpIem0P4cdi/vCdIpBW/HGh
4IlIIC9vtzSxtgEDz8N9V7hw/pSsVxmoCQBDK4F9o6esQOStRRk9O4GU9WN3
HbW2h6M8RZ/tf5gD++Dj2v/+H+DFi6WG2HhltCfs/bsXfaZA62RPNYp1g32t
hr9UPVHDb4qro9nGQD7stZ+bA/tX52VbmRehSDCMW+mhtyHsz2z7EcdNIAmp
zLFkyTgUoEbx8ryFPrAH+b97zU8gyQ/UDVLuyUhx8WceVZc2WOj9+C4iTqCf
tttxPiEZSDEtkez8O3WQ6jH563UWz/OClqgKfw4qnLobQa+lArXPYCROA/uU
e59kdkQeGg68qv94VRGGg3g/WZsRqHT4rl1ccwFKEnme33j3LKzE3nr23pVA
8q8zCm5eK0JGXh17VoVkYHmqa34rlEBdzlrje5NLUOqFV08/K4nDK5h2TUwn
0LjxPs18/jIEDtSJXvuEYfKL7wfTKpz/e3jIHhaXo7M9G2dE/vHAqV4hBu0u
AoVNikdGPqxA9O03na97c8KCPAWLzEMC/ejjhu93KtHnrbdxPcNH4A/rz5df
cf4vYKI5O+1VhUbP97leG2OCp+4rfJK/MP+f5lSET1WhHDJG7mu7GEGgTKbO
D/do1b0CTG1/qlDd4uS3v9ZMQNvUnWbx/1yteeLd8yoU3MnvGv+GFc7Ras/9
l5PHReo05Z2rUMdHLXHLuxxg+boq7g8/CX0j1RWntFSiR9co6W/u4wF6+hs0
wZjDWtbtmSZNFajp8PPayHFBqBP+vJGjiLlh0iG8ZlWOzA8XOOyNEAOFF4r7
T2uT0JB076PQR6Uodqal+bCkNBzdu6mdjPnWUTzbb/u2ELmV8/oLSCrCLy2b
XCp3nCeV/70azMX8d9WYWnU6D2KXOokaPxKKv2MRSEabi4pDj2ZUjqoBy95V
k+EIEqIN17Op+pqMnCkUOh7T6YFYuM3MqVgSUvv4djnqQywqE72oYetrAONF
sbusErCe3PCmSD8YkV1Si39pbQQ/fz8t00siITgdgt7TOaCGKUOeUh0T4Llw
8fU/rKcdazLzBAOwLDczCpY3g9WfDJecsT7rdk7oW6A/3C4iu6LCaQF5gQu0
sXh8nbQgYTKnaBB5M8FF+dcSjj1U9TPG8+GTtnHuzkwCibzXke/uWUMTuYDT
Jzz/EY79L3/3ZcCp6cbLmv6Y/9wRnKohJHQpbXce02wO0OiPpUVQ2IMLU4Nq
BN6Hm9LOTB5t+VBOLnZ/p98etF3/Vpe4kdCrnWbjJuMimGX7V3nBwwEi4lO+
d2CfgknhUorREtC5yBV2nswRwhe/lr42xj71+k2UGlk53Do9d0QoyRHKPOU8
JTD/7epHYt/9rQAFRnahI2uOQCMxzjtxjoSEteIzt65XwbRSxG05HSdYSxdU
fYZ7jRW9p4Q8XQ2Qv6mv3M52Au6aN8l62N/pD/dER1XVgJpp016Gu06gZalR
6YNz+4vmt3oxVLXAnWjM6DDhBG/0Dr/QoCWhz6d337ZXr4U732bzmJ45AZdi
vRfVPwJdPh1E32RfCxo0swLZt5wg+FRZYPA7Av2Sp2WX16+F2v7DH50ynGCM
+8j3o/g5ymn+puTKUgshLXflrTSc4DmPc7f0dZyLNmvbx3pqQG89ZcrjpyOc
FdiapMA5zUCDdytApAam5ezo29IdwWD87L7bUQSq3xXNrbmnGpj0Txi60jvC
hGWEfybmwxnpyhxq50qo7dR230hyAAvPg43WZwj0jtdur51lKSS9rUutVrUH
7sZMzS4+AqkeItdg2SyCZK1s2nk+O9hdSGOyeJhA13dPZZq5FsDEz/feXztt
oIf+zRPN7RXk5WHh6eWaCZa7K11VSywBHq/WuP1cQWQco2m/2lLAPzthvJbF
AudS4ZHEryto3Tl4YmMgDqpfWLT9yTWD3XpH2Do/rCBxjwjtGMtQWGDZ+sFN
YwrTRb5Ht96uoOQ7LGKdX10gsIYpajXeGHhiTt/zWlxBb0blPc9JyaLEvl5n
jh1DGOw5lkaJr5cm1ZFlGnsjyRMfMxzjDGDk2xGPsXcraF5XSqb5ZjhK+uRr
ZUKrD67MJTDwaQUpt3jx8OYloLqKSqOd8zrQy/tAf45YQQ/KT3FEt6ah9FGL
xMpLmsAT9O3cwT94Xdc5snWqs1HaxEkq3jU1oKzY2m25m0BL2X1dBdfz0HEX
EudOjApc99wKqGMgkEWtYpsnzp8HO/tZVCSU4VlhZ+s09hc2a9+uFtoS1BCr
0DzGqAhrB20FlkQJZCa3v2YnugyR/3GTUNE8B4Jqf9ooLQgUuhQiWTxRhT4Y
XZwQHZKGAt2ksgXsv3RUDGdPGdcgzcArvqw8knC09vzwvmQC5fa2itJz1iLN
bG7qkW0xcFuZYHDEnHfUSmFOfVqLgkPFay7piIK4wNqZHpwTuDXMMx+Y1aGw
bJeY9yynYdWmaffsBP7cebGpc/11yOLXxfd37gpDmby4Z8k3fM43StwqdurQ
F4O2m+LKwhAqcmB7gYKEPrXoe08eqUcpyrqkxEFhkLv6JOcSAwlRf43Zd+xA
PZq4+DNvz7HTkB1rMyqJec7SLGxNPo/HoQlLytETBXqaJy/6BUnIcjNuyT6u
Dhk53tLJ+i0GrvWrUTRyJCSnRR7osVOL7HTiGK4clIQNGWHXTVUS2u+gYNZk
ivXxfVapJdIg8zbAKMgIz4fHKZsstQad63pn/DZBDuQNJyLNMc8H/l48epGv
GqkQFCjk6VkoWdGN/hmEeaX7S8Upqwy91e30oWhTgsxB79fB0STkI8eSErNU
jIy8P/SK3j8P1ff3Cm8mk5DxS+Pr5f8KEH0XmcvaH1XII1/v9MnCfaTiuMv1
T7mo+5N39isVDThYIErdW4DnL5qSmK6biQRvTw/K12uBRLqt73gpCZ2nVCt5
GZ+M/j6AQTVaXTgi7LJTXYl5e5prMfRvNLp0725bxll9GIse/M5RQ0INMdfp
lsouoPxtl5U3QQaQu07XollLQj3bHbki8gpIy98mRKjZEMioa8lZsb6WLvCn
4KwH9IdKCRZNG8ESU4hkRjX2zWdkd/ilIiDytvqQ3rYxRFF/WKuvIKH7tUvm
DWOJkPXsNksHiyk8Sty09SjBOt3i1YLZDPhjkkEmy20Gn34OL7/PIyH5Byl9
X0xygezDpZBCDnPY/YVZ+sQlEmqfPTLyu6wAlGwkZpppLMCcdvoaH/aRsix2
zr/lZUDp+Yyvs8YSVjqYrFn9cV/oHnt/S7MSDtIvHqjXsALh54H6R1xJ6NQZ
DVG2O9UwQ/1LTuuVFZDTiUyoWJKQ78KHOaq1Gvin6hT7wsAaHJpzH/bo4H1r
vyxQ8LEWrL4mmly7bg0PJntC0xQw501Lsi276sCuuun5pZ/WkCe0j3UO+0Kd
u732gnk9/Bz6OOHKZgO9eYdKHnKT0OULJ+/unqoHfv8g4UAhG6DWmj4TyIx7
oorbDxr+BhDMb3c6yW0DxTQsDhs4z+SxnVXPMm4AyoeWKXzkNlAyEm+49APn
7SyuH4kmDRBSOj9pN2oNXHt7ksincK6+QTYkL9QAtWw6z6dDraHo5TWDlNsE
4qqWVjScr4c21hTbxwzWkF+uN3+lkkB2dfvEepzqIXWxxr202ApstHjZKuMJ
NDfQ1F81XAeu30Mm79FYgb6c88yoHoFoFmlN+VlrQVk3UrYELCCSz1U3WArn
0r9hNEqr1WD67IyW2Zo5JNo9Etk8jnt95gaNsVslvCzeELI7ag7DXulfjDZW
UMRmHXNobjFwMfmca9EwhZ7C+s/hmNtcMQL+C4YFwCB8n6XBxAT8hXwcT0yv
oKG9Co/+fciBbXPGUg0bY5AryGH0GFxBmr1nJY+jBHjysc+5290QmA5z+ore
XUHcskKFyaahEKYt6L94wQCiist9J26toNZ1ojX4oR2caY/rj47ShxF/tiAD
rGdmWLp7StmihXc8goc59eBTumNqd+8KOvrNiTNqbyhyjZ7te2GmA9+E6y1+
wwqiLOKluyKcgCo/p4TcrdMCx4Uz4kyjK0jkkq9I8Y109PDnwx7WPZogP2Wz
sT25gi6Spb203p2L1E88+/0zTh12tBQP1WDfefr+B9ffjAK0S2uCkfaYGtz4
t5DwjrSCbMn7Xfo+FyOFGHmYeakCkXFaD1soCPRF4N7AGlM5YvptJp3QcR4q
a2W/T2I/7dt3RPg0dRXq8rrI+b5dGbjsM9PETxPo6w7LFq9tDUoUyb4U+1IJ
ehc+T1fhXuBVp3Fcs6AWcZ7hPZXCoQTH/mQ+futMoIWanCtT9XWon3el+2me
IgSrzEoPxxGIdMc1+WNaPXLTV4QxQUW4aPR5D3UNgch+JDnPKzegHS6lW00r
CsCo2BXhC9gv9KN++ow3oCqThmSWGQV4RTNddA3n+bgTc2pt/I2obSuoNeqT
AuwLzO1Hu0hIIlyI/6BxIwrVPsP16rgiuObykT+iJ6EZqp/sCZqNqGvmMfVY
mCIkeVPy6XKSUGe83IrN/kY01R9lVflLEdybRDTrRUlIcumqXkwF/txwi+ui
RUowRMH1uRrnc9v8xjyN3/WoJEFN4biRMlB5GXocMcB8GMydaOasR9rNdEqN
Aufh6e/ujM+Y581PBC8ePVKHxiJlyvuPqcBe7bi19z4kFNVb+aT5XQ0iq1ak
4TihCieWPr8bwdym/Lplz/2lHD13Z9+Mc1CH0j4BVtdczElashvRKSXoZvfb
tp1cDYiKPEHbUEZCT3dmkpSWClAUu93B2VFNkFuKScy9QkIxFNP3Q7+mYT9p
6FyV1YHxDxTGzG0kZKQq+147OQ4dssjojPTWhf6Oa9IfrmO919wvYd4fCTFx
sB4u0oP+Fzm719tJqIi+6GOQIhv6/DKh9DLulS6f7r5UxDqPZeHBtr8XgCBv
GwxY1IfxAWB/iseX5RFgKueMg+6+A3abNgawwvmypbKZhPqTLq69KksDeeaR
nI1nBhAavD8I6knIc5AUxPY5B86fmTqsKWMIxIXAEGXMefqOuitLMwUwQ9y+
RpdvCHLe+2xRPgltnpkZtcwrAcGkW5p5i4bwwF6a92kqCXWlvGB/s68Crv10
s7LgMIKXgSVtNFEk5M3opFZ5phqeiiwtHzc0gpMvvgqxXiAhch8+Chu6WvjC
vHnlebARjCuW9h9zJKGPM+yxbYZ10PavWKAiwwh+DN0YlMd+rT1Cu8/GvR6I
B68Yx/KNIKCK3apKmYROM50aZNZpAMT8tvFblhGcamOe9RHH/u5/+y/TTgPY
fT9f0xBlBOb3jCVfcJHQxsnXqyejGuFCrNG1B/ZGwGMpkbWJc4j3QVb76pFG
+Bt8KkBN1ghexKxe209GQurKypLOc43AcanL5vReI+A3pFd2W8R8vuM8Onun
EQTS7QIbxgxBYMSyhB8/LwrSTQ/fujfCw8GFfVOZhtD7b1CyE+erDloH5cl3
DXBh3/xtcjVDYC/X9VSLIVDhzYif3sINUHeGzt530wCaTA7FiDgQSDzURGFK
sx56LvCk27YaQPKhvI8JqgRKt/FY/6ZbB1mHYnsz7A0gnCOP1UOIQDfadEOk
RGrBW3/kz6NDBqD9Uvhr0S4CtQXdF6Nmq4S1rdUL1hH6IOQ6yCf8fQXpPn0d
dpSnDBKf//gUJ6oPN9FrtZ9zWE8TdM7aLgLvM0MrN1/owd+OEM3Qeyso/agV
Z+vpHMwLKT6PMV0Y38885dSzgoRoVhnviqVBfECNEZOFLsQNH0ifvbaCTiTK
m8++iAO5WR+1xBUdIL0kH37fvIJ2P920gZYgYHM97dqarQNfnWQ6M5tW0LWK
4VUeBlNgfZPvZXlWB/T0F41msH7fjGeu2coJydzJsz/9WxtzZubicAvm6q3Q
6K7xi0j/t8yrhnva8Nrg6T2d9hXk1lhrdmcpAb2haoglL9aGzbRbpV7YFyIf
c2TelM1AJ8hOzbtFaENq8MZZhqEVdDjJhSJLJBf93v3Y7YGPNsj6OXQKPVtB
U9NdyzfqCtC2RMHnZaxXjDDev7qAe4p8+5FbRDFqeeR70AWPQzp3dX/A6gqS
MxoyO0lfjsZnstzbC7WhaX6TcNxDoJF7IhtD25WIYko39uBdbSjsiK+zPkqg
f7eqqHUsatARIZPU1u/acPbq2d4xbdz7onbmBtvqEHG+dcnIVwcSp6nECDcC
Gcn3xDXW1aOR0KfRq706IL3lMO+eSKCeu317Fy80IKZhN9Pv+3XBOJ1Bn7IO
+0KqkKo3cyPyeXCl+4GLLnQmhvZm3cM+nh14JTW3EYWr7jz8ck8XtISKT41g
nkvQRy33Lzaiz8kpNNfZ9KB8QHbBZ4dAszd2V3whv4yMbrlv2oXrwbniZIe6
AyT0NnusBP1qRB0Z2p6KL/Wg/UD1pwSc2+NHFub0+hpR4yvtBE1mfbA9q2ss
K0JC383ff6Y3aUTjIsdO6SN9uPvXk6EG9/GTr9WdFvsbEF33gMussz5w/rSL
LsQ5zeqVfW3KZj3KkP0gxpysD3M8lKq/rPDzfiyT/xxtPZJVefZbsU4f1AmG
e/UeJOT8Zm2s5UctUhETHL98Sx+czatNwkNIyIJL7Py79hoEvXaNNaP4/Bew
f7KKJ6HJkVtyL/KqUKaFvnrNhD7wRjfJCGSSkMJPflrT6HLEZpgmJvxcH/yW
PXWeFuG+L7To/IW/BCXa1zF+f6IP9nf2P+fDOXnRtG/3p+oCFDyuuruiXx8E
3F1DBS6TUORC9yOtDznIjDpa8fAVfaicMpW/dxXn6s/0rqpU6YjixUSCbZo+
HPuRcHsW858icgKWqeJR+Z6yoQxHfVgUJ+x8Okkoh0rDO74/EPHvbIa8FtcH
LpnRsqAuEioJCFpKp9ZE2TAb4bipB1q7xIlv+PqZDbVWznhPuPtI8A9VnB6s
dUvumcF+0XqM7wlPbRTMWNuOL/7RhZWN2Bp57Bc74rpdYvPJ4Km0zGjppgt6
0xqpnNi/RsbjyFLas+BNfHz9occ6ELb43bYY94Xjw2ZL7Wz5QC/oavqKRwfu
LuV6XsM9Jc75znrfjSLwmu3Or43UBs8HJvoROSSU28E3bXS4DDTsrNQjx7Sg
sKpDuCSchF7WN5/ZOVADIy7Ng6f8NEGpYkqH3ZeETlwcPiFkXQtyy8gpfFAD
hm9WjD20J6GOm3rbP2PrILN0dmn8iAawuLp+vGlIQmoSNQICkfXQb8Od7R6u
Di+XSr7SnMf8p7ErP6zdAJay0xdD3qmBfqgv6b0ECVWJFrn4Ew1wvUhynsVc
DepUGx3cT+K+ltb82dylEY4/tTxg8EoVFHUzWm4y4X5aPJZi29YI7RZOu6m8
VYFhvmRhbQ8JMSoM8oU/aIQcegr3v3SqsP8EfczHz5j/W1vL1u2N8GDw6ZVg
UIHW4fsfLUYJdJq8bLHHuRFa254szaaowJVNc7P8JgJlFHjJrH1ogNWlBM1O
DxWwGvYze5OCc1oJr+2qZAPkvgjlVnFVgd5r9+njPQj02dLi+KppPYhEftub
G60Cv9jpP97D3Jhkoc3L06oDF5LBV80uFfhXfZ59RpRAB2i3jz9groXBMe/x
+d2qQFKbat7BOfNzFKVXbmg1aIlEM7sEqkJ8p+oXD3Kc60bt5zgiK+AfJbl+
zz9VOMOlX6G8soIMHg9JliuVgvKvqQizy2rAbbre3zW/ghQke0Z6JwuhRTHv
WqKHOvh8Xkqbe7qCGKrzB5Ik8iAJSdCeVtMAK+8Bj6mBFfRRvvpozOIlOMUp
zUBxThO21CzJejGfhbJdj/YcS4KM0qWT9tpaEHT0nlBR5wrqdZ6guGkTDjQG
DyKcL2jDli45bfD1FXRLmm75WK0znAo8KfulSQdOWevvWGL94CMlvoeCZij7
1LU/6SRduJs70aOKx9lylBntmAxGRTo3zSZO6EPCwRkxUfy5DRf4A+sm4lFl
7MuLfC/1QW8r9OF+PM/pzftPdTLT0Rb5mvNQugGcav7G/997/CbijTru7MlF
3l+rUjeVDME+vsBVF/tmwKbyyuPKAvTzV9ktli1DUCo43CGG/ffl4k0rctly
lFVQz9PtYQzZA1F71ZgJtOtO+86mYBXaGJp74XnEBIr9F4kMYezj9HeiXvnU
oJq/dYrhwyawS3D24Jg6gZbrZnt1qmvRD8Sb/sXFFHLLFTdf4JyfLMx8YaKp
DrFf8Z8Z3jKFupANDSfc+6TsXzS1JNYjG9n4jcMpZrBNMOySrsV+lHilJUC8
ARUWUJhSUJhD7Jt3r6gHCHRlI5KGo7MBfQh5G9flaw72nleGc98S6ImxW82B
nQZku5LwOWDUHGYKH7cp4FwUzyaqvp+1EfUYRRBX6Szg3VtB9WGcoyarTh2z
xtczSJ5hX0UW8Jf35DV+nLte2HR+6+toQGr1Xm67rSyggSxJTRP362LL181h
pxvQMn3M6Te2FqD9mNriD875p/ckBdhH4jz/MZirW9MCVOfWY+hwzn9Mtbj1
rKgO3Wksd99hswCr/kFJB5zzZQLE6G/H1SLmrXUUP2MOIzVdFo+8SehfH+V4
AapB9qU1Fdrh5pA6mtvHHUZCvYeXZacvVyL2oyLdgPdhxcu/UyeRhLJ/vlor
iCtD9X5+KCfYDMp0aPJOZpGQoQxHaihLMYpsuqz94JkpDE9sKeRgX3Dp/NF+
0T8f/VRJSRxgNoWgKb3LwZUk5HZKb/uWWDYa7nYdF9QwAfXaXMbBOhK64KbD
wC2egpLmhUx2exrDgKp+rSv2C9Gfv+IV1qJQU0PmYnqEEaz0HHS3wBx+l5e3
NyTME03887irHGsI0reLegqx3vu+4+2ZHG3Itvc4/SXcAGKNJjmONeG+UCBz
MlsjCF5eNx5z89UHpS7KyB//vT+wuU31q008GNe6lebfwZzXph04gf3LMvPo
7B+bdIB6V1evEm1Q1ZueghISqrv/fKuNKhfk/j0/fydME/Sfb6nOYZ6fb3IP
mbhWAP6d+bs/u6iDn5Mq+hVJQg8i2m3PKZcDIV986UfoeSAfKXKQ8Ceh69zH
+Vk5qsBMkyvkZbMSJJDvpvdwJiGiU3/Y0qQGOipMPCL/KUBWDlj2mpKQ/y6T
5HbfWggY7lfk2jgHB+A3tZ467imPj8Xcs6iD7jmXD3nqZyCHW4dBT5aECumT
FB8z1sM3ywsnerZkQUAnkuodHwk56XTtq66qh/mLdFXvWGXgasL3BvEjJORV
oeBSuFEPz/bLV+lfloLcNWYtDxoSCn87tJR1rAG+mv3lp2ySBLUr63Kf1wlk
EJtJymdogJHWYEE5Tkl41JzH4DBNoKZoW7ri6XpIvqyneodBEt4PSpyMvU0g
/7LE5gm/eri26O9IhEkCR80D8f/ev/r77ZDfwlwdxDzxucBtKQWrx87K3Ykl
0IfxqV832OrAz/zeQFGHNLR8Xmc0cMU+omQtWyFdCwMUxImwaFlgFZG0iJLC
fLZk2yuyVQknLi14OHmfg3H/1yEBnAQS5DzpQeNQDt3myfFRgwogzvwoIZWO
QKOeHSNqmSUwL8XnfSxOCSwPv/Ja2sY53CQ0rSWlEP4JBN9/44vv15AReRWx
gjIaH3bLmuXB1aIzNqKpqjAU5bP1/N0KUtkooHehzIIlo8n0Ew/VQR2dXi1+
tYLokjOe/DqZAh4Rfqo+Qlpwe1XJ5vfzFWQW93FW4lgsvPXLNAxu14Fz0r7N
/8ZX0OzGeFMByR+6M4h7V3n04TDxTez62ArSE7RRscB53YZfuzA4xgA02z4Y
U+McLh76eE410QXxKX39/n7BEGQdOgOoXqwgWl8/OmvSRZTVXiQloGIMG7Lv
yavxfModLfRJ3glIUO68omOrCegKyJbfw/N35L7j33o6HX0deK6Xc9AMZg5u
b5vh9R6Y1iNPscxB3D0Sga1B5tBYeMArZj+B2FMix42ci9DWFbtz1hxWYKEk
FTzOTiCVF+/WZo6XojfrwvTgZA0Nz1cimSQIpLdPtqSsuhwV/tZh6S2ygT65
79Y8mgQKvKFT9mOxEtFYWM2r99jCXPSPgUnc73bpK5q0va5GB48VKkeAHRQx
ajgshxPIlbvfPWO0Bs38my/uN7MHJQNKeaFCArXz72ZOjKhF+vnHNMcH7GFS
I/azRzuBlMt8Yv7uqUOsyX4/2o45wMUhqR27JwR643VDLdK1DjmqnXcRd3OA
3DzeoPFPBKq9z3putbwO3YgfjjarcYAy8UKGO+QklCR/Wau2sQ7tGxnPlnzg
AFvUILAX81zh2fWHsgl1iFrKv5t+zgHCHjDdEMQ5/+wgGcOkRB2aoW74a4b1
EQEeaUohEpK1qzhA9Nai8MaPZ1vwOD45esEBciSkKcTTlcRci9aGkstmqx0g
xIh5XE+NhMbks35vqtcgcacvlitODhDqmnE5Cvf9L/xM3/SvVCHm1QxFPkYH
eLOL6uG8LQkdDTEJrQmqQO4S+xn3dNjD+JDwjB7O//tlBBZVtkqR5K1+XWl5
ewi52z5GFUFCdsYfTq+aFqCP/J+dT0vbAg+bzuXjOP+LvyArdpXJRRq1937X
fLKGcrc7f/57j+jfpFsXnr3LQLsp3+56FW0FPVaPjrtdIqGAazYE6+Ek9NSc
TsJp2wIuRH6Uickmobs6o1vcKBI1rUZosbqbg6BWhpNILs7PetNlGWLeiC92
kY5ryBTS3os8CcJ6VIt/9sahrX4TtnukNwdNwO7z2159zNXYFSHaI6HecExu
NuGNlRH4OKiljeI+8kF245gyRyT8Szx57GmdAcAtjdQPaSRUWX/cmvt5IiQo
yX56OKMHEbxiL7uxf5X1h1ZnmmQAdwCr091wbXDdQ+fQjnvQqsOwqUhrPhgV
ZPC9OqAKmgxL6VQ4b1ccW/48YVMEBu8PL9xhVIZras6nXDGfFb7QpQtNlgDn
+7sni7QUwJh+fXPZgoQOp2xZP6IoB1bpjHGmi/LweJmyuEUXc5g8yp58pQKW
fwSyCL2SAm5hJdITJRK6x3pgfW9mFRyqZvmz9VAM/oyu//GVIiGPcpGJldfV
0PHpHwttozA4KXyQ68DcvjutoW7gVwOKO5RMhn9Pwd5bCl7dx0iob/jZwV8j
NSBn+s1MpJ4bNqvuJYfTkxCd+cnr8z9rwMJIx8HmOSf8XGJnU9hNQqckNheM
t2tgg6+JMuEMB3SxJMmcJRHIKZewe/GuBgLtDpds32cHNfIzGjYzBKrjk6xg
vlIDN0f2visd5YDxgJhbB3Au+nFMWpNVqwZaVXKKC79xQX3nk6y4FgIJadOa
i1RUQ1v5WY4+LR5wcGPTeV1AIA6Tz/L7XKqgQEJuf8QiP7DYBnVpYs5PslPT
MK1VwLzWrbGLBqfBb/eZ3BVvzBNNJ5ff2uUw8MyoOX1YHNRed1d9scR+IXGz
qiuwFOpERkuch6ShmFqQylGeQH2/ZJJozxSClvy+Nx31CnBgMtGfHudGlZwA
n68f84DHlE7lnY0ynJnoooviItA1bmfGgwE5wNZvOKCiowpPQz9E/PdejjuU
V89vhyeDKBnfYEmPNrwzub1rgoZA8q1Pr6jTx0FZa71B+UF9YL/yl6efkkDn
ov8coGQPheW4ZRaZWQPo7VFXqNhNIOZ7HW/Wad1BTeT6xq+rRqCsS6bohXXN
hTXR1Fgh+FlqzlaYYgIKqaKPePE42QFX+5alnFHUW93lTnczYBEVlXxMTaCT
wmMeGptBSKS5V3FJywKOa32r0TpAoC0/z5+y1TEoWe83uixkBUaH/+6qwPmZ
3LVk770/iegjIbJ8kcYGprZ6hVsxn88dEHAI/ZGGlDiGZJ69sYVXC0+33PkJ
VPK+PTK5PQs97GUayDWyh17LP/yZ5wl0VrYza7k1H+34mz59S+4Igrz3PoIR
ge5TzgW4lRUijaq82xWPHCHVtkJGCuftzanLFW6WxWhH0poqKckJFENrvd1T
CfTdZnFk5XwZCslgEKkdc4aYe50S8+UEapF5HjfrUY5a3pQlfbVwAXA6+YAC
c3uzUTqO1bQCwefEmOJJF7h6jvJSzzCB0hjOGi5QVSK7A82lwdKuUPr0fdaj
WQI5N6a7PYmqROPS8/UXU1yhbp3uESOBz6HwSc/fPZXoE+2W+e0BV6jtFb0r
gXk+M/Ho+XpnJdJ2Xp4M++AKCXJdUmO0JNT0C9pe+leiekXxh6d+uAJMJt9W
YCEhofX7uvxrFUhD0TnVedkVBu0VTEM4cT50WP25V74C9VC8ztoedoXTezyi
LQRIaOWj30Ea9XL0RLb27u90V2hSOyvzEvfr2VeM59XZytBR6nyKXFlX2GZg
NX55loRsUu/csOkrQexpf5JlJlzgRf1IraoqCQ2Rn9pjL1CM3NHqkVJDF2gS
fM7Ngnmy//nXhFeehYgu/C1zQb8zvJKbpiq0IqHLkgn8ib65yM/pPduKpRPE
OWee4nHAvaDDZqskNAvdDmi6xprlCGr+x43euJCQ1dZvHsPZNKQf3iUZ2OEA
h7v+yHdjv5jLKfd7RJuE0oWCAl+O2EN3u3NfDe4LDrsu6e9ii0XP9B93JdbY
wY2V7a9V/70nimRpf5E/BN2vzvp6p9oGXuu/P9HqR0IxcwLrwxTu6KTysfqJ
bCvw2RSjG8V6f1upQnfgWfRyD+XzwGALsJ69VrWGx+k74VFiEmUPGcPpRRdM
zCCitINayoeExIYk6Fz5AiBOdPLPFQkTGD57qTPPk4Te+1A2iD2PAO1GqjyK
w0ZQ7PPg4CE3ElLUDZEvyo+HYU3HI3a7DUCNGC8bcCShRXSxfnBvCjjTRFbT
bOvAj5R7l1psSOhO577tVygDTt3KjD/DrAmMM8yTc2YkxJCcd9bkdDboi7Pl
qNuowuWERl7T/37vQBRaWg7kQ8e+0cRPggieCFy8dhjzfF63aJbhcgGoKnVb
VN+QgW6ZR/kmOIfrj3351kFRBOedOgjLn2JwKPFW6MnTJJR19vj3vTzF0GgR
dsT7iwAoO5+5VMtDQhk9iWRK+0rgBujIOOacgCMroWrvMOe9f4U8lugsgTm/
uBa3eVbIua/LuvsQCY1T1F9yPFIKW7c+NX3jo4dyBuWTbNQkNB3kabSqXArL
owVHy87vBuHbHeRZ/wg8nzSfRhHMT9b6AXaTnX4JsyPrYl8JZFjx1Wn2TQn8
0nxktJRHDp2/QvpNMf9/0F8dDDIqAbfYzOK237TA1CpfzT1CoKVKmZW32cWQ
3+Lx+bYjC/gcennqfjeBgjU6lCiKi+DwHv1d3muc0JW0sGHTQKCv6PQNXu9C
eONxVNzhDx+s7VoKZMD5ze5Z6amdgwUw9VvM+PS0KHBIarAo4rzHNxwZzP0x
ByTVVLsvLJ+FYf+acpIvgV40R+mVSmUBRd5arxbO7UMarhacLgTqdOt7mO6W
Dh68rbvc7FXhixP9tXfWmMMcf2qX3ZNhc9SlPDdVExIuHxU4b0qgBdOLsp3n
4+GkiVpcD0kXDkSfLdIyIJDa9vgNdppIeE2lPVj2wAC0vTmJfzoEylh/7OTu
Hghb5aSMv4LG8J04HW6nTaD19D3lkv4uINzNpSxXbwpzU7ueeWJdTGHi4v5Q
Bah8aGtCcFtAZN2x1SO62Ae5Cp/fpbBE9OzPS7NareB95h5bV/y5AxJ8D/+N
+KAdr2CFEAlbeD9tIq6A51lzKPUXI2UoaghMoYm0sodpLgbNErwu6sbn73qm
olFgd+9+sWKcS1mQtRXmsIlj4ylergQ09efDUBrm837BbaFAH7yucuVgp+pk
dOqGOHXvDydojA3xlEvA/H/aHfVp/BL6t1rNPcXsCtGzTufbs3HP4vBJFQzJ
RlIGR+RL9rtB84ao6N5KAplROQyHvc9BNZ91r39dcYNFxX3yHFcJVLz/z+aj
t7lI/kLKzYJb7uDJyTf1Ave+j79MFtg78lClUphZsrsH5GVrC5M9JJC96Rrz
tn4+8qM/GfJpywP+SbuHxeDzptLmK255Lx/J6o8OsAV5gkzqMT0+nM9zWbO2
Gv7loxxpPo2HTzyBZSVs98wvAlW59PUP7StA4V3p15/v8YJrQU1JnRQktCeM
LIL5Uz6a55Bf8DvuBbbCtPwm+zB/qhoWQgry0UMvluPszF5gptdvPnAQ58Yc
2p9SB/ORyt5at+5vnmB5mer4B1YSomrosz3ulIfYv0etmtZ5gk9khOV1DuwX
SEPXNS0XhUcHDiRIe8JLrd8/DvCSkB/HjfmulBw094wf0bV5gMJF31ULMRIy
M3TcGRW9hJ45OOZJnnOHqUbZYT5pEtqXPrhn3CUNMSrUPzlu4wbZl1uZbeRJ
6Njrh71Srskogrfw1i9HV+h3F9P5eo6EPrJpeIbLJ6Dm95bUJ7Ev/G0vvvJU
Ea/r8rXH7+djkJfZYJWOkDN0vfAw21Emoc/yTP2B9GHo3tiwudEvR1gcqYiN
UiGhE3e8a09yB6BnWSqUWl0OcDtPXk0N+w7b0MV7J01c0X7NjOxAZ3tQW9n/
wAbrsw/kjvTN6KPeNTsKi2O20MelSjP83zjjq7YXpFWAdP6J2oybFXTnBfyO
Po9z5jynb1yPI1iuX0/w7DQHanZGVIg5eazzZSljqx88GSBdY6UwBWo+G4kD
Cnhdx0+Nx1GFQNjnGwUL9kYQ09vbvXGGhM7T59/7txgBUnNyPbmT+qAZ83bT
FHNVY6a0OLslFkg9T1+V92mDGOuhpm7M1YVr/X4X/JJgv1Xgvk5QhnHj+e4T
gtgf858/btFPAdmEuWeaZAqgPbB0WBvfrylpLUvG9VRwv6RgJiEqC9zKURZy
XCS0dcBc2NwyHWwaKf5pHhGHMIkOqU3MYT9fj+770RmQVKRf7VkkACcGXVPL
cU7QNXLdq+9wCUJ9vGTpqrmg0vAG2yl8rth6VLMzyDKhFZE3vB1ihr8GNZVt
OG+sfrm03myXCYy6KLirlwp4nbM9ZKhIqLj7282gyEzo//FLpSjlR/87T4h7
QUZC9aJ/bFQtMqGLb8n/xoHJ/vSlW9NH/hBIyZE+h/z3JWhSnfBn5JrqVyrE
SWiFQNpslGL7rS7Bn/nprqX89X6eaxRA9oFAK4GeVxWSMkCI9JStXYkGqAzU
i6vmCHSUaSbxXVg6qP86bx6Ychied1dZDE8S6BHF5ZjKM2lwO9XOd++9EzB9
73v2p0ECyXyhXi8+kwwZlu6jTF/EwVx9M4XsLoEKY3bLNsUnAnpQtH6LUw5K
Thw0nrlBIHqdzj6jK/GQGnC672m6Auw/aZEYjPPe5N9Sh+jOWPhsnu7wweo8
dP5mvbuAeRIeWKqpph0FVVUXJ6Ij1aGb+3zH0SsEGlFRyayhD4MVBqle8/fa
QG98VUSwkUD8H2RkBO8GQRTnioThfX34IfWM/WA9gQ5efhJBbnEBnl4y2aAR
N4Jq1T25T2oxD1v7OKWW3ODjvJdfeI8JnOEcGjHHuoPCjyPvZWzB/argWpGm
ORxuJNfoxPpGX7jPnTENcAgS9Rb7YgmU/MG/Jusw58lCVnKET6PYhOkWihwb
GPkexN6F/U7pRK+obpQxsrv8eo/5UXuIfZBaoNGE83DXaqwtjyPSzpC57Ont
AOQGpo8zcG86lHldsbLNA22fTXiadssRfI9M8L7rxPMUibrX2hGItlJ3vzWU
dgGBWcLn9U0CvV33c4W7IahNXdJqwtkVVL4zb+r0EciC5l+CYUwYEqAuWDyQ
4AbfJH+onRzC91GvxoJnPQKxHnA/0JntDuXpZHJGmMPiSSu3h49EI/+D39oj
Uj1A0+mm5oNxAonk6HxM+h6DSG+Pd5h4eQJPmfv1C1ME8v5WNfHwRiw64TD3
xVDKCxry++POvSYQg4uw3LpGHLptttPb/d/vZXOZfmJ/T6Bp86owwa44lMk1
rU1EecN1ChG0G+eNgzcoK/pX41CabWdu2y9vKGJJR3OreP9XnvPaU8ajNf3I
ly+MfGAf+TOewt94n6O/L/D+iEPXlcOWUnJ9YLqReZ5rh0DPKRxz0nviUFj+
h8t87T5QqPWd+r+/29xeE/9mYhKHNPfx6Ntd94En+wdu3duDea6imtzyLBY1
MSY8Y8j2gbDfHEYVe0lI1f7DjzX+WNTfs2fEV88HIChWVR37xfTNJypPnkaj
3KlfvZ9I3qCj6FcL+0mInzqEdYouClmz3+yVCvIGrh+7j/87QELx1swhauwR
6BUDIW30ygu+0Bjw78IcOKyU29O1Jwz5G8wrh3N7QeCtzpVBnN827rpOfh8N
QbQPFg/zGnsCTSm54XkmEnK8kS+45heE8rqttum9PEDrQNxmPDMJPViTODpP
FoDuU5kn83q5gxZzomE05k9AhNDL8H1+iO3aifNZpm7AqvQpQuowCZU+aj57
Zo8n0hIQ/1As4goxWgYmrVhXOtfr3ffPGa2r3n9977czXCPT832L9TpXJivd
PfbofxSddzyWXxjGpSFZCSWzUFb2zjgle+9NdnbIyih7i+y9iVJSVAo3Ushq
0aKySuh9XkJR6nd+/96f53Oe85xzn+v6Xh+v50mmvFTb2OoCFclx/97gusaH
3xRmuhZIWqAkb7+7M2zKEJ+ycX1D8wSDabM28nLwzxxicIL8P+lhLLh+59PK
hw9iomj2AcX9WM+z8JDS/54LnudLoxz4YiYFY8aFxJNmO+CpLPgd8//vAw+M
EAfHtIHndt017V/WsBp7hz4Yr8PQpUzmZ45mmIPjBMhalvA67KG7FjMZ+V0a
5kw4YAsVH7uz8lrN4IJplugfvM4vzEgDaemOcKKuPP23pAkEDknTs+3HPpJ3
iKYr1g3uWF9lFNnUgeo0lckr9GR0z2U4a9D/HLSIahdS12gA15X97ptYn2cj
3L3i/nkABUtLM1+RKgyLa6854H5gep4IbmJe0NV7XCq9Xxnorwc09WHeHj54
Y2UPJd5XF2q7PSxy8HKrOVYM95XItNBJunBvqPE42OwoIAFmgvYnaveQUW6p
VhJ3iTc0q5fTGbMLwIhHORM/7s8Lyv3jrzy9QSpt7MoXJW5gHGLX68A8I6xU
qlWy5AWttDf8b00wwp7DS8nncJ+bnvc703TcC6Suu3AfUqGAfYk9TCewX1jL
dIwuHvWEosvtFTf1pruCRSKe0FLgHBc5kTE2dw7KJybs5m2duz7aU1Gw4lxw
6FRkpn6oO/wruP/g0Nv3XRKNhqaWfwikYrJw+v60K6yfaLkaVfGna2Oh0fT9
FoEs7G6+rD7hAtvqSZze7vth+FzmaDX2IzfhudOjjk7AsGAaXGXBCUpfjDNb
8PllOX3o4x76s7AmJstlQByHpHFBpz24/uih6OAvQ1t4eunAWeNQcRgfpGGu
xFxXpiaqm1VoCZOvLn6q05EF8WnJ+Ehc5xA9dcnxlykkvRc33ZpXgupprdpC
XGeO9nmoctkI+toslvZyqULHDEMqGdevPLWK4wvTAb5rU7/ZuDWg3dsn6jK+
L01nzaD+RTUokeswFPTTgQGK69Sn8PwjtVx1aGVVYNGByTKV0hCW+Mb2n8DP
O2KpvLLnqzTQzq4PxH4zBpVPzz8r/SYQRTpLfZylEAw5L1xf9TKD3Gl/HW+8
buNF+z14MjngyPiZiXgKS7C9mt7evE0gHbbT9yaUqOBqqAzr31preBRTbkCJ
dWxdO3x9iWa661vjHRdKUzvY01kQKYL3S9S7JJratrlLj3YpnXv3WVihCht8
i+sN8afkRjd+dj1YaOdffu8IZJ7C7Ut430Nco+5JaDLBoSbaJ2/EnCH6tdRh
Dtwn/2yDflat8sJWfO9w0SUX+MwKJ5twvbPXLub3Z3H49PjaZHyfK8j5qTYJ
437rkL19L9FHAS5SfWz489cN9uprkPNx/S3d78/2Haeh/VZtWoTwOeCKOza6
iOvHFIOvknw1wfqAJrlA0wOqeCrs+XaRkVvHlDfTXX2Y11NLozb2hAbjWMb/
///aGiUWF8qbAMXRCeNb6l5QddmoRwXXKT//Nql5Yg4finV5M3m9wdC+rYUd
13cOsyzyBlgDPfvJQ3ML3hDgdL9kAt83mnbJpVvIHuIWzFxZc31AtSTpjh+u
u/XOJIC/I7yUffp6hNcXMnZPXpvFz5steCv772lnON0n0PUp3xe2nftuyeB6
GZt5kymFK3yiaw9yW/aFy2OkSDe8nunzcbmb1W6w8eCXZCuvH3xMstAJwuuf
yiLirHf0HASdfOLvqOQHjfXt5f34HG1lH1T8EugB6tY99SqyfhDxqDrWB/fD
s9OKiY8yPeHm0GSkC6MfqHF9K57E/XZ2Vf6UrL8XRIrcceUdxX43secYF+7b
qsxmLiM6b9grbVHN6OsL1bq9EvJrBNJltZG+4egNx8UoBv6SfOBI/fdsSeyb
M2kVIw2u3lBxour6hpkPLMQ9e8qCOZDWVE7tErM3DJrsfKNc6Q35sUbTi4sE
olrYn6Xp4wUZhQ5ZBi+9YIS7+MKjrwTyZul3OeTpCU8pfZ3Hlz3B0QECrmIf
/ydvfGMXtQcc2rNkfHPFA/K1PA6FThPI5NEJPRldd7DNOnj/A+aph8vOQyEf
CaQWdJv+ixhezziB0bRed5xnEQ8J57sffacMr47ag2nXE2mwcIVki5+MWpgr
jrtZU7sTFhA0d/8k45ozFN4Un1t5hcfvT3l/psYAWmJD9mUnO0FP7q+bP1/g
60P3eAgyKkEsm4Ja6SFHkDD36nd9jrmr4bIEtw8XukZfqyGgbQ+lv/9Vn8E8
c1lbjH+mTQMdqBY6D242YMn8rb5sFJ9f++K8E6fNUXxy+fmuNEv4mzq4NwLX
ZwtLmfZHn0VZFLQbz3rMoOqfYtMMroccU69nwr45fSVH24neBJZ3+u56j8dP
Ef5UcljPCwFaUU4nDCDakHvTFc9zOiDj8cPi8+hS3f7NFSodyGNxHUvAz+Vd
ty+awjcQ8drERBkEqIOluMFBZbwO94/8UH3yJwjxrxwpQbKnwfLmTEHKO8xd
NUGttkGhiDrj8RmunpOQIJ9g4IG5q6DtbqrP0EVE3iKGTq5KgUYz29nXeF9G
nwU2tmxGoHEESzLcJ0Av5hBr/xcCHZb3kGb4GYVMWzT3jujzwBm26+tyywRy
XUveanp0GSVmNOqx07OAwV7hGxyrmLt+0/+jqoxG65PdDy2DdmJ/WJPwxPpp
NRizXKTy/1scfmdRvZzv4p9sn2LAOsa/RvpgjHlMxszAXryzvCunVvoRBT6P
ny+rGWvvikX+7dxOWR8+dplEDd/Ixz44vf+r0+axWNT87kU7qFOAKm/bs1P7
yMgs1qZZ/XAsmpV5ZerSfABe3T2bs46564L8hSuJkzGos/PQCGXnEci/oLbv
BiMZHa9bFMv2i0GGIVO/ysSEwLBiecIC88N7r70VfaPRyKVT54rNsCTUuSsu
uuMcd1yNurnmRxQyOTjG3h1yCu78Tb3Xxo1z2a/EDp/0CBRFjksZKlED45zb
fM9xHvSM8Flr7Q9D30IOubNyaEPUV8l+FQEy0vzZqfJGPhD9DLXaXRhtDB2v
78RdFiKjS+65OrIbPuh+Rkpy63EzyODfknHDOdTlAE3yyRVXpH4xr+/vtAWY
3kh+/lUEP+/XjZzVBSukfHSvTvUNa3CW/ihEIUZGk40C2YmlSij6/t/hmkjM
Sys/OBtw/fHLZwmP/TXgiB7j/A/9s6BqulX2HteHJHVlafY6gFq23pHTtE4Q
dW76eQ6uPwp8/2I5zQOSKR7HNXg5w/Y75aMvRMnImDC6EkoXABxcJkx9XS4w
E39C/6rI/98L+8B1dygYDH/ocartdgOjiQX/18Jk9DozwKb2QjiY7KX3/HvS
HXQOfKItFSSjqpMF7xR/XQIb7cufN+zOgfzwYaql42REouTMPFMfA/kG05Xn
PDwgTnxHwxNeMqLWt2FYbomD2cRkswEbT3A4EJ4tcYSMTGIGD20UJoBt9M+H
ryW8IOVfm/p7zI26E9nUx2eSwfquwXOzRG/IIoJzBTA/c6RM1j9USIWS8/uP
9FL4AE3rLlphzHW2O89cumWZBkeqG0peW/tASy3dvu+Yx669IuhW5dLBfCSk
dzLLB/pNKh6H4/50ti/p2PcG5+XpB7di6nzANOepdi/2d6kOaRVOyQw42haa
013gA2nN4g62ZAL9NXjGtKGRAVPeVzWWzvnAy69F1yexTkZrDXPsZ86AS3zp
X+sO+sB32Wu3nfH5lXW5J19UmA4mRe/uzdZ6wyn+QbV9WE/mXqtRBL9OA7h3
QWqWyRvGE5vVyThfb1k51CoPpIIoh2y+oJsXHN3zMPPbTQL1TJvwJU8lwatS
24GZNg9InM/Tl8Z58/V4HKlrZyLciY/Ymd1+Dna2lk4KlxCI86P+LdWlOCh/
O7Fj/Zo7VD4Yo4lPwznrJNXOeM5LkMxPH65p6AqOsRzKYQkECmB5t5OD+iI4
dY5W5vO6wNabfD+jaALVd7Ma1zZcgP6Z98GDJCe4anAUsUcSSGSUveUIrQ9E
p7e06tx1hBTla/nzYQTKYDxx4K+lI9AMh55l++oACT7KKQ9DCFQ6MvtCQ+Q0
fA/uGKd3tQNOvg9KNcEEoo6LTRneZYQWjVSLHWas4afR3Rf1uG4eWSD2NMwV
SdTnvFlyt4RnjvL6z/A4sVMFRy0v+6NVwTufEzfMQFf8fdL+iwSyP+72WrYz
BD1YDZb+kmcCVCk5nOF4nts/TuX+XIhE578tPijXNoLnlK5Ou2MI9JAl8F17
eAzKO5RoL39CD/ZofjC9lUig85TP+Hu84hF583671D9NIAxmS/0yCPTAOe4X
lUoSYuKyXZBlVoPWiX/JynkEyvqa8pWdlIIOfrpgMxx4CpJKJDrf4rwfaxtu
Vjt0BfGHfk8TM5IG3+mdq0k415PDN85mhmShD+Urs6vCojD5w/ohTReBAsde
lT/1vIrmKVLGvqocgxKB5d+GzwiUb+BUPamUjdJl3Vqcx9nBkNY1WeUN5mHq
9ye8vmejp6wGl10j9oPIyTsnAfdh6RHhMdWLOajW3XLJjnYHhO/gZnuA9Zwi
l+JKxMccdPyNFs0tFnKX6seankTMMxE81YYB7LlIPuyu2i/6hS5LjVzhF1Rk
1DVN+WdUNBc5XSp6/25tvavrPifrCZxzi3adks05lItmvQzfjszuAT3ZkdEk
nOOKn+zIYxnPQST1F9qsr5jBsWZT4jUnGTWpzivTnMtBk/SmVwyfHoFXLH+m
KY6Rkce8e3/qSDaiEey2j+sRgPUr35y3sc4M/H6uxkCdjWbnbWSW+CQg8GiU
Wrsk5rSmHMdwtqtoTm3us2KdLDzMMy8XRWQUXNOWyZOSgVRJGxInXp+Gq0f6
vg+o4XkeI6nv601FTpyft7iT1EFC4lfNnDYZzVDFDb5pS0J9Yabfz0Zow5fh
L8leJmSUFsy43DwfjQQYXYNGdxiDaBp7XYc5GUkr91AFOoSjp+JZgjyqpvB+
VsLY0YqMRv4U/t1fFog8GTQ7pjLNgdNsZFPPhow+sL/q1xJzQ2KNgUT3vCVY
uyc3RNiSkZbs28bXv1WRQPJKQpiKDcTZdnJ+xfXeBfbPafg66Q+XpZpy7cCB
QXA+Ddd3paasdXT7QGTN+y7aWQdIOrHl6oHHf8ynsTepNwTGBsToJbIdIf7B
7y+ReD79SloXH9NehpA3TTXDjU4w9qSxZAjPP2ZinWFnfhwctDr7fKHNGYxy
jxRY4eedfTOj1p2YBJwdoqPSOO9/Vzm9oIHXx/rLgUv8X6/A8LcfNe8uuYEH
acWj/QwZPWVWWO3muQop9ztmHDXdQeuwvFW6Mhmd2rdL6ExLNlRkWWdGbbnD
U3+JM8OyOI/EXtjwZM8FKYZTAoP552DowzWmJOxH14Wvxr6xzwP/QJ/Wg+we
QOt/cXGIn4xqvs+dTw7OB3+m0sKgRA/oibX/eR37si/dq4j3ZwuAV/PSdZG3
HiCv/8hABvtCrFjR3FW2QjAoXE8cZPAEwUS1rkis/1cEPqdO1RRC5PtD0rQi
nmBn/68yB+frtKMlr6y3CuGveSvbupgnuIh3ux/GHC5etMfsAGcRpH1vcetk
9YQHbVTP1zEvLc9PW8TSFIEnQ8qb8a8eEJ96OGLmNYEYOiwNcp8UQpBHIP9c
mQco5bCe2P0Y67+iq3albiGc6Sz/BYoeMHG/4UhcC4FYMyYTPMsLQEJgI+p8
7zkQecF68WgWgWLO+N5Ua86Dcf/39jKZ7jDMsR6keplAT+xSlFjNcqGWkk90
vd8NGHXEBILOE+htVkk415NseDn1h0N12RXGtsYEqk0J1CZgMxYqdQWyfjHz
e1C4gN3HjJJZTQItXt82bdqXCmc+0tz4veYETkLHCkCZQHEvlYtFixPg4lxe
ccJHR7jXUxN2U5RAdxtX0w2YwuD+dWLznIw9DOyr8fkmiP3ldqTYxy1v4ONe
Ut03bwOhk9aPmPgJtFPwbIWYsz6433B0kM+xAsu163fkjuP1XK0LsOezRfvP
jFuwqFvAYO3fZDt8vbX78nt63QDUOFu13fzPFBrLfDUShAg0kXNC/npPBCqI
VnLd6jeGFP+clttiBJIgUxFn98Wh4ZsxZ+LUDUH66NFT72Tx9TMtSfQHk9EP
zlO3dQV1QTcwiGYd4RzEENb49mc6epL69B2fmiYU0NYPrusQyEGH4Q3pRRZi
6xkZ9yk/AzYFN4cGLAm0Evb0izJVDrpWfZd6C50Cy1tuOyzdsQ/uEOGVPpiH
eHOVR1kdT4J2kuOuBOw7aLefjOtmPrrWvbczalEaQhgqhKSSCXSTl+9J3Y1C
JHPgJteqkDjUSJtXK2P/9fPxG+MRKEY+ao5HEywFIKltrSCyGfvCiZt6bl4l
KM29/K3i0lHI+dN+rq+PQFGPBqnc/EqRmICZ8XdlNvi1c/HD/Hs8zgmq6Dzx
MrS653AM1RYTUHO+CruFc98P/aO1P26WIWzfNYOHGME6vd07COflUDYbYaa5
MuRpr3LSqJQR+m1akkT3Y52citQUflGGZl19C7PiWWCATqBwgf3/7wTZOvME
laHpU+93Cj7hgE9lQfPx+Dwi9dDswuFS1G+4k4+njheYIwzU5rEOBz5e9iW/
L0G1i//GByOEIOxfsscS1oFDFtzT5pXFaJ+pbxKrlwRMXX6ufFELc+yK0u1e
riLkd3/hCVlXFqb2qKsHYP1plTczorAuQA3iZa/lJhQh7Wg4j5grGQmmiiSz
7s9B1LGUQ/9M1CDg34p5tzcZScVxXQnPz0KcILnz2JwmjNRuKZgGYt7mLBcz
fZOG+AfIx8PrdWHuaJGbSCQZ2emnPFQ8GY10t0Z55J8Zw+0erxrTy2QUP7vC
F3skCP0z9anffG0K30u7aU7G4JwCWSLLP+zRg7vMn6xmzEEs3CXrLa5n3f+6
1mxiDqacOfuqly3Bvj3vrRCuM1v5JwpJBsJ7a6edkiRreKC8ZSmOx38m3Pb7
NeZham4qi5RpW3AODDNfjiCj+5k/5agfJ8B+waxuhx57OOb/fdotlIxu/pFj
+/YhDdAV6tbbyWfhV95617UAMhISvteIPmTBy547j7yKHGHC4qpstxfWPV+e
2+FVOaAOgkN99pjHYHyu+///E6SdohZVyIelixeFLjE4w8Gj8sFd1li3n6au
+pQUwhs1ys3lJmc4ccrI/LkhGU3dXXr/racYgr91DTZKu4BlDs/Z/epkNFzo
+JDqWimouLG7Z9e5gM8u3qhiBTLiGb7OsaBeDrUksv3QXxfIsBHQScd54SX1
3dfBxRXAGDXr241cQUo8vHnXUTKS684UvmdUCRM2tCO8Hq4wnL0jjpeZjE4r
li6JNFWCg5nxxeVQV6BzDeSnxryxQyxPaPxjJRymf1luet4Vnqvuc2z6QaCh
yE6S1kIldBY6nHxh4AovBnkPWGCujphj5r0yUAndTj9YWQ+5wp1cPn1DINDe
OuGz9NGVYNrwyoJx0AU6NZIDJ+qwjvkP9uUwVMJUpXj0GzcX4Gh+NM6Pue4E
r+upZHI51BxJvtBCcoZX+jvPRGH+9BHsXJYNLQPle6d46dyc4QXNkv6Fs5jT
5mp/F0IJSNXP0geMOIHCW7fGQawzzFG33N37i4CWXt2Eld8JzN3kYrWxHhY9
ZU0K58+D1x1qUlOeZ2FbIWKm9yCBvotPjpJTssFd2veT5jt7aMu3+KVITSCi
uqZVJjoTDuXEbp5WsANl8+0nlWsktBpMve5xOQ5O8rS033hnBbbv6pIefSeh
RGeD6XDLcHhpIrkZc9QSftRYzEh9I6FG6UXPxQEv+NLEcqzBwxxOrBQrH/xK
QhIv/y4Oqe2H+hcGNx/cMQWFX7x+XrjuMEtr1vfdEz0kZPef3GkCFOYL9VKL
JJRndLbNhD8caWlwvCyyNwLjx/Pe/gQJZVNfSv1XFIeSJMJ9DVP14fvtqES2
nyQkHZBfZ0aRikzvjtvxhOvAal717+M7sA/Sviw35MhCAuuXXrZnacL1YJ1d
iXQEmjpXkBnNloNsqE/vHXmlBpx73u3l5cAc3hbzm/QjD21ZBKW2aqkCM/Kv
nDtBoPF7fFc2qwrRypfI6McLCLR6DPKasP7fWaE3lOcqQSOfuX403VOEzup8
wtKMQGKt71+mOJehJr0RCoWd8pARQrkXvAj0sj334FHPCsQwct8tfFwaIszE
attiCWR06NW2dn4l+nD6qEeglCTIhcty0ZTivPO0mH/dtApVOdbkU/CIw8l/
ZkWp9whEhZ6VWSxVIdMyXa16bRH4y2Gs/vsFgdKuZIRH2FSjQcF3XrcjhcHj
oMCdIyQC2X1ikuqpqEax1hE0Tp+EYLG/sdge88neF2JaU+3V6EUaNGsGCIPd
2Jh4H865i+dF6+euVaMGVxVvMTER4GylG/z/vZpCCXdjTTyr0dEFWuoUanFo
7TmgZiqO9U3vfiz93yrE8Qa4qPdJwtjHLToZFTLa9zadCHCvQkGzceUqOdLg
2CB4uUaXjFpMUrp1ayqRguXJf4tlclAfclctAvPk/Z93Lj/1rkD7k6oWg44q
wuePSn1T58norgTd7oz+YpT2oPb9ibbTYGNiHsIfTkaS4+UB61SFiC5WNUiS
Vg3So79YWMeRkfqonZAPVR4qW5MdCkrWgNp0dJs2G+eLHGHpkz3pKO9k0Cuj
17qw+dH5ilMBGa3MUm945iWgzfLK4O1cA2B+mHdUo4SMAiR4CkqNI5HDTFdS
+S0jcJ1+mXazDOst+eBRtpNeyOZovFndARPw9xoWySzHvB1lJ75hrQonib7b
DwJNgRCyHfuCr7f9Ntj5qisAkg/FFTENmQFb8lhrKx7/wH030Yup0UCKmUtl
YrUAzoHwym08n3aeS58yDiSD/9/oH2oWlhDJ7NH9DM8/KEwhcdQlE6qNN7v8
Yq1A9dVksmA65mGLv9kJMjlgt0HRVlpkDSXhzyOF48mopKfA+W9qPmzTcQcJ
FNmASB/zl3m8bitbf79CYxE4eF3/0H3JFqYyrC8H+OP9vcx1YC6lFCjLFZ6e
17KDe0NXDixif7yu1k9o8FXAXIbQrvI1O2itOEvvh/eL8IjO0WuvhJ/cZ3JZ
Yu3hJ6mYhQvvb9Cuu/z371dB6PDe45Rke/iYbJXGgf06/fX1bN60anAUbdwm
lB2g6WUyV4Yo1vlI4YkhiRqoDrhlO+jtAPMkF8tczOE/aH61u16vgWMNi9kv
LzoAd+y0gCXmClVHvmOcazVwfNfbP7UeDjC+mzp5C+fKSCnLqRL6Wvh9j4NC
UMEBvmoxsWjMEsjM5Or0780aSCugdchctgdPax32b5h/mIpGi/rv1cDDqKO/
tePtwXVVfJgX52h32GT5oV4DnR29prso7aFXvUpSIRXz7fFLeeMN1aAgdPNZ
yTk7OPfYVkDFn0A7ag5uTxFVUHNWobH8sS14zM2Je2HeY39b8zCKqQpePPQc
OU5vCxrFDubfMd9anNlr6U0ugzUuTUexEGvQswr2L2Ah0Jd66x6jiBJIrrvd
kVRgBWpXHQ3pdxLop2OZ18PnhZDy/ewJ2mZL4FdNjZ2ZJaGu4Rv9HORsCHJK
6E0aMIcfei2TIW9I6MD1eOPzqZlwc/XVhP+oGdw45PpNfYSEKrnFzZk2kuFN
quQpl5c4V1778NnpCQmZ0W1XKonFwtJ1c321CRNwiL8v9Q5IqOf7zNcr8SFw
23g4cvmDMdAczI6/10FCO3+JyB8mHIFevu7IsXkjQKpG1RS4/q6u9p5rhwW6
u/Q8QO+rIdRkdcc+7CQhy5EdBx6NX0D/FEm/BQ4YwE8uLeXZHhLyZ9dK01+J
Rmzlw/z/9PXgrkDS7pABEqJZXyml+JiEGCZsurvLdEDdk+a41wsScqvKNDxR
ewWxUa9tiO7SBoYs0993JkmoT3PKN6ckGzXsNg96E6cJ0r05eLNIyHxPVoDi
kzwU6VmSwcitASxMb0L/bJLQd8kPu1YHCpHrwuH832/U4NcxNabnNASqefpc
ra+yBEVY8GuH3T4DA3/n+jRksL/7vaj5bVOJSGd+3I94ehpkc17K1ukRqH3E
Y1Q3qArFdUVOJ+05DbFWOVevuhHogtsuwTWfajSTcYJRxPsUnC/5S/8Z56yf
x5YVb6nWoBuNQ0w7FhFscxy1csLcPhYd6uHxowYVznr5l2khKHhffXfmPoEW
GG4x60XVInZSsbnUqgqsCvKeEh0nkAx729Ljj7XIOlViQOyLCkR+uKVIg7kl
enE3W+zBOgS6rZLneBHY2lSeqNhLRsrWOecSeevQq9HHi8wNCNynIw48wXmW
tzaGjm93HTpd+nj9u/wpUDdsevTmOD5fGtxHqR7Vogy+kItzXaegtePx73sy
ZPQk/oaXgnotOi0zcFDY9TQESm6aq6phfpvwjjxeW4O6r4fqPTiuClra4nrW
mLdvt3yaKn9bjRLo/cvRrjOQf2zh7oezZNRGfsr9frYK3fKVE5LdOgNBhRvf
68KwHrqbFfzZV4G+RKy/EOPTALMcZvU7WM/BmnP87qlS9ENAUInDRBMW6WrG
72Zgjk2hkb0tU4ROLJX42aRrAcF5KvFqPhkx0pX5qpPz0KV2G80rY9rgzyDe
KY31+UI320pAaDaaicgO0GPF3H4z7W5KLRkVIjdySV0GknWkHeNz0QN9Q6nu
y41kpJQdS0cwJ6Ki5i2Zm036ID9zpZD6Jhl5MPWLESWR6MRFZoP0FQPgvGuV
wNlMRjSlna9XUjzRaSkOIdVDRpCzupnShuvP2UvT1Vu1IV5r9xOV20bwNMUm
auwWGflF3jEokbgA8nT3aLRUjUH3pi+TbxMZ/QKrwNK4GPhCIZSzZ9gYuARk
3uQ0kBHFXLyBk3YKHLGSjDujZwJi8p4s+jU4H8VLOXP4ZMGRWsmDyz0mYBPj
+qCulIx2+bLc8WfIhYlb7MHMJ0xB7qv53YtpZHR44KV4xGAxPFY6KLbrgylQ
xvv/4sL5wlZF+bP9izJwehB0/imXGTT0V83cC8Y+KPtR9rVuJTh9Gf7318wM
bhr3X7fzJKPuHDNx/bQqsK7Pf5UfZQYrtbqeInZkZLm9GFlcWw2rcIK3stAM
EgL872sakNGeeLGaqjysw5xMCWb1ZnDmsqrRECIjwxMUMc12tTA5cS3hwDUz
aGRgvPsWc8VxhkG5i79qQeRT9QubEjPQSKcdzMKcn8gw3czuUQfiquN7R+LM
oOL+Ne//v18jFp5j3XarDtYt6mwe2ZvB1Yc5GQP/CHSo5UJta3cdKNyjW2wQ
NgM1K73bkh8JxDXA/y26vA77nGcgkExhxkl67WAngUZD2Z5sa9VBgohFvkqD
KYwWZrP1Yh5j5CnijeuphfoDA7Yh1qbw5lG1XVQUgZKk3CpeU9fCqQtcr3t2
msLyJftC6TMEetbvmDZ6oBpQ/LFDh7VNIM5vyeWmAIEklgfmn76thAPVu3/M
fzEGvZ8GdmL7CdTdGCQvuVoOYkonjp6KMwaXe3dW938hoQqOr7T3mgrhq+0E
T3eHEeTTTSr2vSahs8y7yo/L5MGevGwGYzsjeLv45TP/UxJal1Y4aJh5FezV
vjFF/zWE7z8uUFk9JKGCnZzKfolpkH2nyv0ITi45qwkG3i0klNbHOCRzJw5k
GvYVWNcbQO6l4uHAGyQ0/KjHIdItFHhVkuXHaAyA/xoVQ3gDCRU/U4i3HLCD
MTFkQVzSh4fcqYeTcP3b08XL5OPOqDIm0ZpMoQ+Z3FpuxXgcqrodF7q1LqJC
hvceY9l6cKlt4eMtfN8bEyxPbtfFI7KbjJyhjB7EhnfMtuN5nvy61F0YmY7k
U0eVfy7oQhy3icoN/Fy+1eec2GizUS/beTumW7pwnluU13echL7O+f9Zu5uH
WoTpP92N14VzWfdF5/C62R4pQCBShL4ZtH276aMLbw48diO2SGgibOf1ooBS
pFtMZ1DqpgvRMiEnPRgJtH9E7QA5tAKF/mN6/tlPF+IXEgt4hAhUKRSp3sdR
hb7+0JmuS9KF9CHWtWU1nL+4p+sGLatRr4rIh894Ps9eNAZmORHI2IRqaMqz
BlWFpfeazerCu+VSuhdY/13BoYvDqBZlLTwty+PVg4fEz1e+FQSSzCNLrFLV
oYGnyudo/fTA6PS4/NFuAsUpq2zzZNahMXbm2t/detBwcCK0appA0sSRWxOz
dejQ2kJtPJs+0OepJz/fgbn09qOtyl31KDTqa+DNMH3oen385tcD+Lz4cr9N
JdehOF6hc+fe6UP5jebCZV4yitozQWa7Vod4x1jc8k8agIjO7Y+t0mTE8q9b
zF6gDm1Xc1xnLTYAdYcjDSw4pxdMyDB8C6pFvd0XuMbWDWCzfFZkzoyMMrXq
bb5k1CDyzq199bqG0NZjr7zhQkYydP8O7A+uRg5ioozlRYYgeH+wjyeQjKRP
Ngu3nahCizf2KY5PGYK2fqer6mUy0ueO7/Y9X4EevRbf1KQxgp3WfTvFsV59
CdeZ3itVitTmxMaPHDUCW7Z8x8E8rHubnVoCTYVoNM0k5pmYETALc1YQWOcH
bQ+x3J3NRax3BfPaZY0gIcxtOKmejIJPKFIHzmahd9+8jiXIGEGecap5BNbb
1AfldLPeKSjkH4vLN2EjcO774fvgNhkNOAV87ByORv6B+RmDh41AsDPfSfIu
GW0Q1BeTd/ij4jUzXWd8vtpqIp5P4zoHc/de6p1KYKC72NDwwBAC3BJe9N3B
vnNw+btsxAU4xku9g9vFEJ6NqP/+iH2Bmic0puByLMQdnuAZ/msAbZZZJgo3
yCg7PKVdnT4NvAtmX1JkGIDFOTfuGexT1zfjTA0ar4La2i5NEwYDODnf3LiM
dV5phanZqCQP5i8XmuQk6YPxLrbP/jnYB6/Is7wzKQI1Le7g4Z960Dy0sJSa
TEat8b0hrk9LYVNMZ5eUsx44dlHb7cQ5KykifA+jYxWw7/1ctEtMF3xlmBqu
O5LR1awgHo7Sarh1dNbQJV8HXGuTQsKM8XM5WzWxN9QA9UhWf+8OHbjXFEQl
KkFGQ7WH9ekEsK6+ZWaNIWnBk9GXcqlYt00i2N1yc+pA8vtjeo9ILTAbsLzX
zkhGvdYUE+PP62DpSWMg1UEteNU10f8R97P2gsTEp091cPV4ncXhTk0YUZ9e
l5kj0L2AqRK+njqA3lkJuQuaMHlS5SnnEwKZWjZ+DAquA+6u3VPjCprAsd/i
wd16AokPhD7e3K6FLsmH7KoHNGHP8b1NUikEYusvdRTFvpOnb3irbFsD9p72
MZ7wIVBk38qud1drgGCSn5v8owFpb5g+Pzcm0Pi8xbldVdWgP/akvm8/5sw9
QZNm8gT6fb3/4y/sg78/Ka0u4Pta+7IsZh4hEMvtoE4Z80rgs/l550aYJpQm
7G68sY9AQy38/eN/yyCax/mP4ogmOJeslY5skBB9/ZbEPFsJOMrJZeXJaQF9
uhfHoXkSctzX4VewqxCaGM1vRt/XAudbs9tZmJOvHe9LoLK5CtcpthKEN7Th
6xWBryTM23cUpbLK6tKgqfjNu4i7OjB9yNxrrI2Ecj5EPAtwjwc7Ux2O6Dhd
IFdktKncJiGFgdfnXfeGg8IAm+ouNz0wUX3QrXaThC4UqL0skHQHdtGvRrUW
+tCfdcp4vomEbvEIpN86Zoi+cA+2jVgYQJNi4TZ3Mwm9lC6j+T4eiKb8B991
4z5nUVMRJ98loexPC7qOY9GIItMqalAZnyM1XSH9RyTkM9z9+ytjMopmZRBg
HTUC3W9tu4VwHlFajqKmPpaJdq18V212MgYLtXv3gzH/L/95o9S5nY3SR2uf
nf1pDA03up5TrOD5v/KysDtbhJrWJN7s4DOFg/Ufr1DvItD1dZVgW+1SdE3H
9ZvuA1NIKvKbZTpMoCVf3TOaf8pR8FeqLVdtMxh+7DCao0UgnxKb5tRXVUgq
+f59UztziDkssOOuM/b3L8sp4c+qkdZmUpH2B3O4PH5Jg/8Szmuauq++ldQg
TWOBMnNjC2i87xjYUYx9n9mRax5zcpyF4AxDpwX4fbrPo/iAQAcT87I6ntai
9/rfe9g4LWGIfWiv5wSBbvDOHNrHWYc+d7uw8Ptbgovlg1PU6wS68lsq5r5m
HTqbrn79V6sluDN+sCX9//9W98z0dmnUoSP7vrzzWrSEdKluI+PDZPSAXuxg
2qE6FPU2WTyYwQqc3wRdShcgo58du89rdNQivjRORnFeKxDZTsq5JEdGBpfW
iFzpWvSBMlDlHZ8VjJsdVNmjQUbnhM44K8XUoDHlePG3TFZQ7CYVS4l1/vat
hSHvmmoko/CMrZewhG+PlFlMncjoGJWuXEdpFWpjkk2yf2AJxlnQ8dYX181/
7Bc/X4nMN/I963wtQeDL3zW6eDKaKZc9xGpagr4TL81PVljAmAF9fxLmeath
qey3ooVoPJY6MY/DAjLuvPg2hHVejzNI/trrXPRa8qjFw2RzeBgSs+Mp1r3D
brFsfHpXkVTXfEDXnBnsWKT/6FqN+Zl7hZt0Mg0FZFAzkCTM4BpFRkcx1v9L
+aR9AdVx6IKFwL7BAFO4T6cTaY85X5JGaPlsTyh6WPGT+V+dCdz4yvq0/jrO
HX9eXtp9xBGplg/s8n6O+229ji8I1xvSxc+JNTjAv1gXS7ofRsAecYSuH/P5
yVCn+8WaodDaH7pvz34j+M63/qa2jozKog34fhjHgeca5yi7qQEEDo02Hqwi
oy6Z/TcSRlJBoq19+GOcHij2JOkLlpDRwh4dxTLKq2AkEdP8954ObKjyUnzH
ej7J2j1sFJQLT6e8poVWtCCiUkM8GPujZ9xrLaHWAmiWyJuiltMEk891hGgo
Ge0OuUGVE1sGsypeDr9+noHRK3eEXniTUWjFCCvNZgWsl8aEzcWqwnM2teV6
nMs0DimLn2SugnMXxI9fFjwN0Q0Kb4dxjvv5jbIkYE81MATRXc/6iGB9mLXA
EfNAc7Xq1fwX1dBz/O2V5VvK0PLM/XI07qu/tgUCwUE1sG5plT81qAg5t36c
1hX8//t0j2RPkmrg6/URvzjpk8DTZV78iY2MJLzf5weo1AK7/X5L7R/ykPsk
f5cdLfbB6bceO91qISTyBeVnank4qNm00vGbQH9ttv3FnWuBj5qrUyFCDub0
Bm32fiKQo4wXZMjWAk1sa0GythwoBmrDy14CtQ1lP/03UwM/ebXOq4TIAV1+
kqbJtf9/N3J6T5tHDWTcF0qhp5QHsrlbyMN0AtHFSfsdGawGRrfhDPKyPGwc
kplVvIDz/k6Gwh+7qyHx0+NaPtmT4P3u8KIS5sA7O7Iob3FUQnfl0BbtlDLU
WIlp0okRaFqcQ//3ehlwNDzSJbGdgneqJwQK2Qm0xdlquR5ZAi3kmI3KgNMw
a6XlZom5tF3kjeXnv3mQKOFpV5WnBkqBej6wTEI0q46cY7tyIOiEYt1hBw2Q
Scg5rT1NQlrNFV47JzKhuUuSR0FTC2bO5NrsfktCXWWi6i1+KWC+PdG7qq8D
UYnH/CiwfuapXZsr/BQLrh5fRf5hzjRpCAo7M0xCJrsbZQo9w6B1JijtM+b/
gRze7leDJHTa68jGw29usFkUIv0jzAgOfOeevIPrqjNs18Jk1NCed68+s9Yb
Q4TMcvvHIRJSX3Jyq50+j75ziJROvjWBnw6KtcbPsR890V+7LBGFJk9W9x9n
MINfcV+0Kd+QkDBZNz2CNQHZyH2RHdMwB+0+ryezn0hoaorGgOSdhuqXrHoq
oiyglE21bn6RhD6Jhv0af5yFamVJey1bLMH8afr6j58ktM2fsqx7OwcN+lFf
uvHJCv7tqdL9uYdAyJOScSs4H118MFBvsMcGHnTPufphnm/wG2CtCCtBT2Ku
a6hJ2YHRMn12tQqBPhv/7KVtKkNhhhbDlDL28D3v6aCeGeZwkxaHlroKJPz1
8DD5mANwTt3mdo7DudIRcpn8qtBnp0eGvcNnQXpLtDEY50TbYeOjXNTVyFsg
pF4bOYLloX1RRvcI1M8uZnk1uhpJXBh71pHmCPFuN8a7nxPogYT2b5NX1UiA
ekLv0zNHiCpY2puzRKCERivbdIoa9Nx5NXfptyOQ7VIIrZ1kJKj2x+0WVQ3i
Uesul+ZyAkFRwfDHOP/2+7c5BS9UI/7irlEBCSdY5FbN5uTCfF5649hydTVa
/filyUzaCWSVTKIVhbG+MYrf85OrRoV8H4Pc+J3AnjG7foc8GVk3/T3eVF+F
PixmeAvvc4K/vIuPzdTweTyjX39tpRJFr0R9K5l0hBdW8wpsRlhvZ/7kPThc
iToPW1C/KneErsO1ZvK2ZDR1/oIc0+lyVBGftchs7AiUY9dz8t2wbq8xCIvs
L0UxoPGj9OtZ+HzmzCon5k+lQf5hk7oidMmlwEmY4SyYKhnuM8e5QMGqxHde
Nhe97YvM+LTPHswOxl75nEBGSw7B1cLoKmodOU27PGMLqae7VPSxHjp/0+I8
rpOORjtS9r2vtQHVMyV6mZl4fbq0Olk+JSAnQXk3A1NrGJq0grJszKUrEiZ8
BZeQMKvxaaEVS2Ac1cwOzCWjXccvNb5VCkCXW3sD4mIsgJelYWAf9qPbsnTo
l5cBEmXo/lVCZQ76mcEh7vj6+qjou4KSLlBHqTj8NtEU3jnOdybj8fs+fP6T
8jYEPjdY7XtAaQI1VIrU/Hg+93b9eMIfHAuWCjGtM/ZGsM37RPdcKl6HdgOa
4jMpsD7dRdcYoQ//smCfNfbN1JsfzLSeZkKX5SkefgMdGKgBK4YoMlKJEdgf
tpEN48flvNiVNMHd+lR8ZRAZ0S6O6Gi9zoOmdM4QZgM14GY0fnQM6//Ed/2T
z4ILIfenWK98+mk4vBFGEWVORtzbTWk4UIDv5NdyagsFuJtjzpeuTUaxmiFf
Eh+UA9s1qR8akjJQ9N6/Zq8yGQ1T2GVns1XCZbXgysBSCfBiaplgEiej7kkq
r7/NlWB/t5zqiZIIpG8sBI/xkFHRKnVEG3sVRJ4vZa2LFgBVRUFpexYyMuYv
1LWwrwJaISW3O4zHwP3fkPNHKjLilcp8vxRUBba7j7g83uSBHTWx8l/XCFRI
G0RacK4Cxetf1y0QDyTRFJHC3hPodF96MI9AFVhWxdWUzvNAtjR34i2co9/b
1ggPPqkEOoaHz+OX+UCOlyjowfpfWBh531m5EkZ6fLreGAmATckDk4VMArH/
PjEZf7QCVLvv7DWhFYGl3Jnj5hf/f+9E2ODO+DLwSDPrmkmVADGxjZj/30dR
sjN1cbW+BCz/GZaUi8vA6j+VwntGBIoln6sJyCyCK8Ij9Af8FUCjHR4ew76g
9mPXHr/+XOilVJj2Gz4NsoM/npscJdARgwb0iicbVEM2EmfvqcHR7je5xSwE
ClqQ59+8dwWqXKO/vXunCaNrfUH7aQmkv+Pysz4iGaTuHvP7K6oLrpG/ZR5j
7l2DCEf57VggJ7K05zQbAJ0j/Or4R0K/tBJbzN5dhD1K7DdUhIyh/jTLqZ3b
JMSQ8UKURtQbkJ7/mWM0pnBG6+Kf/D8kJGLvmjQyJw2mwaO1lRtmUHGatyjo
LwkdMcp+EjrshiyC0963LlhAp2ANTS4lgZT+cr0yWQ5BBnk7pvWmrOCQ3dv5
hb0E0r3JOM1mHoMGpzyen3puA9dUw72cGQmUfo1/2HVnErq41mtr12mH97+4
dgn7I2NI1d7poHTUULJ5263SAUR7W2K9BfC+PIu8sDqahYQVHzhnn3SEiJif
632yBOptYnt4XSEHdW4/S2tjdwKxGV3DKCvsy1IXs0SiCpCz9HYU20NncFiu
Ts/0JlDm7j9VVXpFaLXz1lvvCy7AsvdO2MxlnCvH6Pa2fipGFz8PWTayuwJt
lm2HZh6BNDl5It9LlqLg90lfWVpcwTijVvfKDQKphDMP7D9ThiSUkwVZJN0g
3lyuIxbzBiX3u5gZunK0xCpTI17mBtYfu+uJdwSi97spFHS1HHk39S1xrLiB
ZoI1U/kKgaJIEWFpw+Vo7GL3464T7sBm4vPr+i4y6nRWTMvvKkepBvV/xAzd
YfOmju55rPNTHWvDLefK0ZOeeuY+S3eouvz22j92rHvbEiebBsqQzkyqB62G
O3yf1f+J+MlItEz2JfVsKWITvz754bA7mKem3WWWJCORg0OrO9tL0Nr0wynt
V25Qtl9T1kWJjDbPg1eSfjGKGtctaQ10A2k2LuoDOBc4rxWyitcWooqWzbO9
v1yhVFMnS9KSjJh6JbIqGnORMKfbq8EOF9grJEUV7kBGbAOq/Z3O2Yi+NzMn
ZNsZXvn4T4+4ktHbjFpnoflM1PFzuIdfyBl0n8z85fIio7SLSrQ8kIr8/sQt
fVBzgrkX0bROfmQUyMi28dMxAd3J7jo/ZOgIHNMKzakBZKR9/IjmzZbLiKd9
Z1lfsQO8EB+tybtARgfbrUlVXkHI4Ml55sBoO/jt1PXyEtbDcpon6yPMzkhB
2Cf0sIUNBNY8ttTA9aXEssC2VFWw1LH753PUCvKsd+ow4HGufy+SulPoCRVD
vRxe9BbwIKB4z5w/1vMZjZr4A6GQXLz1wOCPKTRRtq0M4bzzYTZAsjIxGk7J
RY8sEsZQPD5X9Nzz/+8QadmEmSbAVmll1K5JQwjeJOduu/7/e8tvWQXzKXD8
45fhyxu60D6fb+GIObzW+vOVS1JXIFpIT8dEXgtkiufkdmMOp6BqT7IgZwPL
I2WP42an4V6o1ydPHTIaeHJxq7AwF34GiVzeilCCKtNOQkuVjDpoqmP37c+H
xZfPkp2mZMFtX6DsPQUykqmwmJA0K4DEUvWfCu8kIGu1jusp1u0jdienOVwK
4fufSPv8dSHwi+wNy8D9E3KEotxSsQjmZ+7tvl3AC+L6b84cxVzBozjquP6h
CFZutH9VMWGHUUPli/nMZPSivP9OiloxCPda6jL4HYAA90MfdtCQ0Q3Tktlj
wcXAl7Plc0CEGjQKjj8N3UFGG2W/wsz8imGZOVGqqmUncCxcpWclE2jIRquO
SaIYXAxWJbZDdgH51EPPmikCbUtJEKNdRRA0lS8YEEUDCadNWO8NYf3Z7SBp
dbgIunsO25vaMQOTaV5d4EMCybguc39WLYTBuFMExV4uiP51JmyzkUC32/c6
k5QLYPrMvqLHlseg68z+wQ9pBGLep3RHpTUXClxPSqrzSsFs/Nlv3jjv9/br
xW/K5MBoc/CFCUd5qH7maysWSCCKN27t7PlXYaktKqZaWQVys383ldgTSCAy
zjp0RzoMHhMJpXutDm7ZP2VczAn0/AFZRvN4MkjnxVH6XNEGGUoHixIDAnUN
ry2d54+HJCkjiyuX9SEsNVpBT5tAjXKSbhp00TDfUsrM9NwIoi4QohHqBBJu
aldx7A4FL6GyD+prJtDQEXtb6AyBXjO/MjSv9gNP9shWVwFzUBTV8rZRJVAH
67xEaYgtKJlafDb1wPm9kk+XCl9vXM//a6VIHoW/uf9sstkaPqC9KcJ4/Ca/
ytlnDS4otcTStHXLFi741j/q0iLQRv93p6HVADSoPKkVo+YAfddbFtv0sd6y
HbjiNX4RhUwXpAeoOULssOWhQlsCRfBYvTW3iEeiod7ffoQ6g6gCq7AT9s3Z
/nWdD71JaIx5nXo13gXOGvFW6fhhX8tSa/qznoqWjId8SxJdYeiUTA9vAoEM
fo5yVOhloZtcA37Pz7pD3nr7uemrBArepz9ffvkqYt3/SPyy1Dmwf9TaaVuB
56Pc1jSelo26sreb+dfOQfCRLNEDHQSijeehoRTMRSPP44k5GU9I1Ey+wIj7
Z7LUjNH8fi5KtZM8ytLqCVPHNkXMMFdcXWNOrTych8Kpqj5FHfYC+sIVzYff
CKRzoT81wDAP0Sjy2rO5eQHLn1eBvJsEcq5X3WqxykOHvzLvZ833guNHUtvk
sJ4fiJWqapTJQ3SqpPfvbniBwYWd3IDPheN5T7+/X3KRU8jTV1t1XqAan67F
ykRG/6YjP931zUUdfT7FRvFekOf3Zu3/92cyXGuPFhzKQSmaoye+a3iBttS5
8J1HyUhs3jacdUcO6r4fIHSE5Anx3199CcPn95fOT74sxmwkRO1zMTTcExIc
Wql5pMhov8NbqvGCTDSgIii1Q8MDMuUki1Uw/3/av/fb5EY6crF+whqXdA4Y
Yw9RvMK+8HfNhsfxaCp6Qapo6LvjDmYJ5KL///7beNj/XMxaHIo7+vd43ogr
bEoZ0mlokpHOyjbjiks0eu/Ce2Oh0QX0fF6Jp2GeHE26+dIr4CKiU9zYcS/Y
GXw+NX+h1yUji+Z42iubAUhY50sqE84pH77/kXmO69kVnq7NC66IRDudGPP8
LMSIzWj+X59i72yLuamJirt2WCgI24Ou8wH7A7j+vSd4JeaRMWysGLvIXbaB
X1lvHpXg+w5KUXFN6p2DSd3+zvBXlhBVyVpw4f/3H6ayNn0qDwQWOYPOnWLm
8O/LAqkaP1exgRjBq3kR+rbV1KHQBC6kmHlLnyaj8Htu/85mXoZ5v/CkwENG
8PeXnKQ05mGhL0fy0ltjoel6kZShiy5oquxub8brKfxwVrHJJQFyc4uNZD9o
gPc595w2vP7S40XLLmNJUP7vLpVltSq8d2xB5qJkdCtMwWFuNQWkfk9SHUtS
hoqiW2drMD8rFl5Pu2iSARy6XayLweIww34l5QIH3t+GuraAlCug9O3OXH/i
cbj1bizlyEGc75zOB2/6ZgLl+yHXDA4OePjlsPMjBuxHF9OGH//LhCvXlQ+8
t6eHbYUvw2bUZPSIb9z/NncWhKU833cwZ7NL4PYI4zYlGR36EurDdigLslaa
k44qT3XJUEY+TMJ97s3cc9NnNBM4no4cDAh522Vyq0fO/zuBqtYmrFZ4MuHD
u5TK7R0bXZsqfXfHpgl0uCE63VrsCkTJWDs/9qaB9TFbve4JArn7ORi8/5kO
z9ZNBW2Y2cD/tMUP62ECLV0aaJGNSYO/wr2rcegY6HVpu03+/37X8b2cxFIS
PLld+eZtmwy8q+L6utCC+T/6dMH22wSgZO9Lry5Qgu0xmfvz1wlUufLokmB5
HFz7uDviEZ8qzJn5Br/H+mByRMdDMj8KBF7tWAtf1AHhrw23P5cQaMBanTI/
OgwM7i/IKT02hMKs5Xc/Cgnkb/fqVqPRBTCdX3lI6WcC+T98nJgLCER9htb7
Kb8PXLokG5jPbA7tlye5T+Vjbpws6t3d7ASinyiOaYxZgu8/A+9AXGex8DFo
PqMPYm7H3gwX2ICKXYN4LR5H705Psd2wLNITfR3Qfc4eJldsGYeLsI8c+Nu0
4m+NuurbQgw5HOGItUbCx1IClfpn7FCUcUchBW+Xvsc4wRddP4rRSgL10VV/
qT95Hm2YjLGETjvDoScXOdLqCNQz0Gle9P4COrQjTrZZzhX0+Va8BPC6efG3
Xdd2jkDJL6mkcx+5Q49olMT/vz/hG27Zmi+7hLboy6hlZ8+Ba4eXECdgndwS
Pq/9KBrdvchy4vK6B6TZ5C10jWKuvkN3v2MjFt0zF5huHPMCjuC4gF94f3N2
PX8w0xuHWFDMxmy2N9hsnhax/oTXP6sBXbOMR9/muBTi5HzgkUiw/LOvBBKc
avalaotHjMNxZ9888oHk4w8oZTAP5FDOyuZ9iEdjNVNxEVy+4JJvnhb3i0Ah
MlzEheF45Px6fsDGwReYXdQMjCjI6Gzo5inTlHi0QSOm2RruC3vU1SmVsA67
+7246sEcjxRYTEW4LviCIM+422+cN3tjq6bc/ePQ05Twf0mavuDTYX03Aevz
bOFBjuDKWOTd5Tmv+MsH5noDV1/Sk1HmJ3lN3oYY1F2dtfkxwQdso91pJxnJ
yKHtD49DWjSSC4zM9F/xhhuxt6aKMRf9oQh+87j0Eqo44uSjpeQNq3z2avsO
kRH/7nAxq6UIFPKGa4XJwwuc3h4RPn6YjHa8Y3n0luYiqqfad/JliCdExt5L
s8LnfYzIZLP6FogUaBN+lWmcAxE+umd2nGSkBMXz6Z/PI4HiCMfzPP9RdN7h
XH5hGEchRZkRyapIKVkhHHvvvffMCi2yKVv23qsiNMj2EGlYZRVSlFLI+83W
/J3fv8/1Xuc95znn3Pfnvq7vcAXtLmVXJsxpmvfL677NeqCGcjMljhVnoLqj
bx2C67VGEUJan5yQ/CrrF/l7TqAoe8e7ANf5in7RX/5uhbz1hAaK7Bzhwbsq
1gBc/zbzpeS8kT6ef+N52n0OQD0+F7Mb1+WPnLbL0RZD+w627f/saAeh1hXJ
xng+EYHdh5I+S4DopXCXxBprSHz77JYbnv+3P6F+DJt6wOjESEu2aQEra3z+
iji/HBvxYG8usID5N22ap9TN4Mab8aRF3AfdbJflryoOILPsFbZ42xi4zt/J
bsH6JveF0f/CXuxz/46W3NHRg1G+4e5l3OdrT69ReGl5QT3jh5iOUk0gcyIu
U2I/fVi68U+Twxfqc08cVJRRhRjKubPkWA+1SrT50+v9QPZ0r+WDURng2Rvy
k0RLQifUYj+d8vCHER2W8xc5JKCgmLL6w14S6oxopHD65g+a9jfpyESFgTTw
RXx0DwlxeCayVp4NAOt9sdw/dI7DXOYxrddUJHS7sPDwL6UAiDJfa9LZcxhi
k16gD/gcnvpsOf+TNwDOkl3f7HXfD7z7blNS7CIhM+156fbX/nCtcYaMtLzd
+Xeh7Igc5uTTddaf+438YWyMNVTt90jnK17qY2f+YX2jt6rhrPUDy1DHkFs5
BZ2p3e0DfL8JtMBilP1n7iL8jc4//47rayejstnJ//+nu7NBVpx8xRcGa9rz
HsMuKCDtZ/+2ibm3Ly7y25w3bK5dkZ4vZQaaSSWdJ+tYh88GKZTd9QRpzyfU
I7k8oNPYor+ySqDRT6NmWnoe4Fq0OmvTJghiqsdjfHCeHYckwYMzrrCVqrGo
9loEzn6mEFLC95e26N/gMRtnIC6oulocloJzvIm2ngSBnh27teI76QDwfvf+
eTZ52P9mjPvzCoHYFO2vyjbZQmBeNJMHuTJ8GhrwrsV1qloVya+TFkA6vpc3
C6lD8CaLUheu50aWv7c+ZQLH6FN2pb7UhuDFkEdsePy3Sv8k33fqw0H5EEmf
AX2oyFn+eR/Xp59JNiTKa0AB578AcX0jSIhOz4jE8/wo01nb3KYABeKJNhZL
WM9Zjhrd/PH/56tn5tpoJaCDjbLEIcccQGgoqAH3weEb3bGq4aNQ0L4cWmtg
BYUiPe924759P/6lZ3J7vrPx+0urMAZb8H61vuazQSAeo+F9I36HUYKChtZu
D3vwYnpCsYj7Lxl4oDj43glU8ePVZGufA+QrKZz1xvpGbZ6V5R4mjIobNs3+
HHGCLcXXNQTex6o0lisy7CIo8c5OA+HjDPvl8rrdfxFIeo+TvvODs4hpnyBF
3yMXjAHlFK/weSjR4T52tf40mm19mPZy0RWe1fLacP7FfoSiFvboH0cJBas/
nRjcYaakWkoDn6t7TOVWDIwsiHYP0yz7MQ+Q/bGieRzr6g+Fi7e7tcjBPMQ2
tpgPc+mBO8kpuH73riutwzz26bXVw8N7PSEB8ZTM4vqLuQlLtlkxWDz8Mqn5
rSek823xMePzfG8+YCq9GcGVR600pQlY59/sEzuB60fztXwdi1Rgv9+eP9S8
3hBTMe56BNezcw9EimZqgfZ3w/jqPG9Q2WAbX8XjD1SmrwkN6wPH+bMBN9e9
IevVNmcVrqfZbP626DeCftpIt3enfUD3ra6HJK7Puhg/dK41Bam9Lg1nNXxg
sTTqlTFe73TNpkCdkwUIjXzRMVDyAelXZ+78/EMg4fcL8ivvrKBLPVdYm9MH
TlmkTLjgfrpcmzHx32MLsy9usQe+8Qba4ruTeT8JpBieoWsxYQcD1y8VBvh7
Q5X9L75ivI+edJ8qvuTbw6J7fhI74QUGSV20gXjf55K+shUecADX2/vGknS9
wCOrIPw8Pj9wdS/TT+QALz7dI+PK8gRmY++4T/gcHkzneLko6ABy02J6F3sv
gGpT+5lAfJ65F5eb9AfsQfRb8br4tAc8LLX+sxvz2NLTVbFVbnsQOdpmZ/TO
HfoCDeZvLRJIqj+vmV7HFsi+jO5688INvl12Pcr3lUAanUtBGU1WcO9ex+hG
pSsoaAUnx37C+ZpF0qiy2hgYHpuYB4s6w1Ss8xNvzHWe/L0ulyT1wX9Q1fHj
N0cIDu8/EYH9XVTdakrVXhX+jq+MjOc4QGEk46d+nN8dn87F6LlKwAeJqXEy
JTzffNf7pu8IFNRwUXPhBBk6eadbR3DCBrb9zr07MY3vhdzR4URDGZQfOOmZ
xG8F22MlR3RwLjurDaMax7RR1afj9xPDzIFDgDL62SS+d3FMuoOeJmhga4kz
8JMJDHkxmRTj+mVmn3er+21QL/WRmVhzI/hDc5FsCteZEh58arrkiDQCCg0G
P+lDNIUYVTAe36DmhXJVgCtStKk4aMSsA0e/+X+OxfNJ8JtTbgq8gLbzVCTS
StShsHJ93y68rvrs1vOfr/sg7s8n6k9fVgbX3TrPl94TaC1FLtz1nB/iL/4o
7pMnD/x7r8kp4b6NWd/gcuELQK8M2emXz0hDRO3tOUnMP2wWOSYX266gj2PH
y4npU5DtKKjwGu9X5rK+c4fVNWR+aeZ4bgofXA/zbB/Auqf1+sOs+JtAZOG8
6DtBxQZfT303P7aGOfZMt6+WwHV0/IeAVi8dDcTzC30b3SLQ1fV+u1qNYLRS
JuZ0dG6102ub4+D/+lA+fKTNXCIEeYpT//1t/LTT4sei+B58705GJ9Hf+RaC
DmwEhjHGtHRW1w2LPcU+pTzQPuBoF4pIZCkCBhZEJ4zd0szFfrdSfmm7Pz0U
rVwb0rF2oQJ1kot6KM4XY0w6wvejQpEmScDzvdBB4HzbmOeNfXb/sYk7/qdC
kWWEw+QpJ144HKhlZo99eeXvKMOhxBCUgIZe8fqehOsyZDp6jCTk9EnqpGlp
MFLO4jnExSwKCVdqmEVZSMj6qNmHNM/r6KrSywgRGSlgN5bh281GQq2VCk0b
i4Fo0pVPLIZBHg797bijh/lELvQBRQHdFUQ1PRt5dEcNhB1JlG1cJPRs4Hou
TWMAEs2k8nllrQ1dJ1hKNnC+Nqpyql495IcufVVRCQnTh715a9ntx0jI2f+w
O5+lKxLyifOu8DQB60Oz387j3D1kF3RZIssOCS4Fhur8NgP+5A9xFwVI6JBt
echfMEATibs1gzD/q+/mkjY5QUIHn7uvMrgJIm+Oiz6l52yAPC/A4TOup6bd
ecSgpQY3jMp7hd7Ywdy5cQ5OQRJad0uyL9iyBHS0MUNF0gEaT/Jp7ODn77XH
9a8ruUBzZUf9oTBH2Ku5lXsV169VHXXrPeQNsS/L/Ww6nEBizjAvC8/n24md
qvzL/jDN49DrQ3KG+qbtFhM8/5iYucs/DK9AkXGBzVMWV6g11TdsxOt14p/U
S+cIgqW39AXbgm5wLfT8uhXuj6SwfUF3RTjMHJbKZzjsAZeH8gzuYD7sGhy9
rqAbCQdiO4+sr3mASOqT58WY97zK7kqdnY6C8k+mRY2PLsCVzhp5NbxfPq4f
yS3VbsBMyLm34xaewCswdKUCc10us0BnZ/JNCL7XrbD/syd8TVFe66DH8zGj
aamqjYFx02fOxsZe8DZh+GcePlfB9x/F3y6Jhbd2SrnTVV7AHbQYqoQ57XnZ
e9E65zjwbfNlP/jOCwoiTtJ24fPc+eGpHvVWHGT7915rXPOCM+wmwm5Y/5Xi
JgV/WMbD8JuczP4lL9DNIs9kxvcroZzpgllYPNRMP34t3e0FXCt+laVYPzme
TGQHOcZD6a0/n7IueYEF5YNQAawDxZnFl9GueDj3Mm2pl8oLDEPomntGMRfN
Pv4j4hAHggKSz7auecJns8EjyS8I9JjgL0kMjgXXq6MdNQMXAERMuDgeE2jX
UcGHlcQNeFBCRT3J5QH05t/JGGsJtHyhsvuoVjS8S6fkS+Bzh2xy4CypwPlu
ME4x0jMSauh/f+djcANZTuas2UwC7T6QZHOdMRhOP2q5nNbgDAn1eT2dtwiU
TAllwUeuwte9iWqUF53gTpmxc0I8gfL6/2mXT/jBLLNHVQK3I+jS5v0zu4nz
Zsy/X4qJ7tD2o2r89At7OKvyh0osikBTPl42x+ct4FI1lxv1lC3wnmi9dyoC
88/WtyP5dFzwDD2OUj9iDWFm2x3a4QTSZ3cMl0wwRf7PaIoMXSxg5+1OeAGu
d9Abr/fXuKH0hvl49UZT8Ow2zOaJJNArcbsj1/f7I77+YjURZmNICtCefx9N
oH0H6s8Uyl5Dp2+PKPyIMQDt+uKrY7FYD7cT9biNQ9HOj84fHqd0Ifx3a/C/
JMyfKbkZtjyR6OTq280PsRqg9HDitGUG1n+hkgOH/kSjdz/u3sg7owLddEdH
pvMJZMsx2/OwMQYxnG96ryWoAFcfX3x4DffZMrvXp1cpHs21FVTO7DoP031l
/Lx1BFKe0nY6UpKIHD8eaHELEYNXNEElfc0EUi+e/zjVk4xSHgcltRcLwZ+8
PQ0GvVjnC5vMJY1T0Neaz5RH6I/CZIip9L1XBHoQ+mzuI18qcn8V6SzewwZu
7CVe7dh3gj6EE9xDqeh6Jl1JddZe+PM3k851iUC8IiWhF/XT0HXrlRZWra3O
63vWc+MxN4aKmheU3UlDM/J6XyKNP3X+1HzTtRvnEb/+YIr5sTT0gJX8cdzI
10732kUxe5x/r60uiT8dTUPWn5oLfob96+wxT2t7+r8OD7eSKVakodP5VKJP
6unBSDD2FS87CYk8PMf1XCUNiSTPBHwN4AStJZ+bzlgf9oyrbsg0p6LogzMB
l6j4QbWApfkq1p9QoXM8FL9TEA21wYZDhjDs5iaT1ThDQj9zDj3ZZkhB47+u
kz2NkgCN0QruPnGci2u5Mqi2klDahTbXi4qyUCJWPz19noTaM47477ucgG5a
ibhV2CnC5ZG35xNUSail/dPLvzduIGXZt39zRzRhV63Irt1aJDTI1MJpfywS
BfS2HLf30wP90FnzMV0S2mIKcP1DH4LmaJIltngMwU6++TxhQEKFXhJ+gb6X
kdJY0fXpImNoqqlz1TAmoc3bk9nTpAvoMSX/p/cCZlB5JSJk0gRzr5Kpuf0f
Y2T7J1rYrsUCKGx9RHNMcX8+RFp+ltIAg4x3MXc1rEFc9aBnOK6Hnwt+saDl
BilaSxH7R23BRG5Y9xYeh6Z2zerD8UsQyKdw+vpte5BaHLHvNSIh4VscdE/S
g0Gr8e7loGkH2FRbiOTB85RJjnIRxPf9tLHSFR8KJwjcbbxRrUNC3HQpD1S8
bkLh2WpRj0POYBl7SsdNg4QSr9tHeCnGA8M+7dlaThc4b3rK0U6ZhCbIEw2k
PiWBWcxMQTOtK8zQZ4kVyWHO/xqf4VSWAhExt7RV5l3BN+xRv7AkXu/d2LSF
02nwdvi7k0mZG5y+0E53/CwJ3bma3jqXlg5xzPrFYirusDZIk5aM/UiiJOhR
wMsMsKDhywzud4fvrak+wficyJoYsYuMZIKkdAsXq5gHGHU3ku86REKLe1TO
Ct3OAlu5sFIU6gGVrP4tElj/5etinm2pZkO2GatQ1F0PCNCByufUJCTWH6bo
W50NZ553Xfzc6AE5Vt2W3jjvaG7tEh54lw395h8cHW97wOpNWTiGOVlBtfqF
1Uw2aKFdFqZ4/PQ9+e/eY95zOHJcaKImGzxKhsRNznvAG3oh2o6XBPL6wB9r
o54NuuYdsfwf3GHvg0z9+RYCGS8b2gQ/ygKO7c+6zy64g77/TFdeLtZJf3rR
ip0MEK8QfCkp5wa7T+595o11tUv4asyDN+kg17iSNxbrClEm8+wMwQSyv/q+
0TQ+DQwZu9ledrmAvNeBy/KOBDqWTLsUtJIMtE8eMHX8c4L5U11tu8wI1FbW
RDL3SYAyd9q+S3udoOVjWCClDs4FSY5UVHUxwJijF7FK4wjbNx8ss8sSqGjR
a28kYxjsSldWGX1vB3f5BF8anSNQMG1xvaj7FehxfiLM8cgGjppfEmcRJZCK
kY7Yr/ULoEybRJcQYQWHzPqOeQoTaMNH6GaAhwEE3zjMbqFrAd3O6z22Z7Ae
Sg3S9uUZIU/t5PMNnGbg4J5jtonrp8aPpmR6eyHfF20POtaM4d3f2xLiIgTa
Ly4z1BV1FUUk2u2KGjMEz+s+TRwSBDIbOJ6XZxOOvvyjP7zdow+eautHb58n
0G3yPTGWn6NR7ItFwU8JOqB2ebXxtSLm23fk9Yt6cShdVURTrh3n++CYm2la
BJol1sUEMpKQz8YXA1puVRg0286YMSEQwwsKsrixFKSVJZ2/3aEI4vPvu8sd
CJQ/oHVm+UkaUq78IRgniSC6UXpsxAf79WhP1mZKBhLo5XsVFCEFWfeXIkxC
CKTLxKsQL52FPnfahDo5iAFF4/2YH4UEOqli2T5Bn4t+7LF8qXNQAPo1qRNf
1xOo9uEJC1+JPPRm12y76AseKGLY6Eh7gvXcIGbY8UQ+ukbeHiz76hCcGbF+
wjCB8+YqTdP8l3w0PiM4o7vNCKEWeh8EcC4wpprhj/EqQGrPD4Da6f3Q+6FD
7D4+509CGcOUmgvQTbGsR89caSHS4OC/TszhL4cnnkc+L0BXe0KiK3Xo4X3E
oI8o5iu2089vHysoQMKRdGc07FnAuWWEtRjzm/PadmKCSAFyMJeJs7XjhKZj
pmJLWLerRa0YchPykX3XzXdah49Cq5BKB5koCe1ia0Edt/OQdhhrY+U3QfAe
mfhzEuuw6J2SZ6+EctAxuhb1QREJkOA0t2XWI6HI8AZ33/wstNa6z4D5ynkg
qke2Pc1I6PF7z8Co0QxU5hj78UuJPPwmv5N00JWEqGeltXLup6D1MvI/nZxq
kENGnajkRULMpXvpndoSkaVzpmd0pSZERqapZfhhHn7qlN3zMgY9WhbSPW+k
C0uRx//sXCYhsun8vT25kajk7bwg6wEDoNDa98ctEOcdfum/Z92CkK/LcmT9
X0MY1+CeHL1OQkmbJfcKUnyQvo47/zA+tyV1tIniISQkKE7IFYToIdp+Nq7R
b6Zg3hmXE4PrV2wEgsb5bMGajlKQ/Z05jPRScT8LJiGGKXVSEHUAcMtT7WLs
swQdFnbSWhDOO2xHtH38QuG+2/4g5XJrKH3reZP+Ggnpkjgrz01Ew6Lq3hPO
vrZAzrp7H+8lEqpoEVWS0YuHg42FSqeY7IH+N6+CsC8J9fU0E8zZt6CaMyD1
6Ed7MBel8lXxICHpA0929+qnwYRv5MJomQOUkMRlfRyxfr72pQt6kAGbSbSD
BUaOQJFxWE/SED+fdvsticgBhfXMnKUwJ9Dvc+s9o47zAke60ZOveWDterfM
lsIZ6CbJGNxkSSh+J71hpLgA3l7KF3jk5Qyq1BHMP7H+u8ki3wb6IqhBW5K8
nc6QeavyDNVxzBUbi1Fd54rhK/eS2elNZxi7eu3zXazzu7t11fbTlICYV7BX
GbMLvCOEQnbTkdDTubRP73VLYLCH8/6tQy5gweNUJU5GQtr/rNIavEpAkfVd
pyalCyAaS8XWLwSKYyMPMHcsgU1vp29ub51hiFxxQmyQQAG7Kue3zpRAveO9
pcfpzsA94j/P1kAg/1fPVRXvFcO6rt5JOUln2LZ3KCjDvFcnrs0bWlME458v
FIs/cwKLKWNyWsyZR5mu3xGwLwS97bUIckUnYAq7eS3Rm0CDa35fPQfzYbTP
cuFUtSOMZY85m5sT6PxVebF9W7nQJffDxJncEcKFmg6nY92rPh4RxZOaCQkV
GmPC0fbQABv95rwEEjHiGLi/Lx2k3EVZT7vZQa3yCQVWZgKlkGqlGkxTQJ3R
85US1ufPM4LZBDXWAbYJA19SPJyst971kGQFqksCgX//rKAzdR8az3yPhkSF
QdpUPkvIYOWjsN5cQY9pG15PO4TA03Klkp965nAlUqOU48cKMmzwX+lNuwhD
zm1XKIJMoT5XkUJ7ZQXVFD6WVtDUhvl7woH1lcYw9T5ue/P7CqL2HqBuOe+E
uF9KWW5MGEKGqL43D2kF6T/x/nfj6RWk1NF1q47BAO69iNTrX19Bv+gD109+
jUACa15SQo90YZTiww3iF66HDkdf0o9FfoI3xOKctSB5WfZTFCXOKfUeoduJ
yYjiyOKslpw6jLPFcgYyEMjpo9X7QrU0xB1XZbeqqgLFrXuet3IRSJyUdCHi
aCbao+P+NzVaEWTOXdzXjH2B72ljNrVpHmJ17eoq8DgPdu02Z85i32yZdwmN
LSxAaWGLIe6O54ByfGHbD++j5HED6cqqItSexLfNuyyKz5FWt/YNAnXfM/j2
VrwEUS1QHm2nOwsSKuuCt4qw371k1+pYK0HnOhzMWnOF4Mj6M0sKzANV/HMX
quNLUWe5yb0aK0EQulei4DlGoBc9TN+zt0vRdqEow0E3AcheuLMVTyIQ2a2e
byPny5CcwOajwU5+CHSJzLxFhXmvxvkclVEZapzJjM90FIDxMxcMfmDd9rJQ
NFeULUMh/u0nafQEYVgtaUmVj4RouZtGd/8sRVfIXTySQoSA2bV9yBPfx21B
epCLK0WNrtaRR1eFgbH297o0IiHDghwJyyU8f9TpytQmCqvZJw1uaeP8zst6
U46nBAmW9oj5MZyDnIJ78soWJFTAtB5ZaV6E3NSVvFKWpOFVT66k4kUSMr/D
y2KYkYsI66oTSX8VoFzUwFod65uODXXahd4s1ClPVXQ4SRn4KatUBKNIyDpn
fmjnUTpid1ekdlZSgyXSePFAPAllPYCTKRdSkFWH46GQQ5rw+e+oNWsqCf0g
W56km4tDz87e/8lHrQPlFlmcm5l4XUahWsOFkWgj/7LxN3J9yDsnnmSeS0JB
b0+/k5O9gu6FpB72jTIAczmueyL5JBQhvVFI1WGF6Eaiql/uMoI7svQ0IbjO
ekI+rpDGAawsZMvrQ42B+c2fz2J5JDT5Tcaqcf0qnDe76PmdMIHXrgNq1tl4
/pHHwmjzo4CNi5031MgMXqrqkHbSSCjHroMs+UACnKqQe5FRaQ5ddB2Kh5JI
KG7opVg7TyqU7Q9Wrf5oAQwr1Uwvb5BQfwYtY15qBiSn8xCx1FbwT+2tCzf2
ET0F83TOoWywLM+1N2WwBhEhr0Bud8znvy3/uiQUAsn+pqTmSxvIG7xTJGdN
Qh+lh1lyV4uBkqZikPC3xbwRkxyMffZWZ8sWibIUTo2ERfj8tIWrqyuuvxRI
SJGrIOL0t1KQ+hc/vNfeDroGDj6fwT5+ovUiQVNaBjOK77x9yu3gdVSDo9ox
7FM0MQ/ITpVDwE09hspeO+D0ooizPohz0I3pkzRx5fDj5v2PrLguk5nSq4A5
3IbW2SS1qRykDu+ajCmzA/bCtXkJfM7r9ZNmruN6oHrOGWoHO3j648IQ+wiB
Ll3l2X8Yj7M6u3Z6lcwOiq51iF/G+vz+IyoTFiqHwwxvQxaibOHkv6n2uGwC
6eUz9c9UlIHvsu+priUbaApgEMu9TiB+y7mcqh+lIDixUBUjbQMlE4UCc/YE
yn4m8cuFpRTUvgk2BfhbQ2G7c3S+GoFkOt7fUGMsgXfJxk3vMq2wb6qwnGcn
UEhTUR6dUj5kK5qxUt+1gDOegw5hVATq/6D+mz0gB8QiwuzmC83hUEPz5zWs
b87vzeLWPTNhOmc4xCPWDJwoZ+raP68gk9FmewWxNAjkatQV9TSFIgqPP9tv
VxCfRsm+lcoksCiSejylbgIGFI3CPUMrSGrrcFde0U2wb5aZJPiMATm4NAs/
W0Exn++fGnwSCtr/0p9vYD45cjB+j+GTFVTpGHWGc9MXzsb+ybB9ZwCMKqW3
RLpW0NY37xsPdIUhYkqqO6ZTH9Z5y2vf4vrknXHfIjIvNFuvS+ejpwc7KKpG
pXcFXZdapT2yEYyCWMu7TovpAMPSu4eXX66gy64LvTvvbiC6E3tLvc5owd6c
gad2oyvo0quLL+pZk5Cb3dEaChUN8J5Sadp4v4JKT7/OT6ZLQ7HqH6lirqmB
jmfU0aPYL46eEDXG/UHOGRP+qoMq0Pci8clHetzP5EadtZJ8xH1Nmor7iyI8
1H9PI3KcQPNuCfdFPIqQqSPnFdl6BbjRKUidg/PLZYNah95rJej1iw+KGeXy
0N/42XbBlEBjfiTTwdxS1Fu6aBcdh3B+GWn87of9kaLjbmdGGTJ0435BKSAH
X8LOTwUkE+hsv/HWR9dyVDjK+NL8qCz49u/6LXsPv3doq2yQrgKRdRg9MwuT
gWL2hxv7+gk0Ue9T6hRTgbQzKemopGTAf83/Ti7m8PaY2wbzryvQ+G76+AR9
GWB6YPtYj5KExOlHxVeXKlDsjOcekV4ZaDp0UduDBevPHkPz/LEK9Ea+S9w5
VRb6dtgOBOD75Zsexu2QUIEoyn6/rmuQg9k3gUUq4pgbmUJNEH0FarBiO/WR
WR7qL7Hyt+Cczm5xguahUzkS86Nu7t6Qh0cvf72qNCKhf9EtfK03y1Bz8Xdx
sp8KkKe48E0H82FTgMo7ccUS9Hd1qJtkqwwySR+WOzDfBjKfq7ndWYjeuGiy
/WtSgVXjXiWGGBLiVy9vqqvOQ07Vy5zSx9QghnTkMj/W4TuuzM+a9LLRLrsD
+qJl6vDp0yvaT1hvgwnXxs+N6ail7843E0FNKDmUflCwlITqmehinAZuoaKf
1XabzVow2F2U9KWKhA44v31aNhaDJkSLmhw1dOBptmgnVQ0JDQZd22MnEoao
K3rs1yZ04evHX5khtThfdO13Lez0Qm/42FmTT+vDtEn3rGIdft4k6dd9dhV4
VCp0o3NJH1oTg3yN8PNZvCP3ZO4EgLma2J/tEgPQsnEXeFBNQrLHXQ/+ko+E
8t4sSgNtQ+i/2PbPEc/noTf/zkBEPKi3cDpTLRuCkNauyUslJDSDLJgs5FOB
VujDenyoEfRueBlu5WAept2TZcScCUFP3YJiKIyhz/9QUBXW89qEs2PjjAWg
5dw9+3DKGAJOSFlPYR+kL7CMGN0ugr5KPmk7ARP4LXxlng7vS2R2QJ/7YAkc
vVRaPuhqAp/XbzPaYD5/1uoq+GinFLp/7aOYzjSBG0VehZ+NSai4L7xo828Z
zLarhac2moDzhnV6H85ZqQOUDarTWJ/9uhKP95nAd6NHv7kkSSi5nrh9JKkC
6ukOam0/MwH9cIEwxhN4nJ6kxw5MleCocC4lvs0ExJhvUQLmcEs+OxZL70o4
hU6ER5WawMTpS16qe3FeiJRvfpxXCZLFX+ZvB5mADUeiR9oG5hwpwX2x+ZUw
k8Jl8kbNBK74XAoawrmVfOlv//mLlXCVwkp+z14TcD/5ijKsmUDg5iecc6gS
dM2Orys9MYZB7dyRD3kEEurZHfU4pwLqaAdqyvyMIVzamUkwlEBsWpN2f1bK
4XlOZovaIWOw2v74Q1+dQNQpxMM//GUwYLW/mMnUCKarBN1TzhDoGmvm7Vf7
S2H3lpxuzndDsCVqCkPZMDf+5jjx5W4x7Et7WMMWaQjnNsdlKDGvii3u6LMy
5UGkuvKzsioDKDtFRfUJ69gvjpP2Z35lAYWV1ac5SQN4cnfq1M/hFXS+XQSd
aE4HM86j+6MG9GHpFM0n0ZYV9LzoGL9Jehxo0hT9SN/SgzazvkPBD1bQMCtV
NLtpJOyVcD3tLaIH2yS1bfV7KyipStn1w9JlGNAcH+O+qgur+qwa5XdXUNQb
Uev75NbwOzaOhf2ZDqhWqL++heslpH65R8t2SIaDcW8Bnw7YjSroHfh/HIfQ
oKmlK0joywvNriRtGCrZvHYEv7e5dHpBbToSPf0R2X+ZShuiXmXsNDavoPhN
HmZh7ni0wXLkZ1iyFkxmD/i8xD6y5wPHmdv5KUjZ2I7jynEtWHnJ6KqN1+vo
OT/QTpOBLKaKPj0Z0gSRsguWArg/g6XSvp+MslFtrolmRYwm8E8FPFIlVpAk
Pb3SYEAeete6kHPSQBMSI6v6EigI9G1MicfGqRDR2Hs+lj2pCW/ohqffsBKI
8ZjXIfP9JYhWKOBROosm8EyRS1DjffzMI8LBrFOKuqzp8toOaMLkfmveVezX
C/qDouc9y1Ak09GYQ5gPjYv+0nk7EmhtaiHcCOt5yKlTTN+ENYGvsqNCHZ+f
uvSeqoMyFWh74QY9MtWEZl2ynwY43yHhpgPXFisQtwV91b5YTZh6o9BhiLn9
SH2AYY1vJVqVPD5w+KkmLBvGXWd4S6Cd+Te3BV9Wond1wWd5aLWAYpicMNgi
0KOz/UYd25XIdp0rscZKCz6xDddd2EdCPNuhH0J+VqIROWoLiYdacPjCgygh
DhLSEBv6+2GoEs1FX9wrsF8byK6oGL4SJKExs/DNxsuVaFPGveyNtzYYslUG
npUmoVEhRVNxogI5tRQ9Sh3WBkUBUcEzGpivDMPe/DxfgfjI90DhWR2QLbzb
etuMhEIKzojQ2ZSjisa3s0ppOmC0tkoR5IK57o1j63ucI0rJL7SNEDoQmJrY
dsOfhMqU9xTq8JaiscyM+Ep1XdCkWvhQE0pCT/55C6tkFqPwI9aqgvm6sHJk
7fdoOtbtZ3lUau656NYDddcofj1glGdsLC0gITvGHpGqrUz0Kl1F6JmtHowe
oWHkrcB8yCJ7qcc4DZVfOx1QFa8HJKPdFIr/f89aldop5EASIn+InilW68Hn
odWRH1jPCz4J6/iK3EBSDO5viHY9kJ/iuXjsIdalBc4/o+pBKP72TKHEEz2Y
Ad+0sUck1L1Bqaw564Q6n/vef9OiB9PiD+d+4vrEvYzR/N8WQL7qXjJQrgds
IaZUOXicISN1xZ73V8C155S9erge0MsxGtvVk9CvrHDuWeFo2POOK3mvlh70
9Wjdc63+/39sTXiWWhPhrxtRpUatB0fyzsh1lON+NpewyVxPg/dNGnfZH+uC
jwD5uas4R/TZvXwx4JoFJw3iXsyZ4/pjwrkW++aDM2Ny8yx5YD7fuH7uhw6k
akk/C75JQk9TnSyZwgrBQ7Nb+Xu4DqTZrrN4e5FQtHLjI4f6UvjIblqfmKwN
Xge/ar61wb5TuQ6NnzD31vpkjdBrQ1nn6JGLuiSkdUx5Q3OhHM5cN7M4nK4F
el0WvrZyJCQt7sLC2lwB1HwplzpYtaCk79jmoBAJHeNWnaowrgRCOuMOdakm
nBh71PntMM6P/16yMrZXQvny9FnFs5qwXUNb+Q6f5xOcZ0YxsMLSjkVi6UsN
uHctprMU6//32etFzxcrQXQobhr5agBsfjr2YZRA+ebe8eSPKsFT7OCegzwa
MBvfsdL1kECyB4TJF9UqoTi1omBjTh2mShlp0tMIJB8vMXm8pgLsBaqdox6p
w76LtTaFAQR6upzxrfd9OXgezHwpkq0O94dybPgw751oueFw5nMZnN51ZEUh
WR0SOJdvO0kT6NxGFsfx7lKQ6TN0f5yrDjMfu3uyuXEueHyIo+FyCewLGLpv
2aoOL8wXltb24Hk6Zd7Xpi2CULHEg+0kdfglX/+tam0F7U+5sES5nAcXgx/J
nZDVgIwz2r8nZ1eQ27euD+Rp2aDzNvLwg2INuJh+4uX9Vyuoe0ytmIwqA76d
3jLlZdMEp4qPFho9K0g8MhAo9VNgiPSacV8V1reJOvp2rMNn00dCMkmxoMB/
gL1FXQu0au0bOLBue/2dznXeHwGjPmnW0v+04Fyio+9lrPPMm6c1fzD7w/jB
h89tnmuDf7j/+KvqFXSv9caByk45UBASD2ko04FdFJJfz+DnJ3J2qEeueiE2
DWmL9ERd2MN3kuPW/RV03CJaQVw+FBW+kvzBHK0HGc5lpp+bVpDrnG7wxX83
0dhJ150kJX3I+Cn1kw/7QoG+J8vhmmT0704Kec0LfTBL4PsggX3BRWBMTZUm
HSnXPU/jMjIAW141q90fVlCHFM3Y87QsVOCU8S7tvQEYPQhQ9f6xgtJneBWl
F3NRz2eB5OwLhuDuSyQGchJod05Fya95rDP/2oc1MF8pqm0m9UgQSHnr8kMu
2VIkOyQl9Qrz1brqaOimAYHE1hNU2u0x3xacZiqNMIa/aqdH3voQyDb+vqOH
ZTmioT10i23HGBoXuc6cSiKQ6aHb+nH8FWiXvPuVDDcTyPeLbK/FnO8Rolw7
+rQCSc1MaAf2mwC/lmfYwUECfc3Z8rYVrUTOSWjkHJ8pbDo2DHGsEGiud/xF
lU8lUiBGJwy9TWE9JGalCefcrz0VE7lXKlEtf4Weyx1TmI1UFnJgIyGBOt28
As1KFBAlmiEwago0R2eyZgVIKFsjTisd+87CVuWdoGVT+Bz3p5RWioS0h8au
LphWIMd1/gDnNVPY+zWhrU2dhAon554kppQj5yMzj7kWTCF6YudJL9b5J+P+
67tyy1CvrWTN4WemcH5aIfkf1nn6axb7rf1LkeTlK7up000huF8pQCWAhETo
kk6d5SpBlKbWCi81TSG8uXXUL4yE6vYJ/TJQKURUVNlMmSsmYH+49I5jPAkZ
r9I7TZLloYtpFm3ToZgPBxJodrD+T3NtlsoHZqEI+xNiFr+NIeWH+b1DWP+j
vWuo6pvSkNRPbrYD7sZQXZ1gUVuGuX3VIZErMQkxoUMCyj1GcDplxKD0Nl7v
cqblvM0NVHP1qV/EASP4aBRbuoD1dp+Yx5vsjUBUFOfMlqxrCFdZr9ldvUdC
W1LAVfHFAflvl7zyiDQAgbNDY9q4HmA7dk1eyh60+5ZOqtbqw5twAZFsPM5e
z+1Dw9+vwo5V9JHQLj1YPC7a5orfe+7Bdt21zigYPHOJ9esRXShgdavvxfOk
qpS53GmYAO7hE9O/ArWhRufOnk68ro7l2gf7DVJB8v1F7V0TmqB4RlzVKZOE
vr+h418ezABL661Hhuew7r19KPg8Eecj/RhJbrYcoGG7sCFdpgbapfu9T18j
obTnUwp624VAs29KtLlSGZg1LnY7Y53/9abozpZ8CcR7Zza5qSrBTa+epR47
EloNT5U9Zl8KzU5/fg6SKcLpJdPF//8/QvFzM0WWWRnEJ/WH+76Vh6+t9ycC
cR7sYahwzTtWDi/qqGMZSxFQkHdEMUiQUIJiiMXK83J49OtiJ+NbWVC2jeMy
4sf8X+gU2yxfASrX6RgZrWSg/CDZlB0+t0zrFMqxiRXw/ejnrlunzwOLxECq
OQ32iygrWcN7FUA09W3qm0rD1I+b9G3rBNoVckfVq6QCOLrUVazHpYDy3bDU
4TcEintrrxbrUQFxWYeVtmql4PWTXB6GVgJRvShKrdtTAaJlA6xVc1KgVz1e
PlqI87UXw9NzYeUweWur4ZSfNIhd8C7Ii8R5/Jeie99QGZT9/Rmcan0entEo
F+S6E4jmAVjL43zUH+DHxlMuA6t1dRy/JQkUnxrr7jNcDEw7ddzNnPJguIfd
poEPj8/EQHPKoRCeZ/gnnVRWgPtJzV916P///YdJoTPteUBBnfLTIV0RbghF
XC7DHOvJHef6cz4D9tufih4sV4G5Je6/qR9XUEDEv+WXnalwYrju3nF7NeB6
bfCm/80KUhsM4WpbS4SvUf9Y085rAPMO+7od1kk2tnopYambkPnVWfqXiBbo
A+VJyxcryLf/t8a7xlDYCPmZxqCkA7rFR88/ebqCprWTyFgGLsLfCtsb2u56
cCyBaiS/dwX9vkjRdzVIFb4uity7OqwP80In077g52+Q8t/7aLuiTSqpRzd/
GEBLb/uhIjz+rt58P+ef15BN8o6qGhvOrebRNK14Pim18RX3NaLQc8tf27kK
xkAZKEN7+u0KilZr9Hi3FIdyWLuTdD1N4Nd7B/NJ3Ad+cvufr1E62pW2dmHy
sRmcWq66Ov93BZ0yH3lddSoLnbS+VcQyZg6pRVI+xAECiTyzUPVbzkFW7+ci
bn61AN2GFNaocwQi+1sblTJciNhSM7cff7eClMWfn7p1CER7gjeC/FsxuqrT
cO79pDW4pfRue7kQKNnqutbUbAnaF1V6iqnBBn6fSA7Ty8E+XlER80C/DHmd
lPQ7JmgH17R3zPkeEeg89zOThVdlSC/CtJLqiR3MG08OFwzhHOrWTiYlWI6m
Y6ru7ea2hyZOj39Ri5hb+uP7H1iVIwdD3hg1A3uoZ9bN09uF+fwR91qNczkS
LuewYLlkDzLdpbUWDJjfKAX2jyuXozieYpfRGHsoEWk5r8hFQlWZbe/P/i5D
yqdzmygT7WFsXpVl6RQJuU/n+fEklCFNv3urBuH2wBwbwSOBeV47VtvVbrUU
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
tw==
        "]]},
      Annotation[#, "Charting`Private`Tag$122179#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[2], Line3DBox[CompressedData["
1:eJxVzn9Q03Ucx/GxDV0jlsBQ+THk143tCPPHriB0P5gKk01lCChcMMDdOr1l
q3GENuUQMJoYmTJosBykB6XXSBvrDnh/hUSwk0TzYhUgUpT8ivFjIj9a/JHf
74fX3fOfx1+vkJzjciWZRCLFrERZSbISp0kuIv2/31wuV0ST/NavAv/IMoVW
+MI1QB0uUmixFO+XuO2KI7hn2SZojYojmOic72V69kHckxqTg68qDmLeN7ts
A9m7cP+g4GSbVLELyz8eHkBT8nD/2eOSBsvkYU7NsLhKE467d0vwad2hcGzT
g+xDlnom7od9GbNFAib29ZJMdqaOinvtkuFohjsFq+8p2p2lWxa8cMvJabvh
9jykllyOcfOYx1226WFN9LQDuMIwJ2afxV3t81l3XOsosDVV0WbWDO5aZ+VI
8dgfsP38ugrOMwfun3QtrpGnPYbxZaFqREx4xIdMo3DGDsWmaMYbfVO4dyTq
bDKvRzC6dHeRfY7wt//9O73syX0wqgIPdL5FuCTkzni3/kcomBTNpQsIb8ow
DNZUd4I8eKROyyXcl7lj5qGoHe5IeBsnAwiv2TBVkjXdCgnf1k697k24V6fx
Sk6kDZIvKmkLHoTfDwq2phlugCihOt6fRrhAkv00NtAC9a8Jx2TuhFfwO/TW
dV9B3d3RwgsUwoemn/lk5F6BbceUT5PJhPMvFVzTi83wXHwj86wb4TvH29r+
WjBCQ+w9JQ3x8vyGzFhXJYxJHb3XSITbtHtiqwwXYLayf6sWcUYVh3lAdx7a
39nSsg/xjsdKxyt+ZcB1lpi2Iz7QJxnaJy8G43zOT6GI740KC/GzFIKjWW5d
j/if9p1PyudOgIKy/x8G4n4TPc9P/Z4H9SkkfzrigYJfyNcXNCB2SmvWIM7f
3PvFd+vVYCwNfZ+K+NlSgerzfhUU9XRRKYibWCEuTkMu+JpjFt0Qn+yns5rt
WeAZ9F4q6qdv5VHrItNhP90ySELcOiE4Y2OnQNnWxErUFdqAntzUJOh497YS
9QE/9THTR1KgU6/Hoc4w704r2BgPWPPkq6i753O4tXNxEPEokYX6x1F5jfEm
Pny6TeiDulO9mDnUGw1vLpM9UZ/nf6lvVfHglLSIhnp30NHNewu3QAv/e/dV
/4d7nWyvSChJGqKgnhfGMUdJ2JBbrCejzttR6ql7ORRulje7of5NtefhlKss
IA0qVvkPe5Yf9FX4gzohYJXLuq1rT9zbAP8BNPSwfA==
        "]]},
      Annotation[#, "Charting`Private`Tag$122200#1"]& ]}, {}}, {
    {RGBColor[0, 0, 1], PointSize[0.03], Point3DBox[{1, 0, 0}]}, 
    {RGBColor[1, 0, 0], PointSize[0.03], 
     Point3DBox[
      NCache[{Rational[74805457, 74804945], 0, Rational[-276768, 74804945]}, {
       1.000006844467301, 0, -0.0036998623553563203`}]]}}, 
   {RGBColor[0, 1, 0], PointSize[0.03], 
    Point3DBox[
     NCache[{Coth[2 Pi], 0, -Csch[2 Pi]}, {
      1.0000069747090357`, 0, -0.003734898488285673}]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  BoxRatios->{1, 1, 1},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  ImageSize->{329.6075436509371, 328.75},
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{0.9579070698700143, 
   1.043940431237721}, {-0.042831773309041594`, 
   0.04300406513888928}, {-0.003699862355323141, 0.}},
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None, None},
  ViewPoint->{3.383140991114482, -0.04294477921820106, -0.05012763887139937},
  ViewVertical->{0.602821416596011, -0.013050522989716706`, 
   0.7977694049929926}]], "Output",
 CellChangeTimes->{3.9648372244574556`*^9, 3.9648566216992*^9, 
  3.964917805609812*^9, 3.965030149084988*^9, 3.965031576148144*^9, 
  3.9650908613309546`*^9, 3.96509177956886*^9, 3.9650970718086376`*^9, 
  3.9651147228712645`*^9, 3.965117777337061*^9, 3.96512429085997*^9, 
  3.9651801815224934`*^9, 3.9652173499022036`*^9, 3.965220694428811*^9, 
  3.9652221396257777`*^9, 3.965247274429923*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"106bfc6e-99d0-47c8-8b63-8eb6320fd9a3"]
}, Open  ]],

Cell[TextData[{
 "Evolution toward the thermal state for (n,l) = (48,44) to the target \
inverse temperature \[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "\[Pi]"}], TraditionalForm]],ExpressionUUID->
  "b71ce845-92f7-43ea-bb27-ef66a2163d8b"],
 ". The exact thermal state corresponding to this value is marked by a green \
dot, while the approximate thermal state is indicated by a red dot; both lie \
on the thermal curve."
}], "Text",
 CellChangeTimes->{{3.9650125548462114`*^9, 
  3.9650125640438323`*^9}},ExpressionUUID->"df996ee5-68ad-43c7-99f3-\
b7b83a78dae6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Thermalization time for {n,l}={12,11}", "Subsection",
 CellChangeTimes->{{3.965113252260171*^9, 
  3.965113321738073*^9}},ExpressionUUID->"86518861-b01c-4ce6-b580-\
43732ef7570a"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[163]:=",ExpressionUUID->"50700e4d-daba-4811-ac69-610e058057cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"12", ",", "11"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9651081932537885`*^9, 3.9651082069871664`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"5fa30d04-0e0a-408b-852a-b281712b4509"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.965108207911236*^9, 3.9651127209057417`*^9, 
  3.9651147230270257`*^9, 3.9651169424176817`*^9, 3.9651177775111427`*^9, 
  3.965124291034579*^9, 3.965180181668315*^9, 3.9652173500525703`*^9, 
  3.9652206945073376`*^9, 3.9652221397077336`*^9, 3.9652472745300384`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"5b4ec347-f428-45b4-a890-001f83c19b7c"]
}, Open  ]],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  RowBox[{
   FractionBox["Eg", 
    RowBox[{
     SubscriptBox["k", "B"], " ", 
     SubscriptBox["T", "nl"]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Eg", " ", "\[Beta]", " "}], 
     SubscriptBox["k", "B"]], "=", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}]], "Input",
  CellChangeTimes->{3.965097057789071*^9},ExpressionUUID->
  "15e1c8b2-a3b6-494f-b402-321261c48e0c"],
 ".  So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "nl"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b87514cf-fb37-49c7-8037-7027a8b171f9"],
 " becomes:"
}], "Text",
 CellChangeTimes->{{3.965108263016432*^9, 3.9651082697441387`*^9}, {
  3.9651084198572645`*^9, 3.9651084315741186`*^9}, {3.9651087971265764`*^9, 
  3.965108894129331*^9}, {3.9651133802690153`*^9, 
  3.9651134038733535`*^9}},ExpressionUUID->"c7df27e7-50a4-4a43-a1d3-\
bf26ceb38670"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]nl", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965109121604704*^9, 3.9651091537811475`*^9}, {
  3.9651127367094245`*^9, 3.965112810546155*^9}, {3.9651169194344893`*^9, 
  3.965116922522126*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"36663e09-41ea-434b-81cb-bdcc16f7c5bd"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3.1780538303479458`", " ", "kB"}], "Eg"]], "Output",
 CellChangeTimes->{
  3.96510915467169*^9, {3.965112768960878*^9, 3.9651128110691614`*^9}, 
   3.965114723105629*^9, 3.965116946381999*^9, 3.965117777591546*^9, 
   3.965124291134332*^9, 3.965180181743554*^9, 3.965217350118922*^9, 
   3.9652206945653353`*^9, 3.9652221397758245`*^9, 3.96524727461059*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"c33ec8d9-cadf-4363-a421-24d3b6693de1"]
}, Open  ]],

Cell[TextData[{
 "The target temperature here is  ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], "\[Pi]"}]}]],
  CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
   3.965112824284232*^9, 3.9651128348642144`*^9}},
  FontWeight->"Bold",ExpressionUUID->"b8319486-763a-4190-af07-4116cbea7618"],
 "."
}], "Text",
 CellChangeTimes->{{3.9651134214370623`*^9, 
  3.965113447791379*^9}},ExpressionUUID->"7a4c2aa6-c8d5-472c-9476-\
342929326afe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", "=", 
  RowBox[{
   FractionBox["kB", "Eg"], "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
  3.965112824284232*^9, 3.9651128348642144`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"ba6661b1-1233-4f34-aaf3-07e863f1de58"],

Cell[BoxData[
 FractionBox[
  RowBox[{"kB", " ", "\[Pi]"}], "Eg"]], "Output",
 CellChangeTimes->{3.9651090536125755`*^9, 3.965112837385931*^9, 
  3.9651147231749406`*^9, 3.965117777654644*^9, 3.9651242913331428`*^9, 
  3.9651801818146896`*^9, 3.965217350186508*^9, 3.965220694625374*^9, 
  3.965222139841041*^9, 3.96524727469075*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"8c4f835a-7da6-4baf-809b-0a3980b19a61"]
}, Open  ]],

Cell["\<\
The difference between target temperature and achieved temperature is:\
\>", "Text",
 CellChangeTimes->{{3.9651134515878506`*^9, 
  3.965113513748128*^9}},ExpressionUUID->"add7dc1b-9afc-4186-9781-\
6abd8c55dd05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[Beta]", "=", 
  RowBox[{"\[Beta]", "-", "\[Beta]nl"}]}]], "Input",
 CellChangeTimes->{{3.9651089558011737`*^9, 3.965108967301921*^9}, 
   3.965109010438467*^9, 3.965109106062929*^9, {3.9651091608233314`*^9, 
   3.9651092519960613`*^9}, {3.965109311016545*^9, 3.9651093262116976`*^9}, {
   3.9651094216849785`*^9, 3.965109428695443*^9}, {3.965109536541365*^9, 
   3.9651095468265114`*^9}, {3.96511044239719*^9, 3.965110468162822*^9}, {
   3.965112850200908*^9, 3.9651129496536183`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"54cdeb33-c587-4006-b6f2-2d7b4d67dce9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"kB", " ", "\[Pi]"}], "Eg"], "-", 
  FractionBox[
   RowBox[{"kB", " ", 
    RowBox[{"Log", "[", "24", "]"}]}], "Eg"]}]], "Output",
 CellChangeTimes->{3.9651129990362043`*^9, 3.965114723247324*^9, 
  3.965117777718061*^9, 3.9651242914364805`*^9, 3.9651801818881574`*^9, 
  3.9652173502517066`*^9, 3.9652206946826878`*^9, 3.965222139907464*^9, 
  3.965247274771857*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"ec975f3f-fbb1-4370-982b-4c315444f8cb"]
}, Open  ]],

Cell["The accuracy, in percentage, can be calculated by:", "Text",
 CellChangeTimes->{{3.9651135209541845`*^9, 
  3.9651135536910095`*^9}},ExpressionUUID->"750ee5a6-1afa-48f6-8dbc-\
8a1e3e329cac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox["\[Delta]\[Beta]", "\[Beta]"], "100"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9651129548191247`*^9, 3.965112967825553*^9}, {
  3.965113017187291*^9, 3.9651130369409256`*^9}, {3.9651131094383926`*^9, 
  3.965113116963705*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"8f11c716-61f1-4fae-8dae-c1be3b80c1df"],

Cell[BoxData[
 RowBox[{"-", "1.1605953024014641`"}]], "Output",
 CellChangeTimes->{
  3.9651129683945055`*^9, {3.9651130193513007`*^9, 3.9651130378267756`*^9}, 
   3.965113117833331*^9, 3.9651147233398795`*^9, 3.9651177777974653`*^9, 
   3.965124291533017*^9, 3.9651801819580946`*^9, 3.9652173503178167`*^9, 
   3.965220694742525*^9, 3.9652221399743443`*^9, 3.965247274921587*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"4c116b20-04d9-440f-a6af-cd5879412daa"]
}, Open  ]],

Cell["The dimensionless time parameter \[Tau]tilde takes the value:", "Text",
 CellChangeTimes->{{3.965113563468417*^9, 
  3.9651136048220196`*^9}},ExpressionUUID->"0518337e-2743-41f8-8121-\
dd757d347700"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965113181384921*^9, 3.9651131954296737`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"e85f4bff-f693-429d-8760-b38841aef212"],

Cell[BoxData["5.994789404140899`"], "Output",
 CellChangeTimes->{{3.965113178007777*^9, 3.9651131961138716`*^9}, 
   3.9651147234103994`*^9, 3.965117777925771*^9, 3.9651242916346407`*^9, 
   3.965180182150709*^9, 3.9652173504011927`*^9, 3.9652206948017893`*^9, 
   3.965222140036721*^9, 3.9652472749960747`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"edd85bee-d958-4f63-8b4a-32b02df70938"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Thermalization time for {n,l}={24,22}", "Subsection",
 CellChangeTimes->{{3.965113252260171*^9, 3.965113321738073*^9}, {
  3.9651136751364193`*^9, 
  3.9651136840745316`*^9}},ExpressionUUID->"6dfcaea4-65cf-42fb-b8f1-\
3fe0ce0a9391"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[170]:=",ExpressionUUID->"cdda042d-b3d3-4e0a-8c87-34b41f68199c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"24", ",", "22"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9651081932537885`*^9, 3.9651082069871664`*^9}, 
   3.9651136932975874`*^9},
 CellLabel->
  "In[171]:=",ExpressionUUID->"7f8fa2ef-0399-4519-88e7-4ab02e0c5165"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"24", ",", "22"}], "}"}]], "Output",
 CellChangeTimes->{3.965108207911236*^9, 3.9651127209057417`*^9, 
  3.965113694227561*^9, 3.9651147235458364`*^9, 3.965117778211536*^9, 
  3.9651242918036366`*^9, 3.965180182410305*^9, 3.965217350541632*^9, 
  3.9652206948777447`*^9, 3.9652221401171494`*^9, 3.965247275090074*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"50c7ecf3-7c60-4859-b628-daa958afbcc1"]
}, Open  ]],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  RowBox[{
   FractionBox["Eg", 
    RowBox[{
     SubscriptBox["k", "B"], " ", 
     SubscriptBox["T", "nl"]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Eg", " ", "\[Beta]", " "}], 
     SubscriptBox["k", "B"]], "=", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}]], "Input",
  CellChangeTimes->{3.965097057789071*^9},ExpressionUUID->
  "f693d1ab-112e-491f-8498-eded29a94468"],
 ".  So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "nl"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "44a6cab5-7742-4c25-8db3-8743a728f5fc"],
 " becomes:"
}], "Text",
 CellChangeTimes->{{3.965108263016432*^9, 3.9651082697441387`*^9}, {
  3.9651084198572645`*^9, 3.9651084315741186`*^9}, {3.9651087971265764`*^9, 
  3.965108894129331*^9}, {3.9651133802690153`*^9, 
  3.9651134038733535`*^9}},ExpressionUUID->"63bc2199-045d-4fb6-ac6e-\
cbc09a31b6b5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]nl", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965109121604704*^9, 3.9651091537811475`*^9}, {
   3.9651127367094245`*^9, 3.965112810546155*^9}, 3.9651171188815174`*^9},
 CellLabel->
  "In[172]:=",ExpressionUUID->"305a3090-b87d-4139-a22a-bddada0932c4"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3.1570004211501135`", " ", "kB"}], "Eg"]], "Output",
 CellChangeTimes->{
  3.96510915467169*^9, {3.965112768960878*^9, 3.9651128110691614`*^9}, 
   3.965113698714802*^9, 3.9651147236212096`*^9, 3.965117121527316*^9, 
   3.965117778275183*^9, 3.9651242919029627`*^9, 3.965180182482086*^9, 
   3.965217350610851*^9, 3.9652206949371843`*^9, 3.9652221402458487`*^9, 
   3.9652472751691213`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"38367452-f57b-4939-af59-af917bd44b6f"]
}, Open  ]],

Cell[TextData[{
 "The target temperature here is  ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], "\[Pi]"}]}]],
  CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
   3.965112824284232*^9, 3.9651128348642144`*^9}},
  FontWeight->"Bold",ExpressionUUID->"1b0004fd-cf11-4447-9491-bbb06347c825"],
 "."
}], "Text",
 CellChangeTimes->{{3.9651134214370623`*^9, 
  3.965113447791379*^9}},ExpressionUUID->"31492f7b-4dc4-442e-ad62-\
c6c5a32f8033"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", "=", 
  RowBox[{
   FractionBox["kB", "Eg"], "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
  3.965112824284232*^9, 3.9651128348642144`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"313c2420-9be6-40c8-a870-b1dacd68e9c5"],

Cell[BoxData[
 FractionBox[
  RowBox[{"kB", " ", "\[Pi]"}], "Eg"]], "Output",
 CellChangeTimes->{3.9651090536125755`*^9, 3.965112837385931*^9, 
  3.9651137023628983`*^9, 3.9651147236922455`*^9, 3.965117778338402*^9, 
  3.9651242920037303`*^9, 3.965180182553444*^9, 3.9652173506777487`*^9, 
  3.9652206950474977`*^9, 3.9652221403268642`*^9, 3.965247275249216*^9},
 CellLabel->
  "Out[173]=",ExpressionUUID->"09fab1e0-9be7-46fe-8568-1368d3de75bc"]
}, Open  ]],

Cell["\<\
The difference between target temperature and achieved temperature is:\
\>", "Text",
 CellChangeTimes->{{3.9651134515878506`*^9, 
  3.965113513748128*^9}},ExpressionUUID->"556c37f5-953c-45cc-98a8-\
be1f3f7f1a78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[Beta]", "=", 
  RowBox[{"\[Beta]", "-", "\[Beta]nl"}]}]], "Input",
 CellChangeTimes->{{3.9651089558011737`*^9, 3.965108967301921*^9}, 
   3.965109010438467*^9, 3.965109106062929*^9, {3.9651091608233314`*^9, 
   3.9651092519960613`*^9}, {3.965109311016545*^9, 3.9651093262116976`*^9}, {
   3.9651094216849785`*^9, 3.965109428695443*^9}, {3.965109536541365*^9, 
   3.9651095468265114`*^9}, {3.96511044239719*^9, 3.965110468162822*^9}, {
   3.965112850200908*^9, 3.9651129496536183`*^9}},
 CellLabel->
  "In[174]:=",ExpressionUUID->"18b47400-86be-4eba-9413-c88c060c48e3"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"kB", " ", "\[Pi]"}], "Eg"], "-", 
  FractionBox[
   RowBox[{"kB", " ", 
    RowBox[{"Log", "[", 
     FractionBox["47", "2"], "]"}]}], "Eg"]}]], "Output",
 CellChangeTimes->{3.9651129990362043`*^9, 3.9651137080708747`*^9, 
  3.965114723769684*^9, 3.9651177784175663`*^9, 3.9651242921019883`*^9, 
  3.9651801826203184`*^9, 3.965217350751384*^9, 3.965220695098575*^9, 
  3.965222140419761*^9, 3.9652472753265676`*^9},
 CellLabel->
  "Out[174]=",ExpressionUUID->"392feb3d-264c-454d-bb39-3a437de05e21"]
}, Open  ]],

Cell["The accuracy, in percentage, can be calculated by:", "Text",
 CellChangeTimes->{{3.9651135209541845`*^9, 
  3.9651135536910095`*^9}},ExpressionUUID->"5b960913-8632-4317-be85-\
c3368ef15160"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox["\[Delta]\[Beta]", "\[Beta]"], "100"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9651129548191247`*^9, 3.965112967825553*^9}, {
  3.965113017187291*^9, 3.9651130369409256`*^9}, {3.9651131094383926`*^9, 
  3.965113116963705*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"7b2e737c-2dbf-47ab-a44c-77f6ff259d26"],

Cell[BoxData[
 RowBox[{"-", "0.4904444738471877`"}]], "Output",
 CellChangeTimes->{
  3.9651129683945055`*^9, {3.9651130193513007`*^9, 3.9651130378267756`*^9}, 
   3.965113117833331*^9, 3.965113714298311*^9, 3.9651147238723526`*^9, 
   3.965117778480968*^9, 3.9651242922040634`*^9, 3.965180182694823*^9, 
   3.9652173508195906`*^9, 3.965220695164957*^9, 3.965222140526742*^9, 
   3.965247275405227*^9},
 CellLabel->
  "Out[175]=",ExpressionUUID->"3b3de7d8-a866-470b-9c10-c8c0a4ecb8dd"]
}, Open  ]],

Cell["The dimensionless time parameter \[Tau]tilde takes the value:", "Text",
 CellChangeTimes->{{3.965113563468417*^9, 
  3.9651136048220196`*^9}},ExpressionUUID->"af9b45dd-df6e-4b70-94c8-\
82ed25622f09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965113181384921*^9, 3.9651131954296737`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"a0827f4d-36a2-4437-ac69-cc41370caafb"],

Cell[BoxData["11.739356881873896`"], "Output",
 CellChangeTimes->{{3.965113178007777*^9, 3.9651131961138716`*^9}, 
   3.9651137272375174`*^9, 3.965114723953061*^9, 3.9651177785442963`*^9, 
   3.9651242923163614`*^9, 3.965180182763053*^9, 3.965217350885536*^9, 
   3.965220695218438*^9, 3.9652221406151314`*^9, 3.9652472754848804`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"d3b23261-a5ee-467a-90fc-5c9fc0abe3c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Thermalization time for {n,l}={36,33}", "Subsection",
 CellChangeTimes->{{3.965113252260171*^9, 3.965113321738073*^9}, {
  3.965113781026247*^9, 
  3.965113782793749*^9}},ExpressionUUID->"6d04aacd-d358-4076-b724-\
9161dcec0302"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"48766320-a0d3-4703-a967-7e3b08a44e6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"36", ",", "33"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9651081932537885`*^9, 3.9651082069871664`*^9}, {
  3.9651137889663897`*^9, 3.9651137904831257`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"ed5d5e30-37c3-4d1b-b45b-b56db8452922"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"36", ",", "33"}], "}"}]], "Output",
 CellChangeTimes->{3.965108207911236*^9, 3.9651127209057417`*^9, 
  3.965113797021155*^9, 3.965114724086285*^9, 3.965116982406653*^9, 
  3.965117778735956*^9, 3.965124292489497*^9, 3.9651801829272923`*^9, 
  3.9652173510258293`*^9, 3.965220695289739*^9, 3.9652221407013397`*^9, 
  3.9652472755760355`*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"d43138aa-74da-4e30-8e5b-0619f3284602"]
}, Open  ]],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  RowBox[{
   FractionBox["Eg", 
    RowBox[{
     SubscriptBox["k", "B"], " ", 
     SubscriptBox["T", "nl"]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Eg", " ", "\[Beta]", " "}], 
     SubscriptBox["k", "B"]], "=", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}]], "Input",
  CellChangeTimes->{3.965097057789071*^9},ExpressionUUID->
  "6a9872d3-5dcd-4686-9497-15195b42c0c9"],
 ".  So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "nl"], TraditionalForm]],ExpressionUUID->
  "b9215131-34ad-4d38-aa43-f7d777d51ad4"],
 " becomes:"
}], "Text",
 CellChangeTimes->{{3.965108263016432*^9, 3.9651082697441387`*^9}, {
  3.9651084198572645`*^9, 3.9651084315741186`*^9}, {3.9651087971265764`*^9, 
  3.965108894129331*^9}, {3.9651133802690153`*^9, 
  3.9651134038733535`*^9}},ExpressionUUID->"ac513110-a612-4d52-9940-\
cba69336c055"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]nl", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965109121604704*^9, 3.9651091537811475`*^9}, {
  3.9651127367094245`*^9, 3.965112810546155*^9}, {3.965116974960432*^9, 
  3.965116979256075*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"67b4e514-4cf5-4570-82c2-0c1723155c43"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3.1498829533812494`", " ", "kB"}], "Eg"]], "Output",
 CellChangeTimes->{
  3.96510915467169*^9, {3.965112768960878*^9, 3.9651128110691614`*^9}, 
   3.9651138015814924`*^9, 3.96511472416168*^9, 3.965116986069667*^9, 
   3.9651177788153877`*^9, 3.965124292585111*^9, 3.9651801830069537`*^9, 
   3.9652173510996733`*^9, 3.9652206953459997`*^9, 3.96522214075974*^9, 
   3.96524727565075*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"be373554-ae0e-4028-a2a1-abcdd6c3ec64"]
}, Open  ]],

Cell[TextData[{
 "The target temperature here is  ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], "\[Pi]"}]}]],
  CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
   3.965112824284232*^9, 3.9651128348642144`*^9}},
  FontWeight->"Bold",ExpressionUUID->"380be651-38e7-4ad6-a4be-d1bf5ccc1b6b"],
 "."
}], "Text",
 CellChangeTimes->{{3.9651134214370623`*^9, 
  3.965113447791379*^9}},ExpressionUUID->"29da861d-76df-496e-a837-\
a4651e1d440b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", "=", 
  RowBox[{
   FractionBox["kB", "Eg"], "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
  3.965112824284232*^9, 3.9651128348642144`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"f68dab0f-ed41-4d37-8c83-455bae290ce0"],

Cell[BoxData[
 FractionBox[
  RowBox[{"kB", " ", "\[Pi]"}], "Eg"]], "Output",
 CellChangeTimes->{3.9651090536125755`*^9, 3.965112837385931*^9, 
  3.965113805089369*^9, 3.9651147242384377`*^9, 3.965117778974987*^9, 
  3.9651242926884346`*^9, 3.9651801831719303`*^9, 3.9652173511644716`*^9, 
  3.965220695400171*^9, 3.9652221408192997`*^9, 3.965247275725713*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"df7a300c-c308-4dd3-bd83-8c704a05cedb"]
}, Open  ]],

Cell["\<\
The difference between target temperature and achieved temperature is:\
\>", "Text",
 CellChangeTimes->{{3.9651134515878506`*^9, 
  3.965113513748128*^9}},ExpressionUUID->"72a0cd15-2afa-458f-8b2e-\
a1c629814fdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[Beta]", "=", 
  RowBox[{"\[Beta]", "-", "\[Beta]nl"}]}]], "Input",
 CellChangeTimes->{{3.9651089558011737`*^9, 3.965108967301921*^9}, 
   3.965109010438467*^9, 3.965109106062929*^9, {3.9651091608233314`*^9, 
   3.9651092519960613`*^9}, {3.965109311016545*^9, 3.9651093262116976`*^9}, {
   3.9651094216849785`*^9, 3.965109428695443*^9}, {3.965109536541365*^9, 
   3.9651095468265114`*^9}, {3.96511044239719*^9, 3.965110468162822*^9}, {
   3.965112850200908*^9, 3.9651129496536183`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"d65a228f-5a24-40e0-a4d0-4dd1dba0905e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"kB", " ", "\[Pi]"}], "Eg"], "-", 
  FractionBox[
   RowBox[{"kB", " ", 
    RowBox[{"Log", "[", 
     FractionBox["70", "3"], "]"}]}], "Eg"]}]], "Output",
 CellChangeTimes->{3.9651129990362043`*^9, 3.9651138107396007`*^9, 
  3.9651147243085628`*^9, 3.965117779038527*^9, 3.9651242927832947`*^9, 
  3.965180183250698*^9, 3.9652173512345257`*^9, 3.9652206954508667`*^9, 
  3.965222140881385*^9, 3.9652472758087783`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"6c3f9eff-94ce-4027-bc4f-66a19dcfa9dd"]
}, Open  ]],

Cell["The accuracy, in percentage, can be calculated by:", "Text",
 CellChangeTimes->{{3.9651135209541845`*^9, 
  3.9651135536910095`*^9}},ExpressionUUID->"3a9229de-ab49-41d7-b7d6-\
e9b1db88340d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox["\[Delta]\[Beta]", "\[Beta]"], "100"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9651129548191247`*^9, 3.965112967825553*^9}, {
  3.965113017187291*^9, 3.9651130369409256`*^9}, {3.9651131094383926`*^9, 
  3.965113116963705*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"93d2a8fd-2389-492a-bc07-ef37988a94f5"],

Cell[BoxData[
 RowBox[{"-", "0.2638884383047938`"}]], "Output",
 CellChangeTimes->{
  3.9651129683945055`*^9, {3.9651130193513007`*^9, 3.9651130378267756`*^9}, 
   3.965113117833331*^9, 3.9651138140839367`*^9, 3.96511472439817*^9, 
   3.965117779117422*^9, 3.9651242928727016`*^9, 3.965180183330474*^9, 
   3.9652173513006535`*^9, 3.9652206955012474`*^9, 3.965222140943776*^9, 
   3.965247275908146*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"f4cc046d-52a6-4e8e-a19e-802aacb63c00"]
}, Open  ]],

Cell["The dimensionless time parameter \[Tau]tilde takes the value:", "Text",
 CellChangeTimes->{{3.965113563468417*^9, 
  3.9651136048220196`*^9}},ExpressionUUID->"2ebcddf3-3c10-4541-84cf-\
0e3330bfe5c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965113181384921*^9, 3.9651131954296737`*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"99920fd0-f482-4c37-9ce0-1550dfc65d42"],

Cell[BoxData["17.483921184905864`"], "Output",
 CellChangeTimes->{{3.965113178007777*^9, 3.9651131961138716`*^9}, 
   3.96511382429645*^9, 3.9651147244723883`*^9, 3.9651177791962843`*^9, 
   3.9651242929752555`*^9, 3.9651801834076886`*^9, 3.965217351370673*^9, 
   3.9652206955546556`*^9, 3.9652221409965534`*^9, 3.965247275983734*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"de1b7ec9-0d55-4a0a-a20d-2eab691e3d0b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Thermalization time for {n,l}={48,44}", "Subsection",
 CellChangeTimes->{{3.965113252260171*^9, 3.965113321738073*^9}, {
  3.9651138379792414`*^9, 
  3.965113840264918*^9}},ExpressionUUID->"b9bd7bee-2a82-426d-9005-\
c6a1e5bfe41c"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"89d253ef-bf1c-4ccd-b99b-33f31fc9c689"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"48", ",", "44"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9651081932537885`*^9, 3.9651082069871664`*^9}, {
  3.965113848666659*^9, 3.965113852427733*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"c8ce3c00-0311-4502-9791-8be69e4db64a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"48", ",", "44"}], "}"}]], "Output",
 CellChangeTimes->{3.965108207911236*^9, 3.9651127209057417`*^9, 
  3.965113852891037*^9, 3.9651147246051645`*^9, 3.965116995962118*^9, 
  3.965117779340044*^9, 3.965124293142866*^9, 3.965180183575498*^9, 
  3.9652173515075583`*^9, 3.9652206956262193`*^9, 3.9652221410834494`*^9, 
  3.9652472760761266`*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"762f599f-1c22-451b-b102-fee69f15b945"]
}, Open  ]],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  RowBox[{
   FractionBox["Eg", 
    RowBox[{
     SubscriptBox["k", "B"], " ", 
     SubscriptBox["T", "nl"]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Eg", " ", "\[Beta]", " "}], 
     SubscriptBox["k", "B"]], "=", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}]], "Input",
  CellChangeTimes->{3.965097057789071*^9},ExpressionUUID->
  "02e274d6-d0a7-4db7-b3c5-abfe6783e01b"],
 ".  So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "nl"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d184d302-7e58-4f66-a7b5-9b2a53925048"],
 " becomes:"
}], "Text",
 CellChangeTimes->{{3.965108263016432*^9, 3.9651082697441387`*^9}, {
  3.9651084198572645`*^9, 3.9651084315741186`*^9}, {3.9651087971265764`*^9, 
  3.965108894129331*^9}, {3.9651133802690153`*^9, 
  3.9651134038733535`*^9}},ExpressionUUID->"e2a25033-854c-4e0c-a45f-\
c011bf2a86d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]nl", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965109121604704*^9, 3.9651091537811475`*^9}, {
  3.9651127367094245`*^9, 3.965112810546155*^9}, {3.9651170007947845`*^9, 
  3.96511700401834*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"3ace9f72-65e6-4f25-80cc-0bb40408bd42"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3.1463051320333655`", " ", "kB"}], "Eg"]], "Output",
 CellChangeTimes->{
  3.96510915467169*^9, {3.965112768960878*^9, 3.9651128110691614`*^9}, 
   3.965113856441367*^9, 3.9651147246749783`*^9, 3.965117004812027*^9, 
   3.965117779419355*^9, 3.9651242932365513`*^9, 3.965180183669196*^9, 
   3.965217351586682*^9, 3.965220695679361*^9, 3.9652221411469193`*^9, 
   3.965247276160039*^9},
 CellLabel->
  "Out[186]=",ExpressionUUID->"6ae602b2-f3a7-470c-852f-6bf53f2512cc"]
}, Open  ]],

Cell[TextData[{
 "The target temperature here is  ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], "\[Pi]"}]}]],
  CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
   3.965112824284232*^9, 3.9651128348642144`*^9}},
  FontWeight->"Bold",ExpressionUUID->"e8c5ba76-6b88-4ad8-8b31-fb8a1539f98a"],
 "."
}], "Text",
 CellChangeTimes->{{3.9651134214370623`*^9, 
  3.965113447791379*^9}},ExpressionUUID->"0691df0a-0112-4767-a9cf-\
33f567a9b289"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", "=", 
  RowBox[{
   FractionBox["kB", "Eg"], "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
  3.965112824284232*^9, 3.9651128348642144`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"c6176ff8-2a0d-43b6-8732-7ce2af45b969"],

Cell[BoxData[
 FractionBox[
  RowBox[{"kB", " ", "\[Pi]"}], "Eg"]], "Output",
 CellChangeTimes->{3.9651090536125755`*^9, 3.965112837385931*^9, 
  3.9651138599152575`*^9, 3.9651147247442045`*^9, 3.965117779498294*^9, 
  3.9651242933498597`*^9, 3.96518018375753*^9, 3.9652173516518784`*^9, 
  3.96522069573468*^9, 3.96522214122805*^9, 3.9652472762344613`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"6cc2741b-429d-4808-b91b-31888f906f24"]
}, Open  ]],

Cell["\<\
The difference between target temperature and achieved temperature is:\
\>", "Text",
 CellChangeTimes->{{3.9651134515878506`*^9, 
  3.965113513748128*^9}},ExpressionUUID->"13bc511d-7081-4b78-9bec-\
f3ccaa44b995"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[Beta]", "=", 
  RowBox[{"\[Beta]", "-", "\[Beta]nl"}]}]], "Input",
 CellChangeTimes->{{3.9651089558011737`*^9, 3.965108967301921*^9}, 
   3.965109010438467*^9, 3.965109106062929*^9, {3.9651091608233314`*^9, 
   3.9651092519960613`*^9}, {3.965109311016545*^9, 3.9651093262116976`*^9}, {
   3.9651094216849785`*^9, 3.965109428695443*^9}, {3.965109536541365*^9, 
   3.9651095468265114`*^9}, {3.96511044239719*^9, 3.965110468162822*^9}, {
   3.965112850200908*^9, 3.9651129496536183`*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"bf76bf93-c8f1-4326-ae46-3aa81e6a7eb9"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"kB", " ", "\[Pi]"}], "Eg"], "-", 
  FractionBox[
   RowBox[{"kB", " ", 
    RowBox[{"Log", "[", 
     FractionBox["93", "4"], "]"}]}], "Eg"]}]], "Output",
 CellChangeTimes->{3.9651129990362043`*^9, 3.9651139462737417`*^9, 
  3.9651147248161945`*^9, 3.965117779577709*^9, 3.9651242934425707`*^9, 
  3.9651801838501835`*^9, 3.965217351723424*^9, 3.9652206957863894`*^9, 
  3.965222141297798*^9, 3.965247276309276*^9},
 CellLabel->
  "Out[188]=",ExpressionUUID->"890ae7e8-1969-471f-bebd-65247568e7f0"]
}, Open  ]],

Cell["The accuracy, in percentage, can be calculated by:", "Text",
 CellChangeTimes->{{3.9651135209541845`*^9, 
  3.9651135536910095`*^9}},ExpressionUUID->"644081c7-38a7-49a4-aedb-\
5ccc72a4abcf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox["\[Delta]\[Beta]", "\[Beta]"], "100"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9651129548191247`*^9, 3.965112967825553*^9}, {
  3.965113017187291*^9, 3.9651130369409256`*^9}, {3.9651131094383926`*^9, 
  3.965113116963705*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"c19d7a04-1041-4810-8f10-b82e86ed370f"],

Cell[BoxData[
 RowBox[{"-", "0.15000284770170869`"}]], "Output",
 CellChangeTimes->{
  3.9651129683945055`*^9, {3.9651130193513007`*^9, 3.9651130378267756`*^9}, 
   3.965113117833331*^9, 3.965113950158124*^9, 3.9651147248873944`*^9, 
   3.9651177796565204`*^9, 3.9651242935345483`*^9, 3.965180183950398*^9, 
   3.965217351789776*^9, 3.965220695842373*^9, 3.9652221413726654`*^9, 
   3.9652472763855567`*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"255944c2-bae5-414b-992d-739fc47fee8c"]
}, Open  ]],

Cell["The dimensionless time parameter \[Tau]tilde takes the value:", "Text",
 CellChangeTimes->{{3.965113563468417*^9, 
  3.9651136048220196`*^9}},ExpressionUUID->"7f185f3d-f0ef-46c4-a045-\
80c058dce665"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965113181384921*^9, 3.9651131954296737`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"9056323c-c67d-493f-86aa-7b9201190dc2"],

Cell[BoxData["23.228484668613234`"], "Output",
 CellChangeTimes->{{3.965113178007777*^9, 3.9651131961138716`*^9}, 
   3.965113960034989*^9, 3.965114724958931*^9, 3.965117779751894*^9, 
   3.965124293629495*^9, 3.965180184043569*^9, 3.96521735185811*^9, 
   3.965220695896045*^9, 3.9652221414443293`*^9, 3.96524727646906*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"0e78a348-ab78-4981-9a4e-793320f6e620"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Accuracy and Thermalization time for {n,l}={60,55}", "Subsection",
 CellChangeTimes->{{3.965113252260171*^9, 3.965113321738073*^9}, {
  3.965113978249669*^9, 
  3.9651139805212555`*^9}},ExpressionUUID->"ad66d7a9-48d2-446d-b503-\
0d646b4b3fb9"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[191]:=",ExpressionUUID->"22964187-90d1-4933-b987-af4644797807"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"60", ",", "55"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9651081932537885`*^9, 3.9651082069871664`*^9}, {
  3.9651139860470376`*^9, 3.965113987884241*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"1dffadac-f1b2-4526-a94a-1bd9fefcf487"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"60", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.965108207911236*^9, 3.9651127209057417`*^9, 
  3.965113993628796*^9, 3.965114725094987*^9, 3.965117780005992*^9, 
  3.9651242937835555`*^9, 3.965180184329052*^9, 3.965217351997246*^9, 
  3.965220695967435*^9, 3.965222141513277*^9, 3.9652472765615325`*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"30c451fb-0d73-4bbd-a6a0-9486bae97dbe"]
}, Open  ]],

Cell[TextData[{
 "We have ",
 Cell[BoxData[
  RowBox[{
   FractionBox["Eg", 
    RowBox[{
     SubscriptBox["k", "B"], " ", 
     SubscriptBox["T", "nl"]}]], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"Eg", " ", "\[Beta]", " "}], 
     SubscriptBox["k", "B"]], "=", 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}]], "Input",
  CellChangeTimes->{3.965097057789071*^9},ExpressionUUID->
  "e849ff7c-564c-45b4-85c4-68ac4795f8e1"],
 ".  So ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Beta]", "nl"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "dffd88d8-ade9-4d02-8ddf-557f3a11f20e"],
 " becomes:"
}], "Text",
 CellChangeTimes->{{3.965108263016432*^9, 3.9651082697441387`*^9}, {
  3.9651084198572645`*^9, 3.9651084315741186`*^9}, {3.9651087971265764`*^9, 
  3.965108894129331*^9}, {3.9651133802690153`*^9, 
  3.9651134038733535`*^9}},ExpressionUUID->"2b28d0b7-5c3c-4ec1-9166-\
7127d30a8298"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Beta]nl", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], 
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"1", "+", "l", "+", "n"}], 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"-", "l"}], "+", "n"}], "]"}]], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965109121604704*^9, 3.9651091537811475`*^9}, {
   3.9651127367094245`*^9, 3.965112810546155*^9}, 3.9651170855380974`*^9},
 CellLabel->
  "In[193]:=",ExpressionUUID->"2be28b35-d20b-477b-9af3-d251d9265d0e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3.1441522786722644`", " ", "kB"}], "Eg"]], "Output",
 CellChangeTimes->{
  3.96510915467169*^9, {3.965112768960878*^9, 3.9651128110691614`*^9}, 
   3.9651139974274225`*^9, 3.965114725164955*^9, 3.9651170916478777`*^9, 
   3.965117780085166*^9, 3.9651242938802614`*^9, 3.9651801844326415`*^9, 
   3.9652173520687666`*^9, 3.965220696045397*^9, 3.965222141573494*^9, 
   3.965247276644927*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"4ae008dc-14da-446c-a5e5-003d97a413b2"]
}, Open  ]],

Cell[TextData[{
 "The target temperature here is  ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", 
   RowBox[{
    FractionBox["kB", "Eg"], "\[Pi]"}]}]],
  CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
   3.965112824284232*^9, 3.9651128348642144`*^9}},
  FontWeight->"Bold",ExpressionUUID->"e7dc9352-b375-402b-b73f-6297e642f128"],
 "."
}], "Text",
 CellChangeTimes->{{3.9651134214370623`*^9, 
  3.965113447791379*^9}},ExpressionUUID->"07d10abc-edab-41b3-9390-\
371800e50acc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Beta]", "=", 
  RowBox[{
   FractionBox["kB", "Eg"], "\[Pi]"}]}]], "Input",
 CellChangeTimes->{{3.9651090271605053`*^9, 3.9651090518723497`*^9}, {
  3.965112824284232*^9, 3.9651128348642144`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"5eb920c4-e2d9-41e7-9c50-e9a7e4d5fbb6"],

Cell[BoxData[
 FractionBox[
  RowBox[{"kB", " ", "\[Pi]"}], "Eg"]], "Output",
 CellChangeTimes->{3.9651090536125755`*^9, 3.965112837385931*^9, 
  3.965114004060846*^9, 3.9651147252432175`*^9, 3.9651177801640143`*^9, 
  3.965124293969022*^9, 3.965180184528558*^9, 3.9652173521353645`*^9, 
  3.9652206961032267`*^9, 3.9652221416315556`*^9, 3.9652472767193375`*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"be593f21-41f8-4d93-8412-2b5ceec31afa"]
}, Open  ]],

Cell["\<\
The difference between target temperature and achieved temperature is:\
\>", "Text",
 CellChangeTimes->{{3.9651134515878506`*^9, 
  3.965113513748128*^9}},ExpressionUUID->"8d7b6b4e-18fd-4a71-b48a-\
5550a55b871c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[Beta]", "=", 
  RowBox[{"\[Beta]", "-", "\[Beta]nl"}]}]], "Input",
 CellChangeTimes->{{3.9651089558011737`*^9, 3.965108967301921*^9}, 
   3.965109010438467*^9, 3.965109106062929*^9, {3.9651091608233314`*^9, 
   3.9651092519960613`*^9}, {3.965109311016545*^9, 3.9651093262116976`*^9}, {
   3.9651094216849785`*^9, 3.965109428695443*^9}, {3.965109536541365*^9, 
   3.9651095468265114`*^9}, {3.96511044239719*^9, 3.965110468162822*^9}, {
   3.965112850200908*^9, 3.9651129496536183`*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"0ea02fbd-ff7d-455a-b2ef-6a76ffe45ba4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"kB", " ", "\[Pi]"}], "Eg"], "-", 
  FractionBox[
   RowBox[{"kB", " ", 
    RowBox[{"Log", "[", 
     FractionBox["116", "5"], "]"}]}], "Eg"]}]], "Output",
 CellChangeTimes->{3.9651129990362043`*^9, 3.9651140098768187`*^9, 
  3.965114725317318*^9, 3.9651177802279854`*^9, 3.965124294058106*^9, 
  3.9651801846318436`*^9, 3.9652173522088084`*^9, 3.965220696154908*^9, 
  3.9652221417016287`*^9, 3.965247276802965*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"d91e4a5a-9ee4-4fe4-8376-e2d6e746b148"]
}, Open  ]],

Cell["The accuracy, in percentage, can be calculated by:", "Text",
 CellChangeTimes->{{3.9651135209541845`*^9, 
  3.9651135536910095`*^9}},ExpressionUUID->"95bfa9c0-9973-48a5-af12-\
6dcd8f268dd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    FractionBox["\[Delta]\[Beta]", "\[Beta]"], "100"}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.9651129548191247`*^9, 3.965112967825553*^9}, {
  3.965113017187291*^9, 3.9651130369409256`*^9}, {3.9651131094383926`*^9, 
  3.965113116963705*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"fda64e4e-37ff-404c-8b84-ef57d0f850b5"],

Cell[BoxData[
 RowBox[{"-", "0.0814753968674621`"}]], "Output",
 CellChangeTimes->{
  3.9651129683945055`*^9, {3.9651130193513007`*^9, 3.9651130378267756`*^9}, 
   3.965113117833331*^9, 3.9651140222042*^9, 3.965114725386696*^9, 
   3.965117780308293*^9, 3.9651242941492634`*^9, 3.9651801847258525`*^9, 
   3.965217352273877*^9, 3.9652206962112207`*^9, 3.965222141758239*^9, 
   3.9652472768862243`*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"390c7f96-da84-459c-a001-7afc9f3288ea"]
}, Open  ]],

Cell["The dimensionless time parameter \[Tau]tilde takes the value:", "Text",
 CellChangeTimes->{{3.965113563468417*^9, 
  3.9651136048220196`*^9}},ExpressionUUID->"e6d751ec-55e0-477a-bb77-\
62bc78607ff7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Tau]tilde", "=", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "l"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", "n"}]}], ")"}]}]]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.965113181384921*^9, 3.9651131954296737`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"11e2618c-cef6-4d6f-9798-a8b09ebb4432"],

Cell[BoxData["28.97304782034503`"], "Output",
 CellChangeTimes->{{3.965113178007777*^9, 3.9651131961138716`*^9}, 
   3.965114025763051*^9, 3.9651147254769716`*^9, 3.9651177803714294`*^9, 
   3.9651242942435637`*^9, 3.9651801848166027`*^9, 3.9652173523434687`*^9, 
   3.9652206962647476`*^9, 3.9652221418230762`*^9, 3.9652472769854436`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"75eee266-d54e-4cdb-aa7f-89cc8c6a0b06"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Table 1:",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{
  3.96511335756538*^9},ExpressionUUID->"53cabb5e-0229-4025-95d7-d6ecddd82d88"],

Cell["\<\
So the SDS temperatures don\[CloseCurlyQuote]t include every possible \
temperature. But they do form a countably dense subset of the positive real \
numbers, which represent all possible temperatures. \
\>", "Text",
 CellChangeTimes->{
  3.9650867257018347`*^9, {3.9650889277571745`*^9, 
   3.9650889374634924`*^9}},ExpressionUUID->"6e9262cb-164f-4de9-a7c7-\
4e133834a766"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<(l,n)\>\"", ",", "Bold"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(E\), \(g\)]\)\!\(\*SubscriptBox[\(\[Beta]\
\), \(nl\)]\)/\!\(\*SubscriptBox[\(k\), \(B\)]\)\>\"", ",", "Bold"}], "]"}], 
         ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Delta]\[Beta]/\[Beta]\>\"", ",", "Bold"}], "]"}], 
         ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<\[Tau]tilde\>\"", ",", "Bold"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(12,11)\>\"", ",", "3.178", ",", "\"\<1.16%\>\"", ",", "5.99"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(24,22)\>\"", ",", "3.157", ",", "\"\<.49%\>\"", ",", "11.74"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(36,33)\>\"", ",", "3.149", ",", "\"\<.26%\>\"", ",", "17.48"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(48,44)\>\"", ",", "3.146", ",", "\"\<.15%\>\"", ",", "23.23"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<(60,55)\>\"", ",", "3.144", ",", "\"\<.08%\>\"", ",", "28.97"}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"Frame", "->", "All"}], ",", 
     RowBox[{"Spacings", "->", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1"}], "}"}]}], ",", 
     RowBox[{"ItemStyle", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontFamily", "->", "\"\<Times\>\""}], ",", 
        RowBox[{"FontSize", "->", "20"}]}], "}"}]}]}], "]"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.965009207233198*^9, 3.9650092072347126`*^9}, {
  3.96500932452411*^9, 3.965009345721936*^9}, {3.9650098664669337`*^9, 
  3.965009876984582*^9}, {3.965010116122554*^9, 3.965010150347379*^9}, {
  3.9650860924743*^9, 3.965086114724743*^9}, {3.9650861774145975`*^9, 
  3.9650862307930937`*^9}, {3.9650862800835795`*^9, 3.965086375740569*^9}, {
  3.9650864868728247`*^9, 3.9650864905340414`*^9}, {3.9651140585177183`*^9, 
  3.965114063403446*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"456409b6-f359-4d16-a45d-b95e130a7f00"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"(l,n)\"\>",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(E\\), \
\\(g\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Beta]\\), \
\\(nl\\)]\\)/\\!\\(\\*SubscriptBox[\\(k\\), \\(B\\)]\\)\"\>",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\<\"\[Delta]\[Beta]/\[Beta]\"\>",
          StripOnInput->False,
          FontWeight->Bold], 
         StyleBox["\<\"\[Tau]tilde\"\>",
          StripOnInput->False,
          FontWeight->Bold]},
        {"\<\"(12,11)\"\>", "3.178`", "\<\"1.16%\"\>", "5.99`"},
        {"\<\"(24,22)\"\>", "3.157`", "\<\".49%\"\>", "11.74`"},
        {"\<\"(36,33)\"\>", "3.149`", "\<\".26%\"\>", "17.48`"},
        {"\<\"(48,44)\"\>", "3.146`", "\<\".15%\"\>", "23.23`"},
        {"\<\"(60,55)\"\>", "3.144`", "\<\".08%\"\>", "28.97`"}
       },
       AutoDelete->False,
       GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxItemStyle->{
        "Columns" -> {{FontFamily -> "Times"}}, "Rows" -> {{FontSize -> 20}}},
       GridBoxSpacings->{"Columns" -> {{3}}, "Rows" -> {{1}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.9650100917560463`*^9, 3.9650101867692146`*^9, 3.965030050935422*^9, 
   3.965031481609574*^9, 3.9650861157192993`*^9, {3.9650862055495377`*^9, 
   3.9650862313553348`*^9}, 3.9650864921859913`*^9, 3.965090861423493*^9, 
   3.9650917796657224`*^9, 3.9650970718719172`*^9, 3.965114065665248*^9, 
   3.9651147255615034`*^9, 3.965117780466402*^9, 3.9651242943566713`*^9, 
   3.96518018491415*^9, 3.9652173524294033`*^9, 3.965220696328676*^9, 
   3.9652221418859377`*^9, 3.965247277094288*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"ef35d1c2-c7b5-41fc-9e37-36b821446622"]
}, Open  ]],

Cell[TextData[{
 "TABLE 1 : List of SDS approximations to \[Beta] = \[Pi] ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["k", "B"], 
    SubscriptBox["E", "g"]], TraditionalForm]],ExpressionUUID->
  "d0494483-5115-4964-9120-3c8fb2781d91"],
 ". As one moves down the list, the approximation error in temperature \
decreases by roughly a factor of two with each step. However, this improved \
accuracy comes at the cost of longer thermalization times, which in this \
example is scaling roughly inversely with the %-error in temperature. "
}], "Text",
 CellChangeTimes->{{3.96500935666428*^9, 3.965009437270377*^9}, {
  3.9650094716894636`*^9, 3.965009472608242*^9}, {3.96501023457049*^9, 
  3.965010242609174*^9}},ExpressionUUID->"3c11298b-f4cd-453c-af35-\
ea6fcb738b98"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Average Energy",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.96481760210466*^9, 3.964817616906352*^9}, 
   3.9648176514960065`*^9},ExpressionUUID->"4acd7205-563d-4802-91f9-\
488d48584945"],

Cell["Now we will look at the average energy of the oscillator.", "Text",
 CellChangeTimes->{{3.9650889822433553`*^9, 
  3.965088999318074*^9}},ExpressionUUID->"6ac2fdd4-e4bd-46c9-8a29-\
85c0a3ea127e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", "1"}]], "Input",
 CellChangeTimes->{{3.964819395404455*^9, 3.964819396881115*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"03c20501-7fa8-40da-9313-888e5e176629"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9648193976353903`*^9, 3.9648372513620925`*^9, 
  3.964856621770751*^9, 3.9649178056760163`*^9, 3.965030149196705*^9, 
  3.965031576220708*^9, 3.965090861511361*^9, 3.965091779824908*^9, 
  3.9650970720149546`*^9, 3.9651147257205133`*^9, 3.9651177805937643`*^9, 
  3.965124294622552*^9, 3.9651801850210733`*^9, 3.965217352636507*^9, 
  3.9652206964710894`*^9, 3.965222141949685*^9, 3.965247277262919*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"9995a103-fc89-46d4-975a-f5498926d1c4"]
}, Open  ]],

Cell["\<\
Average energy is given by the expectation value of Hamiltonian, U(t) = <H0>\
\>", "Text",
 CellChangeTimes->{{3.9648179817409954`*^9, 3.964817990848746*^9}, {
  3.9648181929856777`*^9, 3.9648181974987783`*^9}, {3.9648184162594986`*^9, 
  3.9648184254899154`*^9}, {3.9648536651822243`*^9, 
  3.964853698005743*^9}},ExpressionUUID->"e68d7692-80d2-4de4-b1f3-\
c9ad5ced4ee7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H0Exp", "=", " ", 
  RowBox[{
   RowBox[{
    FractionBox["\[CapitalSigma]pp", "2"], "+", " ", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]", "2"], " ", "\[CapitalSigma]xx"}], "2"]}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9648188726298385`*^9, 3.9648189000860662`*^9}, {
  3.964818930464816*^9, 3.9648189336109457`*^9}, {3.9648190273377585`*^9, 
  3.9648190503338594`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"83e2c3e4-b62e-40dc-ace1-c4f8f04a82d6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"\[CapitalSigma]pp", "+", 
    RowBox[{"\[CapitalSigma]xx", " ", 
     SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.964818962752547*^9, 3.9648190517207756`*^9, 
  3.9648194012056847`*^9, 3.964837254620306*^9, 3.964856621866369*^9, 
  3.964917805768186*^9, 3.965030149304205*^9, 3.965031576319583*^9, 
  3.9650908616181016`*^9, 3.965091779905165*^9, 3.9650970720633345`*^9, 
  3.965114725790728*^9, 3.9651177806745415`*^9, 3.965124294719273*^9, 
  3.965180185118024*^9, 3.9652173527340827`*^9, 3.9652206965303802`*^9, 
  3.9652221420082183`*^9, 3.9652472773409557`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"797a083c-5a33-4674-84d4-09ed89c68935"]
}, Open  ]],

Cell[TextData[{
 "So the average energy is equal to  ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    SubscriptBox["E", "g"], 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["X1", "2"], "+", 
      SuperscriptBox["Y1", "2"], "-", 
      SuperscriptBox["Z1", "2"]}], ")"}]}], 
   RowBox[{"2", 
    RowBox[{"(", 
     RowBox[{"X1", "+", "Z1"}], ")"}]}]]],
  CellChangeTimes->{3.964818962752547*^9, 3.9648190517207756`*^9, 
   3.9648194012056847`*^9},ExpressionUUID->
  "b004e5df-28a9-4399-b4a2-d738f9bdaed2"],
 "."
}], "Text",
 CellChangeTimes->{{3.964819421529673*^9, 
  3.9648194676907806`*^9}},ExpressionUUID->"11d1bee4-f844-4876-9063-\
907be0796e66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 8(a) : Evolution of  U(t) when {n,l} = {1,0}",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{
  3.964815340793957*^9, {3.964819618760561*^9, 3.9648196369743433`*^9}, {
   3.9648253488208923`*^9, 
   3.964825395288397*^9}},ExpressionUUID->"9f8cb70a-73df-4167-96cc-\
94ea17937589"],

Cell["\<\
We shall see the dynamics of average energy U(t) for the case of (n,l)=(1,0).\
\>", "Text",
 CellChangeTimes->{{3.9650890650902977`*^9, 3.965089113617095*^9}, {
  3.965089235895728*^9, 
  3.965089259458002*^9}},ExpressionUUID->"57a8d8d1-a089-4a13-9bda-\
99303ddd0d9f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", "1"}]], "Input",
 CellChangeTimes->{{3.9648224402363615`*^9, 3.9648224442715034`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"a0b656b0-1551-409a-8854-405f13be5f59"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9648224447643204`*^9, 3.9648372603155417`*^9, 
  3.9648566219401093`*^9, 3.964917805823038*^9, 3.965030149412266*^9, 
  3.9650315763909883`*^9, 3.965090861709749*^9, 3.9650917799849305`*^9, 
  3.9650970721113358`*^9, 3.965114725860154*^9, 3.9651177807547398`*^9, 
  3.9651242948142414`*^9, 3.965180185236441*^9, 3.9652173528050933`*^9, 
  3.9652206965834866`*^9, 3.965222142070331*^9, 3.9652472774238477`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"c43a286a-8cc2-47e4-a657-3769f059e2fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.96478614276801*^9, 3.964786163236477*^9}, {
  3.9648223024903455`*^9, 3.9648223068564625`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"fb5f0086-cb50-4107-9edc-5e1e8f78ac7b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.964786174220108*^9, 3.9647866070983877`*^9, 
  3.964822408880703*^9, 3.9648372785446105`*^9, 3.9648566220104094`*^9, 
  3.9649178058883266`*^9, 3.965030149516727*^9, 3.965031576457447*^9, 
  3.965090861814228*^9, 3.965091780097863*^9, 3.9650970721751504`*^9, 
  3.9651147259301324`*^9, 3.9651177808182583`*^9, 3.965124294905734*^9, 
  3.96518018533042*^9, 3.965217352871426*^9, 3.965220696633274*^9, 
  3.965222142135374*^9, 3.9652472775191364`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"120e0424-0df5-4866-b705-359162a6c5d9"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{
  3.9650132729392214`*^9},ExpressionUUID->"a53225bc-201c-4e1a-a3e3-\
dddb9746a5a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellLabel->
  "In[203]:=",ExpressionUUID->"edeaab73-3adf-4b5d-b032-4f9bd14c59f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "2", "]"}], ",", 
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox[
    SqrtBox["3"], "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.964822401033269*^9, 3.9648224124605527`*^9}, 
   3.964837281383106*^9, 3.9648566220784793`*^9, 3.964917805946478*^9, 
   3.965030149645807*^9, 3.965031576528435*^9, 3.965090861901053*^9, 
   3.965091780177808*^9, 3.965097072222892*^9, 3.9651147260071745`*^9, 
   3.9651177808971996`*^9, 3.965124295000949*^9, 3.9651801854228525`*^9, 
   3.965217352948099*^9, 3.965220696691906*^9, 3.965222142232896*^9, 
   3.9652472775994096`*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"de7c012c-b20d-4231-9dd7-7cbe4ccb70b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"5f729fe7-7fdf-4794-a9fc-265ffe5ce071"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["3"]], ",", 
   FractionBox["4", "3"], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9647861795835943`*^9, 3.9647866117663345`*^9, 
  3.9648224199827976`*^9, 3.964822452321245*^9, 3.9648372842194357`*^9, 
  3.9648566221457205`*^9, 3.9649178060082507`*^9, 3.9650301497501545`*^9, 
  3.9650315765995173`*^9, 3.965090861990461*^9, 3.9650917802574644`*^9, 
  3.9650970722865667`*^9, 3.9651147260755825`*^9, 3.9651177810419693`*^9, 
  3.9651242950894847`*^9, 3.9651801855204697`*^9, 3.9652173530176144`*^9, 
  3.9652206967433434`*^9, 3.96522214239415*^9, 3.9652472776895676`*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"dfbd2161-01c6-4263-994c-3603251dc78e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"45f6e027-a70b-465a-9de7-d3b2ec6b3583"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.9647861869417677`*^9, 3.9647866149567165`*^9, 3.9648224248757534`*^9, 
   3.9648224567684507`*^9, 3.964837286896036*^9, 3.964856622230664*^9, 
   3.9649178060653734`*^9, 3.965030149852191*^9, 3.9650315766872373`*^9, 
   3.9650908620769525`*^9, 3.965091780337124*^9, 3.9650970723347073`*^9, 
   3.9651147261471124`*^9, 3.965117781121035*^9, 3.96512429518025*^9, 
   3.965180185615131*^9, 3.9652173530850973`*^9, 3.96522069679583*^9, 
   3.9652221424599333`*^9, 3.965247277766035*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"1b1e0993-111a-43d6-b7fe-3ed40ce2c427"]
}, Open  ]],

Cell["\<\
The corresponding values of bplus, bminus, bplusdot, and bminusdot are: \
\>", "Text",
 CellChangeTimes->{{3.9650892928662624`*^9, 
  3.9650893360217466`*^9}},ExpressionUUID->"91f59996-cd4b-4c1a-a25f-\
79c33b9b78f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[206]:=",ExpressionUUID->"ceeef3aa-6bf8-42c0-89a0-d2aa59ae1413"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox[
    RowBox[{"2", "-", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "t"}], 
       SqrtBox["3"]], "]"}]}]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{"2", "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]], 
    SqrtBox["3"]], ",", 
   FractionBox[
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", "t"}], 
      SqrtBox["3"]], "]"}], 
    SqrtBox[
     RowBox[{"6", "-", 
      RowBox[{"3", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", "t"}], "]"}], 
     SqrtBox[
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.964786193522727*^9, 3.964786620879633*^9, 3.9648224283628893`*^9, 
   3.964822460013616*^9, 3.9648372933162365`*^9, 3.9648566228586264`*^9, 
   3.9649178066668816`*^9, 3.965030150474355*^9, 3.9650315772977858`*^9, 
   3.965090862710581*^9, 3.96509178094485*^9, 3.965097072925481*^9, 
   3.965114726769271*^9, 3.9651177817551537`*^9, 3.9651242958058796`*^9, 
   3.965180186359785*^9, 3.9652173537120485`*^9, 3.965220697480213*^9, 
   3.965222143116175*^9, 3.9652472783967323`*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"d838f15f-ebc2-4171-a6f7-48e03f7df709"]
}, Open  ]],

Cell[TextData[{
 "Separating the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3d24b2ef-0a60-4156-bc54-3c93645975ef"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9650893608288937`*^9, 3.965089377024331*^9}, {
  3.965089424683347*^9, 
  3.9650894513082914`*^9}},ExpressionUUID->"b3f9bd87-5d7b-4c97-b2d8-\
9372374d1413"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647599956375804`*^9, {3.964786633005628*^9, 3.9647866338179164`*^9}},
 CellLabel->
  "In[207]:=",ExpressionUUID->"a7f97ef9-3146-4c8d-9d88-c4b9af0b84ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "-", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}], 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}]], "-", 
     FractionBox[
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.964786200823799*^9, 3.9647866349197884`*^9, 3.964822463546636*^9, 
  3.964837303827157*^9, 3.9648566232042813`*^9, 3.9649178070358524`*^9, 
  3.9650301508141026`*^9, 3.965031577645618*^9, 3.965090863114442*^9, 
  3.9650917812810907`*^9, 3.9650970732121706`*^9, 3.965114727172132*^9, 
  3.9651177820889406`*^9, 3.9651242963071375`*^9, 3.96518018682874*^9, 
  3.9652173541095037`*^9, 3.965220697864936*^9, 3.9652221434698467`*^9, 
  3.965247278857026*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"4acf4654-695a-4649-8542-9734e6320460"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"8abb5151-ad34-4483-8a61-6ce74c59db3a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "+", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"4", " ", "t"}], 
       SqrtBox["3"]], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"8", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "-", 
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}]], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}]], "+", 
      FractionBox["3", 
       RowBox[{"2", "+", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", 
          SqrtBox["3"], " ", "t"}], "]"}]}]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"4", " ", "t"}], 
       SqrtBox["3"]], "]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"8", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "-", 
     RowBox[{"6", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]}], 
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9650908633413*^9, 3.9650917819974527`*^9, 
  3.9650970733398495`*^9, 3.9651147273247175`*^9, 3.9651177823108597`*^9, 
  3.9651242964669123`*^9, 3.9651801869937325`*^9, 3.965217354277666*^9, 
  3.965220698017866*^9, 3.965222143684849*^9, 3.965247279004314*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"099fdf26-1de0-4d70-ad3e-d2ca95d4bb11"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "3cf4b40b-271d-4e08-92cd-7139c686210d"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{
  3.965013852281896*^9, {3.9650898133690634`*^9, 
   3.9650898150834093`*^9}},ExpressionUUID->"6807b4c5-fee6-4a45-b948-\
985a727e5c00"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.964786272183951*^9, 3.9647862734050655`*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"522da782-da9d-4ed0-9c07-9d1410be5e93"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"93", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"74", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"4", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"26", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"8", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"22", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"14", " ", "t"}], 
          SqrtBox["3"]], "]"}], "+", 
        RowBox[{"76", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "t"}], "]"}]}], "-", 
        RowBox[{"10", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", "t"}], "]"}]}]}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        FractionBox["t", 
         SqrtBox["3"]], "]"}], "2"]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"6", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], "2"]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.964760066273921*^9, 3.964760946691349*^9, 3.96476218370989*^9, 
   3.9647623119776993`*^9, 3.9647717008151608`*^9, {3.9647862795228853`*^9, 
   3.964786285234374*^9}, 3.9647866419920855`*^9, 3.964822469044648*^9, 
   3.964837308170907*^9, 3.96485662355966*^9, 3.9649178073321667`*^9, 
   3.9650301512094436`*^9, 3.9650315780327873`*^9, 3.965090863716441*^9, 
   3.96509178232646*^9, 3.96509707361135*^9, 3.965114727642364*^9, 
   3.9651177826593685`*^9, 3.965124296799243*^9, 3.9651801873339877`*^9, 
   3.965217354587723*^9, 3.9652206983390217`*^9, 3.9652221440225043`*^9, 
   3.9652472793263073`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"d41051b8-a9a6-4765-b0aa-6516409ec0a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.964760091159008*^9, {3.964786292797888*^9, 3.9647862937266088`*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"c43f53d9-11c7-4fba-a54c-f65d63953b6a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SqrtBox[
        RowBox[{"2", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["3"], " ", 
       SqrtBox[
        RowBox[{"2", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "t"}], "]"}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"3", " ", 
       SqrtBox[
        RowBox[{"2", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "t"}], 
           SqrtBox["3"]], "]"}]}]]}], "+", 
      RowBox[{
       SqrtBox["3"], " ", 
       SqrtBox[
        RowBox[{"2", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "t"}], "]"}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"4", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"8", " ", "t"}], 
        SqrtBox["3"]], "]"}], "-", 
      RowBox[{"6", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"6", " ", 
    SqrtBox["3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "t"}], 
         SqrtBox["3"]], "]"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.964786294470849*^9, 3.9647866498524714`*^9, 3.9648224745676603`*^9, 
  3.964837318027896*^9, 3.964856623871376*^9, 3.9649178076369567`*^9, 
  3.9650301515606503`*^9, 3.965031578338971*^9, 3.965090864028973*^9, 
  3.9650917826856594`*^9, 3.9650970739154005`*^9, 3.9651147279750934`*^9, 
  3.9651177829758697`*^9, 3.9651242971418877`*^9, 3.965180187705804*^9, 
  3.9652173549314384`*^9, 3.9652206986841097`*^9, 3.965222144380307*^9, 
  3.9652472796494017`*^9},
 CellLabel->
  "Out[210]=",ExpressionUUID->"fb6f9d25-022d-46e8-bf8a-5f2aafa3f092"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "f67bf4fe-99fa-4c3d-a989-32da6f613bf8"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.965013867559218*^9},ExpressionUUID->"48005fac-1fe5-493a-9d7b-\
a8706ec1cb26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.964786360213028*^9, 3.9647863610358157`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"8badda98-a01d-4d3c-b588-0760dbc34123"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"47", "-", 
     RowBox[{"8", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"4", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"8", " ", "t"}], 
       SqrtBox["3"]], "]"}], "-", 
     RowBox[{"8", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        SqrtBox["3"], " ", "t"}], "]"}]}]}], 
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}], 
    RowBox[{"8", "-", 
     RowBox[{"3", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        SqrtBox["3"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", 
       SqrtBox["3"], " ", "t"}], "]"}]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "10"}], "-", 
       RowBox[{"9", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"4", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       FractionBox["t", 
        SqrtBox["3"]], "]"}], "2"]}], 
    RowBox[{"3", " ", 
     RowBox[{"(", 
      RowBox[{"8", "-", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "t"}], 
          SqrtBox["3"]], "]"}]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", 
         SqrtBox["3"], " ", "t"}], "]"}]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.964760239583626*^9, 3.964760970108362*^9, 3.9647622121313066`*^9, 
   3.964762325248097*^9, 3.964771715621935*^9, {3.9647863563412848`*^9, 
   3.964786365028022*^9}, 3.9647866641485434`*^9, 3.9648224897659287`*^9, 
   3.9648373273747263`*^9, 3.964856624802391*^9, 3.9649178085728006`*^9, 
   3.965030152454588*^9, 3.9650315792484307`*^9, 3.965090864872671*^9, 
   3.9650917834693227`*^9, 3.9650970745674553`*^9, 3.9651147287989273`*^9, 
   3.965117783723522*^9, 3.96512429816452*^9, 3.9651801885593915`*^9, 
   3.9652173557787704`*^9, 3.9652206995279055`*^9, 3.965222145184924*^9, 
   3.965247280505912*^9},
 CellLabel->
  "Out[211]=",ExpressionUUID->"0dd75a0a-9593-4d2c-bce7-dd6d3ecebda4"]
}, Open  ]],

Cell["\<\
The final values of X, Y, and Z, when t = \[Tau] be Xf, Yf, and Zf .\
\>", "Text",
 CellChangeTimes->{3.965013886038147*^9, 
  3.9650140288291087`*^9},ExpressionUUID->"1a41d59f-75e9-4a37-b6ff-\
47b48cf06a6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"787c8392-12c4-4672-93e4-700350fdae78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["17", "15"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["8", "15"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.9647863826553497`*^9, 3.964786674894475*^9, 
   3.9648224992413263`*^9, 3.96483734048072*^9, 3.9648566249639688`*^9, 
   3.964917808693825*^9, 3.965030152567814*^9, 3.9650315793480835`*^9, 
   3.965090864959425*^9, 3.9650917836085997`*^9, 3.965097074631527*^9, 
   3.9651147288738003`*^9, 3.9651177838350115`*^9, 3.9651242982806005`*^9, 
   3.9651801886493044`*^9, 3.965217355853669*^9, 3.9652206995828595`*^9, 
   3.965222145287384*^9, 3.965247280589419*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"e02968aa-bcaa-4acc-878f-b7025b14052a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["X", "2"], "+", 
         SuperscriptBox["Y", "2"], "-", 
         SuperscriptBox["Z", "2"]}], ")"}], " "}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Z"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["Xf", "2"], "+", 
         SuperscriptBox["Yf", "2"], "-", 
         SuperscriptBox["Zf", "2"]}], ")"}], " "}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"Xf", "+", "Zf"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Omega]t/2\[Pi]\>\"", ",", "\"\<U(t)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.964812109276575*^9, 3.9648121212041907`*^9}, {3.9648225715856595`*^9, 
  3.9648226061964655`*^9}, {3.964822741627368*^9, 3.9648228388376803`*^9}, {
  3.9648228828980584`*^9, 3.964822906431076*^9}, {3.9648237313095765`*^9, 
  3.9648237909988117`*^9}, {3.964823835970854*^9, 3.96482385760184*^9}, {
  3.965096475949815*^9, 3.9650964773946342`*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"1a3cc96a-8369-46a0-b7da-ad6d2c8fd519"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$122617#1"]& ], 
    TagBox[
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQvdrx/HzL87l2q1eBwCv74mlNjHvCZ9vD+GV/+lR2
ha+G81Wu+NyTqdsD58/jLTEt0zoK5zPNXd4k9/k0nB9X/zuwZvlFOL9jzYmg
XrGrcP7dQ4ttzc/fgPNlz3/Mbiy7A+evCE/ten/vPpy/IaXYs/rEQzh/0+1j
RwWaHsP5q85eTv5m9BTON9/yvGwFx3M4/1UEX9ObfS/gfONP1kx/Z76C84vY
lJfE5ryB86/fkLELkH8H51+cL+vL//09nF8xSUJrw/UPcH7wedUXdsc+wvkr
T/JvL93wCc4XUmZu+tr1Gc4/9q2y/Xb5Fzi/V/NXB1foVzj/vGT47Ie63+D8
6BbzF3KS3+H8X76Khku/IPhPJvZtmfjoB5zvOfmGh9qZn3D+wc/aN5mX/YLz
W84xLXGf9BvOj+J4nHUl7w+cv/r/fCdO979wvnvhg5Alhv/g/G+OWskdPP/h
/Pc931df+ong10qn/9iUzeAA4zued1gccAPB13KIyVb0Y4Tz5ybUbBTbg+Cb
2t0TsTdmgvO7qtY1WK9A8DPTmrNiRJnh/Fz+WYUbuhH83+lbv2n8QvDd5O1b
StNY4Pztk7n0v95G8DduvxU+05MVzhc+VzPtdBuCX/pE7urfwwg+AKYO2e8=

       "]]},
     Annotation[#, "Charting`Private`Tag$122617#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Omega]t/2\[Pi]\"", TraditionalForm], 
    FormBox["\"U(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0.5000000000000017},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, {}}]], "Output",
 CellChangeTimes->{
  3.9648225068235836`*^9, 3.9648228404532533`*^9, {3.9648228869648867`*^9, 
   3.9648229076670785`*^9}, 3.9648237920138636`*^9, {3.9648238366198606`*^9, 
   3.9648238584613867`*^9}, 3.9648373439243*^9, 3.9648566251075497`*^9, 
   3.9649178088635283`*^9, 3.965030152780917*^9, 3.965031579504218*^9, 
   3.965090865154151*^9, 3.9650917837736883`*^9, 3.9650970747916255`*^9, 
   3.965114729030105*^9, 3.965117783993243*^9, 3.9651242984598103`*^9, 
   3.9651801888459544`*^9, 3.965217356034849*^9, 3.9652206998049717`*^9, 
   3.965222145480886*^9, 3.9652472807487*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"6a0cf59d-8cc4-4ee3-918c-57d667b776ee"]
}, Open  ]],

Cell[TextData[{
 "\[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "log2"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "d9651e47-b667-4847-b597-2572a7488036"],
 " corresponding to (l,n) = (1,0)"
}], "Text",
 CellChangeTimes->{{3.9648537776027584`*^9, 
  3.9648538783729587`*^9}},ExpressionUUID->"845d60bf-7f1d-463b-a1df-\
f2e1549e9a84"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.964815219823501*^9, 3.9648152475838485`*^9}, {
  3.9648240348457127`*^9, 3.9648240395004196`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"a5860a4f-14ad-490d-a991-680bcffeb25c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 8(b): Evolution of  U(t) for  {n,l} = {12,11}",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{
  3.964815340793957*^9, {3.964819618760561*^9, 3.9648196369743433`*^9}, {
   3.9648252924849277`*^9, 3.964825331328521*^9}, {3.96482537364054*^9, 
   3.9648253789076476`*^9}},ExpressionUUID->"5cf78af2-88e5-4a8b-a417-\
cfea7d4d6427"],

Cell["\<\
Now we will look at the dynamics of average energy U(t) for the case of \
(n,l)=(12,11).\
\>", "Text",
 CellChangeTimes->{{3.9650894848250933`*^9, 
  3.9650895110384965`*^9}},ExpressionUUID->"d0096595-c891-47e8-8272-\
594b1d2e9cef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Omega]", "=", "1"}]], "Input",
 CellChangeTimes->{{3.9648224402363615`*^9, 3.9648224442715034`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"c01429dc-a28e-4af0-beaa-0bf2a077d12f"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.9648224447643204`*^9, 3.9648373511942697`*^9, 
  3.96485662518896*^9, 3.964917808964944*^9, 3.9650301529169827`*^9, 
  3.965031579636156*^9, 3.965090865376994*^9, 3.9650917839325013`*^9, 
  3.965097074903203*^9, 3.9651147292266855`*^9, 3.965117784136348*^9, 
  3.9651242986142335`*^9, 3.965180189065897*^9, 3.965217356229104*^9, 
  3.965220699961301*^9, 3.9652221458400283`*^9, 3.965247280938219*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"72d790db-81a9-4dc6-b37e-2d99864b57d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"n", ",", "l"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{"12", ",", "11"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.96478614276801*^9, 3.964786163236477*^9}, {
  3.9648223024903455`*^9, 3.9648223068564625`*^9}, {3.964824916718382*^9, 
  3.9648249192996683`*^9}},
 CellLabel->
  "In[216]:=",ExpressionUUID->"bc7cfe68-703e-44f3-89a9-b1206b43ff1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"12", ",", "11"}], "}"}]], "Output",
 CellChangeTimes->{3.964786174220108*^9, 3.9647866070983877`*^9, 
  3.964822408880703*^9, 3.96482492027748*^9, 3.964837359393841*^9, 
  3.9648566252545643`*^9, 3.9649178090247536`*^9, 3.965030153025486*^9, 
  3.965031579704996*^9, 3.9650908654563317`*^9, 3.965091784027185*^9, 
  3.965097074967171*^9, 3.965114729299752*^9, 3.9651177842160783`*^9, 
  3.9651242987028456`*^9, 3.965180189144669*^9, 3.9652173562969103`*^9, 
  3.9652207000088277`*^9, 3.965222145988611*^9, 3.965247281015932*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"5843618d-2fe0-4c83-8901-49ca1c6c0d69"]
}, Open  ]],

Cell["\<\
The corresponding values of \[Beta] and the dimensionless parameters become: \
\>", "Text",
 CellChangeTimes->{
  3.965013938277788*^9},ExpressionUUID->"65228b99-f24c-4f99-80db-\
4acc2701e21c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Beta]", ",", "\[Omega]tilde", ",", "ktilde", ",", "\[Tau]tilde"}], 
   "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Log", "[", 
     FractionBox[
      RowBox[{"n", "+", "l", "+", "1"}], 
      RowBox[{"n", "-", "l"}]], "]"}], ",", 
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"2", "l"}], "+", "1"}], 
      RowBox[{
       RowBox[{"2", "n"}], "+", "1"}]]], ",", 
    FractionBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"n", "-", "l"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"n", "+", "l", "+", "1"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "l"}], "+", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "n"}], "+", "1"}], ")"}]}]], ",", 
    RowBox[{
     FractionBox["1", "4"], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "l"}], "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", "n"}], "+", "1"}], ")"}]}]]}]}], "}"}]}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"bd49f7e4-41e7-4f40-ba65-86c093753c63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Log", "[", "24", "]"}], ",", 
   FractionBox[
    SqrtBox["23"], "5"], ",", 
   FractionBox["48", "575"], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SqrtBox["23"]}], "4"]}], "}"}]], "Output",
 CellChangeTimes->{{3.964822401033269*^9, 3.9648224124605527`*^9}, 
   3.9648249260134287`*^9, 3.9648373623121815`*^9, 3.9648566253217573`*^9, 
   3.9649178090859766`*^9, 3.9650301531284943`*^9, 3.9650315797762012`*^9, 
   3.965090865548209*^9, 3.9650917841221547`*^9, 3.965097075032779*^9, 
   3.9651147293846874`*^9, 3.9651177842953067`*^9, 3.9651242987968693`*^9, 
   3.9651801892301607`*^9, 3.9652173563683233`*^9, 3.965220700057188*^9, 
   3.96522214608442*^9, 3.9652472810981655`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"84915365-31a5-459f-9eeb-e1d85141d7f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\[Omega]p", ",", "k", ",", "\[Tau]"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Omega]", " ", "\[Omega]tilde"}], ",", 
    RowBox[{"ktilde", " ", 
     SuperscriptBox["\[Omega]", "2"]}], ",", 
    RowBox[{"2", "\[Pi]", " ", 
     FractionBox["\[Tau]tilde", "\[Omega]"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.9647592861314707`*^9, 3.964759401031719*^9}, {
  3.9647608327748623`*^9, 3.9647608497201686`*^9}, {3.9647715980490255`*^9, 
  3.964771600779557*^9}, {3.9647716533885336`*^9, 3.9647716568277044`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"0d6d09fe-f429-4f7a-851c-61a1f31b3813"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox["23"], "5"], ",", 
   FractionBox["48", "575"], ",", 
   FractionBox[
    RowBox[{"5", " ", 
     SqrtBox["23"], " ", "\[Pi]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.9647595824428983`*^9, 3.9647596279521923`*^9, 
  3.964759914639708*^9, 3.964760850874628*^9, 3.9647608994410615`*^9, 
  3.9647621143236094`*^9, 3.96476226584241*^9, 3.964771604513754*^9, 
  3.964771659261014*^9, 3.9647861795835943`*^9, 3.9647866117663345`*^9, 
  3.9648224199827976`*^9, 3.964822452321245*^9, 3.9648249303363657`*^9, 
  3.964837369141497*^9, 3.9648566253834195`*^9, 3.9649178091443377`*^9, 
  3.965030153231789*^9, 3.9650315798469906`*^9, 3.9650908656396103`*^9, 
  3.965091784233777*^9, 3.965097075079254*^9, 3.965114729480223*^9, 
  3.9651177843760214`*^9, 3.9651242988946886`*^9, 3.9651801893140545`*^9, 
  3.9652173564350023`*^9, 3.965220700105983*^9, 3.965222146147958*^9, 
  3.9652472811804028`*^9},
 CellLabel->
  "Out[218]=",ExpressionUUID->"31a742ed-827e-4ac4-95e3-c5df6d3fd35f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Eta]", "=", 
  SqrtBox[
   RowBox[{"1", "+", 
    FractionBox[
     RowBox[{"2", " ", "k"}], 
     SuperscriptBox["\[Omega]p", "2"]]}]]}]], "Input",
 CellChangeTimes->{{3.96475992180062*^9, 3.964759932116951*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"6f8aa52e-ec43-4a00-9a3e-e38632c4c070"],

Cell[BoxData[
 FractionBox["25", "23"]], "Output",
 CellChangeTimes->{
  3.9647599342781143`*^9, {3.9647608747580976`*^9, 3.9647609031366744`*^9}, 
   3.964762117271931*^9, 3.964762269664248*^9, 3.9647716632119694`*^9, 
   3.9647861869417677`*^9, 3.9647866149567165`*^9, 3.9648224248757534`*^9, 
   3.9648224567684507`*^9, 3.9648249337670436`*^9, 3.9648373715343914`*^9, 
   3.9648566254537225`*^9, 3.964917809202673*^9, 3.9650301533332186`*^9, 
   3.9650315799122157`*^9, 3.9650908657253838`*^9, 3.9650917843293324`*^9, 
   3.9650970751465116`*^9, 3.9651147295666*^9, 3.965117784455494*^9, 
   3.9651242989837685`*^9, 3.965180189395722*^9, 3.965217356493078*^9, 
   3.9652207001536765`*^9, 3.9652221462122216`*^9, 3.96524728125448*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"6d687372-7639-4fbb-b04e-f7fbf9ec6547"]
}, Open  ]],

Cell["\<\
The corresponding values of bplus, bminus, bplusdot, and bminusdot are: \
\>", "Text",
 CellChangeTimes->{3.9650139453814244`*^9, 
  3.965089768029897*^9},ExpressionUUID->"c93f9416-d250-45a3-a142-\
d42668df9e0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"bplus", ",", "bminus", ",", "bplusdot", ",", "bminusdot"}], "}"}],
   "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        SuperscriptBox["\[Omega]p", "2"]]}]], ",", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[Omega]", "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", 
           RowBox[{"\[Eta]", " ", "t", " ", "\[Omega]p"}], "]"}], "2"]}], 
        RowBox[{
         SuperscriptBox["\[Eta]", "2"], "  ", 
         SuperscriptBox["\[Omega]p", "2"]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Omega]", "-", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"\[Omega]", "+", "\[Omega]p"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", "\[Omega]p"}], "]"}], "2"]}], 
          SuperscriptBox["\[Omega]p", "2"]]}]]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "k"}], "+", 
         SuperscriptBox["\[Omega]", "2"], "-", 
         SuperscriptBox["\[Omega]p", "2"]}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t", " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           FractionBox[
            RowBox[{"2", " ", "k"}], 
            SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], "]"}]}], 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "+", 
         FractionBox[
          RowBox[{"2", " ", "k"}], 
          SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", 
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{"1", "+", 
              FractionBox[
               RowBox[{"2", " ", "k"}], 
               SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
           "]"}], "2"], "+", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[Omega]", "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"t", " ", 
              SqrtBox[
               RowBox[{"1", "+", 
                FractionBox[
                 RowBox[{"2", " ", "k"}], 
                 SuperscriptBox["\[Omega]p", "2"]]}]], " ", "\[Omega]p"}], 
             "]"}], "2"]}], 
          RowBox[{
           RowBox[{"2", " ", "k"}], "+", 
           SuperscriptBox["\[Omega]p", "2"]}]]}]]}]]}], "}"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.964759691091907*^9, 3.9647597113959694`*^9}, 
   3.9647597583189154`*^9},
 CellLabel->
  "In[220]:=",ExpressionUUID->"7dc730c3-2b13-4ae2-b91b-ac57275d4a73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    SqrtBox[
     RowBox[{"24", "-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["23"], " ", "t"}], "5"], "]"}]}]], 
    SqrtBox["23"]], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    SqrtBox[
     RowBox[{"24", "+", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"10", " ", "t"}], 
        SqrtBox["23"]], "]"}]}]]}], ",", 
   FractionBox[
    RowBox[{"Sin", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["23"], " ", "t"}], "5"], "]"}], 
    RowBox[{"5", " ", 
     SqrtBox[
      RowBox[{"24", "-", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"10", " ", "t"}], 
       SqrtBox["23"]], "]"}], 
     RowBox[{
      SqrtBox["23"], " ", 
      SqrtBox[
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}]]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9647596932112503`*^9, 3.9647597120033803`*^9}, 
   3.964759760167213*^9, 3.9647599397663536`*^9, 3.9647609096020308`*^9, 
   3.964762150176815*^9, 3.964762277249237*^9, 3.964771684566253*^9, 
   3.964786193522727*^9, 3.964786620879633*^9, 3.9648224283628893`*^9, 
   3.964822460013616*^9, 3.964824938605051*^9, 3.9648373777975645`*^9, 
   3.9648566261689005`*^9, 3.9649178098947716`*^9, 3.9650301540989*^9, 
   3.9650315805986*^9, 3.96509086644107*^9, 3.9650917850794153`*^9, 
   3.9650970758020525`*^9, 3.9651147303498726`*^9, 3.965117785153446*^9, 
   3.965124299734637*^9, 3.965180190118181*^9, 3.96521735725838*^9, 
   3.9652207008943195`*^9, 3.965222147094079*^9, 3.965247281977475*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"239af7f8-8c48-43bd-b654-870f3633faaa"]
}, Open  ]],

Cell[TextData[{
 "Separating the real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "9c20e881-4620-4072-b0da-e9f8fe05f721"],
 ":"
}], "Text",
 CellChangeTimes->{
  3.965089784140126*^9},ExpressionUUID->"2c41af2e-2b76-4f31-82a9-\
bcefa65e1563"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA12", ",", "ImA12"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bplus", "2"]}]], "-", 
       FractionBox["\[Omega]", 
        RowBox[{"2", 
         SuperscriptBox["bminus", "2"]}]]}], ")"}], ",", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", " ", 
        FractionBox["bplusdot", 
         RowBox[{"2", "bplus"}]]}], "+", " ", 
       FractionBox["bminusdot", 
        RowBox[{"2", "bminus"}]]}], ")"}]}], "}"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647599956375804`*^9, {3.964786633005628*^9, 3.9647866338179164`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"e81e9ce9-0c19-41f8-a8ea-3253c00085b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["25", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}], ")"}]}]]}], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"25", " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}]]}], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.964759998039766*^9, 3.9647609156652174`*^9, 
  3.9647621589562907`*^9, 3.964762283551832*^9, 3.964771690878895*^9, 
  3.964786200823799*^9, 3.9647866349197884`*^9, 3.964822463546636*^9, 
  3.9648249436755404`*^9, 3.964837384014599*^9, 3.964856626789502*^9, 
  3.9649178104388323`*^9, 3.9650301548391466`*^9, 3.9650315812030582`*^9, 
  3.965090867013297*^9, 3.965091785734966*^9, 3.9650970763808236`*^9, 
  3.9651147309381733`*^9, 3.965117785803813*^9, 3.9651243004955783`*^9, 
  3.965180190698186*^9, 3.9652173578345313`*^9, 3.9652207014488316`*^9, 
  3.9652221477324343`*^9, 3.9652472825737963`*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"9e0af1c7-f974-47f7-b103-04d1ae4a8687"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"ReA11", ",", "ImA11", ",", "ReA22", ",", "ImA22"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}], ",", 
     RowBox[{
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bplus", "2"]}]], "+", 
      FractionBox["\[Omega]", 
       RowBox[{"2", 
        SuperscriptBox["bminus", "2"]}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["bplusdot", 
        RowBox[{"2", "bplus"}]]}], "-", 
      FractionBox["bminusdot", 
       RowBox[{"2", "bminus"}]]}]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellLabel->
  "In[222]:=",ExpressionUUID->"85e9dd67-1005-4a53-8016-e06b02ecc530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["25", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]], ",", 
   RowBox[{
    FractionBox["25", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"24", "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
    FractionBox["23", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "24"}], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ",", 
   FractionBox[
    RowBox[{
     FractionBox[
      RowBox[{"25", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}]], "+", 
     FractionBox[
      RowBox[{"23", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], 
    RowBox[{"10", " ", 
     SqrtBox["23"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.9650897379890523`*^9, 3.9650908674400234`*^9, 
  3.965091786135948*^9, 3.9650970767614565`*^9, 3.965114731461564*^9, 
  3.9651177862160254`*^9, 3.9651243009449167`*^9, 3.965180191144122*^9, 
  3.9652173582763042`*^9, 3.9652207018924875`*^9, 3.965222148329392*^9, 
  3.965247282988264*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"4dbcdb22-503a-4894-9553-83eb5dffe840"]
}, Open  ]],

Cell[TextData[{
 "The real and imaginary parts of (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "12"], TraditionalForm]],ExpressionUUID->
  "495c2cc7-07a9-4518-8515-dd783c3360ca"],
 ")^2 are given by"
}], "Text",
 CellChangeTimes->{
  3.9650139565542707`*^9, {3.965089795983695*^9, 
   3.9650897968755703`*^9}},ExpressionUUID->"441081d8-537c-476e-942c-\
dc6465e1bbab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReA12sqr", "=", 
  RowBox[{
   RowBox[{
    FractionBox["1", 
     RowBox[{"4", " ", 
      SuperscriptBox["bminus", "4"], " ", 
      SuperscriptBox["bplus", "4"]}]], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["bminus", "2"]}], " ", 
       SuperscriptBox["bplus", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"bminusdot", " ", "bplus"}], "-", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], "2"]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["bminus", "2"], "-", 
          SuperscriptBox["bplus", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["\[Omega]", "2"]}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.9647600392079163`*^9, {3.964786272183951*^9, 3.9647862734050655`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"0a9979ec-b602-458d-933a-8976e2005f39"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "575"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "48"}], "+", 
          RowBox[{"23", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "+", 
          RowBox[{"25", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"25", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"10", " ", "t"}], 
            SqrtBox["23"]], "]"}]}], "-", 
         RowBox[{"23", " ", 
          RowBox[{"(", 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], "2"]}], ")"}],
     "/", 
    RowBox[{"(", 
     RowBox[{"2300", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}], ")"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "24"}], "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], "2"]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.964760066273921*^9, 3.964760946691349*^9, 3.96476218370989*^9, 
   3.9647623119776993`*^9, 3.9647717008151608`*^9, {3.9647862795228853`*^9, 
   3.964786285234374*^9}, 3.9647866419920855`*^9, 3.964822469044648*^9, 
   3.964824950437019*^9, 3.964837392953227*^9, 3.9648566289167438`*^9, 
   3.964917812413757*^9, 3.9650301569544497`*^9, 3.965031583282175*^9, 
   3.9650908695223503`*^9, 3.9650917882427454`*^9, 3.965097078623248*^9, 
   3.9651147336853867`*^9, 3.9651177882893367`*^9, 3.9651243032563534`*^9, 
   3.9651801933240385`*^9, 3.9652173604159408`*^9, 3.9652207039731765`*^9, 
   3.965222150468129*^9, 3.965247285189892*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"98d5619a-453c-4fad-87b0-c528109baab1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImA12sqr", "=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"bminus", "-", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"bminus", "+", "bplus"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bminusdot"}], " ", "bplus"}], "+", 
          RowBox[{"bminus", " ", "bplusdot"}]}], ")"}], " ", "\[Omega]"}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox["bminus", "3"], " ", 
        SuperscriptBox["bplus", "3"]}], ")"}]}], ")"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{
  3.964760091159008*^9, {3.964786292797888*^9, 3.9647862937266088`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"1304d615-d016-480e-9d1f-5450baf40d56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"23", " ", 
       SqrtBox[
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}]]}], "-", 
      RowBox[{"5", " ", 
       SqrtBox["23"], " ", 
       SqrtBox[
        RowBox[{"24", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"23", " ", 
       SqrtBox[
        RowBox[{"24", "+", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"10", " ", "t"}], 
           SqrtBox["23"]], "]"}]}]]}], "+", 
      RowBox[{"5", " ", 
       SqrtBox["23"], " ", 
       SqrtBox[
        RowBox[{"24", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", 
            SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"24", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"4", " ", "t"}], 
         RowBox[{"5", " ", 
          SqrtBox["23"]}]], "]"}]}], "-", 
      RowBox[{"600", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], "+", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"96", " ", "t"}], 
        RowBox[{"5", " ", 
         SqrtBox["23"]}]], "]"}], "-", 
      RowBox[{"552", " ", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"230", " ", 
    SqrtBox["23"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"24", "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"10", " ", "t"}], 
         SqrtBox["23"]], "]"}]}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "24"}], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", 
          SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.9647600955481253`*^9, 3.9647609572279406`*^9, 
  3.964762189712345*^9, 3.964762315911848*^9, 3.964771702991533*^9, 
  3.964786294470849*^9, 3.9647866498524714`*^9, 3.9648224745676603`*^9, 
  3.9648249509112153`*^9, 3.9648373978612847`*^9, 3.9648566294331284`*^9, 
  3.9649178128237143`*^9, 3.965030157425508*^9, 3.9650315837028575`*^9, 
  3.965090869995075*^9, 3.965096051294902*^9, 3.965097078972045*^9, 
  3.9651147341149807`*^9, 3.96511778870286*^9, 3.965124303732875*^9, 
  3.9651801937610373`*^9, 3.9652173608489656`*^9, 3.965220704381627*^9, 
  3.9652221508810196`*^9, 3.96524728560823*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"27e93258-53a7-4626-8e52-3c7bc4ce352e"]
}, Open  ]],

Cell[TextData[{
 "Now, as we have obtained the expressions of real and imaginary parts of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "ij"], TraditionalForm]],ExpressionUUID->
  "3125fea6-586e-4e8d-9cd6-bf5b3bf46006"],
 ", we can find the corresponding X, Y, and Z. "
}], "Text",
 CellChangeTimes->{
  3.965013975623522*^9},ExpressionUUID->"19dc3b65-9fe8-438a-9d89-\
e6e6a4714fe6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ReA11", "-", 
      FractionBox["ReA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     RowBox[{"ImA11", "-", 
      FractionBox["ImA12sqr", 
       RowBox[{"2", " ", "ReA11"}]]}], ",", 
     FractionBox[
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ReA12", "^", "2"}], " ", "+", " ", 
         RowBox[{"ImA12", "^", "2"}]}], ")"}]}], 
      RowBox[{"2", " ", "ReA11"}]]}], "}"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.964786360213028*^9, 3.9647863610358157`*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"fa9807f4-9f5e-4467-93e7-a95ca9ffacd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"1324227", "+", 
     RowBox[{"576", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"4", " ", "t"}], 
        RowBox[{"5", " ", 
         SqrtBox["23"]}]], "]"}]}], "-", 
     RowBox[{"1152", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"10", " ", "t"}], 
        SqrtBox["23"]], "]"}]}], "+", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"96", " ", "t"}], 
       RowBox[{"5", " ", 
        SqrtBox["23"]}]], "]"}], "-", 
     RowBox[{"1152", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", " ", 
         SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], 
    RowBox[{"1150", " ", 
     RowBox[{"(", 
      RowBox[{"1152", "+", 
       RowBox[{"23", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"10", " ", "t"}], 
          SqrtBox["23"]], "]"}]}], "-", 
       RowBox[{"25", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", 
           SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", " ", 
        SqrtBox["23"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"42", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "+", 
          RowBox[{"2304", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "-", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"54", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"96", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"96", " ", "t"}], 
             RowBox[{"5", " ", 
              SqrtBox["23"]}]], "]"}]}], "+", 
          RowBox[{"48", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"20", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"142", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"146", " ", "t"}], 
            RowBox[{"5", " ", 
             SqrtBox["23"]}]], "]"}], "-", 
          RowBox[{"2304", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}], "+", 
          RowBox[{"48", " ", 
           RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"4", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"24", "+", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"10", " ", "t"}], 
            SqrtBox["23"]], "]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1152", "+", 
          RowBox[{"23", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"10", " ", "t"}], 
             SqrtBox["23"]], "]"}]}], "-", 
          RowBox[{"25", " ", 
           RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"2", " ", 
              SqrtBox["23"], " ", "t"}], "5"], "]"}]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "24"}], "+", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", 
             SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}], ")"}]}], 
     ")"}]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["25", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"24", "+", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"10", " ", "t"}], 
               SqrtBox["23"]], "]"}]}], ")"}]}]], "+", 
         FractionBox["23", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "24"}], "+", 
             RowBox[{"Cos", "[", 
              FractionBox[
               RowBox[{"2", " ", 
                SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], ")"}], 
       "2"], "+", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"25", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}]], "-", 
          FractionBox[
           RowBox[{"23", " ", 
            RowBox[{"Sin", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}]]}], ")"}], "2"], 
       "2300"]}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["25", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"24", "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"10", " ", "t"}], 
              SqrtBox["23"]], "]"}]}], ")"}]}]], "-", 
        FractionBox["23", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "24"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox[
              RowBox[{"2", " ", 
               SqrtBox["23"], " ", "t"}], "5"], "]"}]}], ")"}]}]]}], 
       ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.964760239583626*^9, 3.964760970108362*^9, 3.9647622121313066`*^9, 
   3.964762325248097*^9, 3.964771715621935*^9, {3.9647863563412848`*^9, 
   3.964786365028022*^9}, 3.9647866641485434`*^9, 3.9648224897659287`*^9, 
   3.964824963009194*^9, 3.964837407616997*^9, 3.964856632248*^9, 
   3.964917815373907*^9, 3.965030160228647*^9, 3.965031586519587*^9, 
   3.965090872146736*^9, 3.9650960537017612`*^9, 3.965097081117649*^9, 
   3.9651147363870497`*^9, 3.965117790824095*^9, 3.9651243060593643`*^9, 
   3.96518019620492*^9, 3.9652173631242175`*^9, 3.9652207066162076`*^9, 
   3.965222153103381*^9, 3.965247287851551*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"efbf56e4-443f-495a-9378-4c55e885529c"]
}, Open  ]],

Cell["\<\
The final values of X, Y, and Z, when t = \[Tau] be Xf, Yf, and Zf .\
\>", "Text",
 CellChangeTimes->{{3.9650140015323515`*^9, 
  3.965014004234913*^9}},ExpressionUUID->"80239df2-34a3-49f4-aabc-\
312db9c0409f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Xf", ",", "Yf", ",", "Zf"}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"X", ",", "Y", ",", "Z"}], "}"}], "/.", 
    RowBox[{"t", "->", "\[Tau]"}]}], "//", "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9647603147911916`*^9, 3.9647603332681246`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"e0607d21-74cf-4388-bb01-f55f3dad26c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["331777", "331775"], ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1152", "331775"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.964760329923745*^9, 3.9647603390977087`*^9}, 
   3.96476097856413*^9, 3.964762212687726*^9, 3.9647623258466244`*^9, 
   3.9647717580515056`*^9, 3.9647863826553497`*^9, 3.964786674894475*^9, 
   3.9648224992413263`*^9, 3.964824976589439*^9, 3.964837415663761*^9, 
   3.964856632406293*^9, 3.9649178155361214`*^9, 3.9650301603369074`*^9, 
   3.9650315866155014`*^9, 3.965090872259411*^9, 3.965096053806567*^9, 
   3.9650970811810865`*^9, 3.9651147364910946`*^9, 3.9651177909192257`*^9, 
   3.965124306169478*^9, 3.9651801963114805`*^9, 3.965217363221428*^9, 
   3.965220706696336*^9, 3.9652221531916666`*^9, 3.9652472879463034`*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"f7b4046d-6248-41cf-82c9-cee488ccd61e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["X", "2"], "+", 
         SuperscriptBox["Y", "2"], "-", 
         SuperscriptBox["Z", "2"]}], ")"}], " "}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"X", "+", "Z"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["Xf", "2"], "+", 
         SuperscriptBox["Yf", "2"], "-", 
         SuperscriptBox["Zf", "2"]}], ")"}], " "}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"Xf", "+", "Zf"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Tau]"}], "}"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Purple", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "->", "Black"}], ",", 
   RowBox[{"Ticks", "->", "None"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*FractionBox[\(\[Omega]t\), \(2  \[Pi]\)]\)\>\"", ",", 
      "\"\<U(t)\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.964761003405821*^9, 3.964761007877067*^9}, {
  3.964812109276575*^9, 3.9648121212041907`*^9}, {3.9648225715856595`*^9, 
  3.9648226061964655`*^9}, {3.964822741627368*^9, 3.9648228388376803`*^9}, {
  3.9648228828980584`*^9, 3.964822906431076*^9}, {3.9648237313095765`*^9, 
  3.9648237909988117`*^9}, {3.964823835970854*^9, 3.96482385760184*^9}, {
  3.9648256435605726`*^9, 3.9648256559427433`*^9}, {3.9650964934303293`*^9, 
  3.965096495232443*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"f86fb09e-26a7-4c95-9aaa-a066c0137418"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1: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
z6g9z04mMREPzP5+tOcLCbaDV7RZiP8Hxfxtkg==
       "]]},
     Annotation[#, "Charting`Private`Tag$122991#1"]& ], 
    TagBox[
     {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQzX6sokDi9Eq79BddFvZ8D+xPTfP6sm7FdXsY/xD/
zPC1K57D+e6pyzalLf8B56tUFPsUBzA5wPisgXOslfQ54Pwsswp7vV4+ON9v
Z7Okpb0QnL/y7pK5neWicP4W71PzLy6QgPPVUk/O3DpZGs6/xaIk53FMDs7/
ra7la/1QAc5PLHL1OheuBOe/qO/tsXinDOcrJx86VZCpCufXc6r4NbCow/mb
r7RP4J6hAefPKr1xLkVAC85fdDM0aOoKbTg/TvjAxcmqunC+tUD4tMxDenD+
d4kfPXe1DeD81SK7fd6+QPA/FIqsf7HVEM7ns0rh9y41gvNniJj6vzYwRrgv
YI5h+R8Ef8X3n4JZu0zgfF2Gd1M8OkzhfDnp5O8pQWZw/ssF58Jf8JnD+S4d
F6LCbyP4lbdOROvOsoDzpeydbBxDLeF8H9ag/Q4KVnB+uFmEw/K7CP7nE1+S
f66yhvMzj7W3bsqygfO9r81uW6lmC+fvdXfT6vmE4HOqPD99dYMdnP80UU6A
u94ezheLfC25X8UBzl++7ZCWTjOCz+D6lKf/JYJ/jIM5T9XTEc4/FPpw361l
CH77Za6HrTxOcP6ONv2mlGwEP2D/BPGIBQj+8+8f13hfRfABoJxm7A==
       "]]},
     Annotation[#, "Charting`Private`Tag$122991#2"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*FractionBox[\\(\[Omega]t\\), \\(2  \[Pi]\\)]\\)\"", 
     TraditionalForm], 
    FormBox["\"U(t)\"", TraditionalForm]},
  AxesOrigin->{0, 0.500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{{}, {}}]], "Output",
 CellChangeTimes->{
  3.9648225068235836`*^9, 3.9648228404532533`*^9, {3.9648228869648867`*^9, 
   3.9648229076670785`*^9}, 3.9648237920138636`*^9, {3.9648238366198606`*^9, 
   3.9648238584613867`*^9}, 3.964824982093006*^9, 3.964825656945219*^9, 
   3.964837419125507*^9, 3.9648566327426043`*^9, 3.96491781586012*^9, 
   3.9650301607035675`*^9, 3.96503158695113*^9, 3.965090872609399*^9, 
   3.965096054080967*^9, 3.9650970814994936`*^9, 3.9651147368387074`*^9, 
   3.965117791315974*^9, 3.9651243065435877`*^9, 3.965180196658802*^9, 
   3.9652173635697265`*^9, 3.965220707012072*^9, 3.9652221535320177`*^9, 
   3.9652472883052483`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"aa3795ac-0eaf-4f10-827a-f06019efa373"]
}, Open  ]],

Cell[TextData[{
 "\[Beta] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     SubscriptBox["k", "B"], 
     SubscriptBox["E", "g"]], "3.178"}], TraditionalForm]],ExpressionUUID->
  "86d0f835-ff15-45b1-994e-d23b8a62c06e"],
 " corresponding to (l,n) = (12, 11)"
}], "Text",
 CellChangeTimes->{{3.9648538996039915`*^9, 3.9648539301010656`*^9}, 
   3.964854573732897*^9, 3.964854767410925*^9, 3.9648548455830345`*^9, {
   3.9649279956876106`*^9, 
   3.96492799790219*^9}},ExpressionUUID->"3c98dcda-e573-4236-89a4-\
44024bddaaa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Figure 9(b):  Heating and Cooling from Quenching",
 FontVariations->{"Underline"->True}]], "Subsection",
 CellChangeTimes->{{3.9648254691155443`*^9, 3.9648254806862545`*^9}, {
  3.9648256122063303`*^9, 
  3.9648256316932626`*^9}},ExpressionUUID->"c6ed8fa6-8339-4c1f-92e0-\
f256628d37e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"y", "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<\[Omega]\>\"", ",", 
         RowBox[{"Rotate", "[", 
          RowBox[{
          "\"\<\!\(\*FractionBox[\(U\), SubscriptBox[\(E\), \(g\)]]\)\>\"", 
           ",", 
           FractionBox[
            RowBox[{"-", "\[Pi]"}], "2"]}], "]"}]}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", "Black", "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", "None"}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"x", "==", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "1", ",", 
        RowBox[{"-", "1"}]}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"x", "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"y", "==", "0"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"y", "==", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"ContourStyle", "->", "Black"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Arrowheads", "[", "0.03", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.6", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.5"}], ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", "0.5"}]}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0.5"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.5", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0.55", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}], ",", "Blue", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "0"}], "}"}], "]"}], ",", "Red", ",", 
       RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}], "]"}]}], 
   "\n", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.9648258502909217`*^9, 3.9648258989614067`*^9}, {
   3.9648259500595655`*^9, 3.964826002893663*^9}, {3.9648260805839796`*^9, 
   3.964826134565138*^9}, {3.9648261908653145`*^9, 3.9648261980395393`*^9}, {
   3.964826305801735*^9, 3.9648263124386997`*^9}, {3.9648264591818953`*^9, 
   3.96482646004178*^9}, {3.964826536532633*^9, 3.964826541465353*^9}, {
   3.964826585909954*^9, 3.964826587685843*^9}, {3.964826660788785*^9, 
   3.964826689807288*^9}, {3.9648267537539225`*^9, 3.9648268035008893`*^9}, {
   3.9648268383208675`*^9, 3.964826856333062*^9}, 3.964827000389985*^9, {
   3.964827039258757*^9, 3.964827085810495*^9}, {3.964827224853816*^9, 
   3.964827246197937*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"ca8735a6-e758-4b4e-b867-e32292b4ad54"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxd1E9I02Ecx/HlQTrspCCj21Q6hnSwy8jbYB6FBXXSqFvLm7EuQtQQDyL2
hxGxg3mQ6BDDhsSoaAmCkJJkxqRNN93804oGnoLq+X629w9+D4yHF3t+z/P9
Pn++4evjIzc7AoFA/P/P9Wq/htr9RjOy3oz8xM9qyUwt2cC3irlEMfcDu9Hr
zRN8tjAQLAx43nbDE8d48YVrR3gi4xY4xNG5/thcv+ee1FgoNVbH1aR9gJfc
9MUDfN8ND3keibu2j3tjboEq/m0JVPB7F37Q86wLJ7aHR930qV18wQ0vlPGf
v66VfPv3HV+y/drBX21/iviOpfcNd1n+2zhrw7d8+X3BDctnE89Y/J998W7g
hxbfJ7xp8azhblt/FcdsvRU8bfN/wI9tvrf4jH2/jO/Z+CzutP8Xcf6Bcxqr
f5VvO2Lj0+/ajup7PK/5cVjr49eKDz9V/Piq8sN9yh9XtD/4ufYPD2p/8RPt
Pz7V+eBrOj/8RueLz+n88aTuBy7p/uAh3S+8oPuH9ebL+KLuL76h+40f6f7j
j3ofvnw8n9f7wlf0/vCU3ide1vvFdb1vX/51PKz6gO+qfuCXqi94R/UHB1Wf
8GXVL3xb9Q1nVP9wqz7iVo//AXVJyuA=
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["y", HoldForm], "\[Equal]", "1"}]],
       Annotation[#, HoldForm[$CellContext`y] == 1, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxd1E9I02Ecx/EhXoRd9CDD22J0jPAgQsN1CmY3YR3qkpE3lzdhHjyIjegQ
MSwi1IMYjOgQI0RCLKwgDJo41MmGW20r+6NFQqdg7vl+2vsHv4ffeHix3+95
vt/v8yd8Y2JkrCMQCCRaP9er/Y7971+1vXUSzZ9Ef+HFr6nWc4xvlVaSpZUj
PJR3H/zEwTfnW4/nsns9+QM/e+radzxlE3zDw5lIPBPx3JceDaVHD/Fhyj7A
q2740hd8x70e8nwl4VoDn427Cer4r0s3X8NvXfhBz3MunPhnfNMNn/6E+y3h
KlZtPS9b/Q7wRatXGVesPiU8bent+/Iv4pf2+i6+avnt+PIp4IcW/zYesHi3
8BOL7yOuWTwfcNjmf4+v2Xzv8GMbfwPnbLx1HLHvV/GSvZ/DMfs/662/+RFW
/3yt7c3b9n9738aa5iye0fi4U/PjjOLDdxU/vqz8cLfyxwXVBz9Q/fA51Rff
U/3xsdYHj2j9cE7ri3u0/nhS+wPvaf/gQe0vPK/9h/81Xav44q3i69rf+L72
P36t84H/6PzgMzpfvvwaeFbnE7/Q+cV1nW/cq/OPL+l+8NXDc1b3Cy7q/sFd
up/wBd1feFz3G17Q/Yfzuh9xuz8FJAzL8Q==
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["x", HoldForm], "\[Equal]", "1"}]],
       Annotation[#, HoldForm[$CellContext`x] == 1, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJyN0rtKA0EYhuFRUK/ACxCioF5JEg8geAOCZRIPNyIbQQURSWFhYZFiFRJR
gtjYiIggSTRRo8YzWNhq/oFPfEGYgZ3lGXYO/zc7MJObmu12zk3/PJ333/Zx
8J/3MtU4U32Td+EYznYYvwZ7KBklktGLPAgn4Jpt+BzsZVvgSc7DEZyygXaw
fZaPchfsYJ/nfbDnLK+WnIOzsM/zLthXltetXIdrsM/zJthjlldTTsMp2OfZ
CPai1V+XF+B5uOl/WLkBX8OTdr5LeQIeh/dt+oVchkvwqN3HuTwCD8Nrlu+Z
vAqvwH3Wn8q9cA/ctvpP5Ae4BR9ZPcdyBT6EN+18FXkDXoe/bL+S/Am/wzs2
vyhvw1tw0VzA978uwP3WL5Ud2jcLU2ED
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["x", HoldForm], "\[Equal]", "0"}]],
       Annotation[#, HoldForm[$CellContext`x] == 0, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJyN0s9KAlEUx/FJqJ6gBwgmoXqSMSsIeoGgpZn1IjEJFoiEixYtWriYBI1C
ok2bCAli0rSysv/Qom3dc/EEXwjugbnDB+Zw7/nNHV/KLiwnPM9b/H3MmzUm
60Z94LIfhH5QPhp4D67Au+IKvv/zPvwRZeIoU1N/wd9wUfob6hK8Ax+b9vhU
3YBP4J7sd6Z+hPvwsKzn6hF4FC7I+S7UW/A2PGkYNtVT8DRck3ku1XX4EJ41
7f6Veg6eh29k/ljdgbtwzihqqdfgddjeyY6zU3K+rnoGTsN5yffW2dcyz526
BbfhpPyPe2evyPw9dRZehasS74OzbT2ph+AEbPPsO1sYPKs34Txs83xxtrSH
r+oJOAnbPN+cba/ru/oArsK2Pv/1D25lYQM=
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["y", HoldForm], "\[Equal]", "0"}]],
       Annotation[#, HoldForm[$CellContext`y] == 0, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxd0zssQ1EYB/DGSGPzGgweK2qlYcRaGqtKTIiVncZIJxKaMJXBICESCU1v
CEHr/X7Vo1dVETdW9P7L/4vv5DYnv/Tc853vf9qyzj5PV47D4fBmPvb8f7yv
Vvl9xX7fcOOf8+ExOlDZknmm6VJ8H6LHzYGgOTCn1s/T7V57LNAFeH+Jvljs
zTzL9BT2W6FrnIbLaYTV/hH60x2z3DGDbkW9NRrbX6zTJai/QfcH7YKb6jxb
dIO9vbVNT+J8UTo779K1OK/Yrlbs31Pn36ft1S7nAW2hHzGWBw5ptOc9oodQ
4Fj1K8Zxgyd0Efo/pZtxoDMay03xzKw9zunzbAE6Dw1c0vXIS9yDQK9Uftf0
Dhq+ob++7SFGfL5bGnEZt+r8cboDL8TV/YpHEegdjfZmxREUuFf9ij9wP+Jc
9P9AV+C+xFhuidtwf48qH/Eg7jNBTyAv8QLiF0eRn0knsheo8hQXIs8nuhp5
ipuQZ1LlmVR5ikeQ5zMdQp7iMPJM0WfIM6XyTKk8X+hy5CmuQ55iD/JM093I
M63yfFV5irM/ZzG2d7+p/4/4d6Z/ABZB5ao=
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], AbsoluteThickness[1.6], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 
          85}]},
        RowBox[{
          TagBox["y", HoldForm], "\[Equal]", 
          RowBox[{"-", "1"}]}]],
       Annotation[#, HoldForm[$CellContext`y] == -1, "Tooltip"]& ]}], {}}, 
   {GrayLevel[0], Arrowheads[0.03], ArrowBox[{{0.6, 1}, {0.5, 1}}], 
    ArrowBox[{{-1, 0}, {-0.5, 0}}], ArrowBox[{{0, 0}, {0, -0.5}}], 
    ArrowBox[{{1, 0}, {1, 0.5}}], ArrowBox[{{0.5, -1}, {0.55, -1}}], 
    {RGBColor[0, 0, 1], PointSize[0.02], PointBox[{-1, 0}]}, 
    {RGBColor[1, 0, 0], PointSize[0.02], PointBox[{-1, 1}]}}},
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{
     FormBox[
      RotationBox[
      "\"\\!\\(\\*FractionBox[\\(U\\), SubscriptBox[\\(E\\), \\(g\\)]]\\)\"", 
       BoxRotation -> -1.5707963267948966`], TraditionalForm], None}, {
     FormBox["\"\[Omega]\"", TraditionalForm], None}},
  FrameTicks->{{None, None}, {None, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{
    GrayLevel[0]},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "GridLinesInFront" -> 
    True},
  PlotRange->{{-2, 2}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.9648258276071777`*^9, {3.9648258852006435`*^9, 3.964825899872275*^9}, 
   3.964826273586085*^9, 3.9648263134723225`*^9, 3.9648264264529953`*^9, 
   3.9648264612304173`*^9, 3.964826545179468*^9, 3.964826588213317*^9, 
   3.9648266657448473`*^9, 3.964827002369981*^9, 3.964827140523809*^9, {
   3.9648272344957066`*^9, 3.964827252294895*^9}, 3.964837425219102*^9, 
   3.964856632950876*^9, 3.9649178160504665`*^9, 3.9650301609247437`*^9, 
   3.9650315871634836`*^9, 3.965090872825777*^9, 3.965096054261606*^9, 
   3.965097081694106*^9, 3.965114737057663*^9, 3.9651177916012087`*^9, 
   3.965124306779939*^9, 3.96518019687152*^9, 3.9652207072131248`*^9, 
   3.9652221537518096`*^9, 3.965247288526147*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"2f4e55d1-a651-4155-840e-653975e039b5"]
}, Open  ]],

Cell["\<\
The energy\[Dash]frequency diagram of oscillator-1, for either heating or \
cooling, is shown here for the case of heating.\
\>", "Text",
 CellChangeTimes->{{3.965014355677697*^9, 
  3.9650145194130883`*^9}},ExpressionUUID->"944c5dd1-837a-4567-998b-\
b1e62dc32a09"],

Cell["", "Text",ExpressionUUID->"9cf3d6dc-690d-41ae-93cd-03fdafaa6418"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 568.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
DockedCells->{},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
TaggingRules->Association["TryRealOnly" -> False],
SpellingDictionaries->{"CorrectWords"->{
 "\.b2cosech\.b2", "Undisplaced", "undisplaced", "Harinarayanan", "Karthik", 
  "Rajeev", "\[Rho]\[Beta]", "R\[Beta]", "\[Psi]ansatz", "Aplus", "Aminus", 
  "\[Mu]plus", "\[Mu]minus", "bplus", "bminus", "muin", "\[Mu]in", 
  "\[Omega]plus", "\[Omega]minus", "\[Omega]p", 
  "\[Mu]\[CloseCurlyQuote]\[CloseCurlyQuote]", "\[Theta]\[CloseCurlyQuote]", 
  "Ermakov", "\[Mu]out", "Aij", "\[Omega]ptilde", "ktilde", "\[Tau]tilde", 
  "bminusdot", "bplusdot", "Cosech", "\[Beta]\[Omega]", "\[Mu]dot", 
  "\[Omega]\[CloseCurlyQuote]", "im", "\[Omega]tilde", "Yi", "Zi", "Xf", "Yf",
   "Zf", "\[Psi]\[CloseCurlyQuote]\[CloseCurlyQuote]", "dx", 
  "\[Psi]\[CloseCurlyQuote]", "x\[CloseCurlyQuote]", "thermalize"}},
Magnification:>0.8 Inherited,
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (June 19, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8c8dc5e4-ec2c-4b63-ac45-c575602113a5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 295, 4, 78, "Title",ExpressionUUID->"82f57167-0e3a-4dc2-b6d5-6e24b8130611"],
Cell[878, 28, 313, 4, 42, "Subtitle",ExpressionUUID->"140710f7-7ef7-4249-914a-0643282904d1"],
Cell[1194, 34, 270, 3, 42, "Subtitle",ExpressionUUID->"509bbdd6-dcf4-412a-ac79-a65b3ac899f6"],
Cell[1467, 39, 1309, 21, 83, "Text",ExpressionUUID->"6227f0f8-6b08-42d5-90c1-7fa3d453e844"],
Cell[CellGroupData[{
Cell[2801, 64, 301, 5, 54, "Section",ExpressionUUID->"4170e7eb-5e70-438e-b4cd-1ce57dd55b28"],
Cell[3105, 71, 220, 3, 22, "Input",ExpressionUUID->"edde0be2-fa23-4724-b6c2-7112d7926f3a"],
Cell[CellGroupData[{
Cell[3350, 78, 250, 4, 43, "Subsection",ExpressionUUID->"f6a7a1ed-6b88-4cdc-8220-131646b0ac5e"],
Cell[3603, 84, 327, 7, 28, "Text",ExpressionUUID->"433a486e-c28e-4de3-bbc5-5ddd48ce973b"],
Cell[CellGroupData[{
Cell[3955, 95, 619, 18, 37, "Input",ExpressionUUID->"b4c5c844-82d5-4848-b9cc-14a0a2901d50"],
Cell[4577, 115, 885, 22, 32, "Output",ExpressionUUID->"16a718be-3b20-434a-9a1a-abcd042258a3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5499, 142, 731, 20, 37, "Input",ExpressionUUID->"5973f5c5-c036-48c2-b7ac-b5e2f14b926f"],
Cell[6233, 164, 907, 22, 32, "Output",ExpressionUUID->"6650dd03-add3-4aaa-801a-004654e51b10"]
}, Open  ]],
Cell[7155, 189, 379, 11, 28, "Text",ExpressionUUID->"b5f25366-f88a-4da0-8549-89ff0cd2d8e9"],
Cell[CellGroupData[{
Cell[7559, 204, 578, 15, 22, "Input",ExpressionUUID->"debe52bd-8dd7-43aa-82aa-a90c48cf5ea4"],
Cell[8140, 221, 1445, 38, 65, "Output",ExpressionUUID->"479b97c3-09e1-4fa4-9311-387ae55814b4"]
}, Open  ]],
Cell[9600, 262, 159, 3, 28, "Text",ExpressionUUID->"6cf7478d-105c-4d4e-9b13-8e141339d5a2"],
Cell[CellGroupData[{
Cell[9784, 269, 936, 27, 72, "Input",ExpressionUUID->"10ce8770-dc7b-4d7b-8a3c-6bddbf6e7fe1"],
Cell[10723, 298, 1409, 29, 53, "Output",ExpressionUUID->"ab1239a2-b91e-4c5f-8a11-eb5303769b9f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12181, 333, 230, 4, 43, "Subsection",ExpressionUUID->"e49a8961-c5c9-4dc4-9e4c-67be36e29c23"],
Cell[12414, 339, 228, 5, 28, "Text",ExpressionUUID->"3bd03f50-6454-48d4-85df-e25690d520c3"],
Cell[CellGroupData[{
Cell[12667, 348, 567, 15, 23, "Input",ExpressionUUID->"46f1b5f8-5cd7-4e01-ad83-e4ea2ed52933"],
Cell[13237, 365, 2483, 58, 72, "Output",ExpressionUUID->"38494a94-1431-4368-8a4f-a8851a3f7545"]
}, Open  ]],
Cell[15735, 426, 228, 5, 28, "Text",ExpressionUUID->"ac882693-a302-4754-8ad0-39501d2cc635"],
Cell[CellGroupData[{
Cell[15988, 435, 1306, 38, 39, "Input",ExpressionUUID->"f1a50c2a-3e6a-4fa1-b321-7ef797073071"],
Cell[17297, 475, 1881, 45, 46, "Output",ExpressionUUID->"5a27b0cb-61ef-4de0-a7e1-72f16ac8a68b"]
}, Open  ]],
Cell[19193, 523, 260, 4, 28, "Text",ExpressionUUID->"7032173b-1a1d-41c8-9c6d-81d0728840b9"],
Cell[CellGroupData[{
Cell[19478, 531, 524, 16, 43, "Input",ExpressionUUID->"d65215ae-78fb-4839-82f8-0ddcbdb9f514"],
Cell[20005, 549, 1187, 24, 44, "Output",ExpressionUUID->"07d131fc-9b8a-4ef9-b495-b40dd7113c5d"]
}, Open  ]],
Cell[21207, 576, 145, 3, 28, "Text",ExpressionUUID->"37aa8a11-ac4f-41ad-9284-e5b78b75c30f"],
Cell[CellGroupData[{
Cell[21377, 583, 850, 25, 39, "Input",ExpressionUUID->"44d0a817-ae73-453f-9c24-f7ff76dc844a"],
Cell[22230, 610, 1045, 21, 41, "Output",ExpressionUUID->"077fedef-d193-4947-88f8-1b50439725a0"]
}, Open  ]],
Cell[23290, 634, 173, 2, 22, "Input",ExpressionUUID->"9d69581e-53ac-4af5-b56e-3d010b65a9ce"],
Cell[23466, 638, 152, 3, 28, "Text",ExpressionUUID->"18420192-14d2-423e-a961-b073c16110a2"],
Cell[CellGroupData[{
Cell[23643, 645, 631, 17, 43, "Input",ExpressionUUID->"586c7c76-7ed6-49e9-97fe-2506cd1e30b7"],
Cell[24277, 664, 1126, 19, 43, "Output",ExpressionUUID->"5bce4c98-6515-4a81-bf5e-9ca201ea1f2f"]
}, Open  ]],
Cell[25418, 686, 184, 3, 28, "Text",ExpressionUUID->"cb0c8c68-d80d-47f1-ad34-1fec1903a57c"],
Cell[CellGroupData[{
Cell[25627, 693, 947, 26, 35, "Input",ExpressionUUID->"983ffffb-6170-43a1-afaa-53a90aa60a17"],
Cell[26577, 721, 1608, 33, 32, "Output",ExpressionUUID->"6f7c60d4-8422-45a7-9edf-126d28257cc1"]
}, Open  ]],
Cell[28200, 757, 178, 3, 28, "Text",ExpressionUUID->"9578ee6b-ea81-4aed-ab83-dd88a8b79a7f"],
Cell[CellGroupData[{
Cell[28403, 764, 387, 9, 22, "Input",ExpressionUUID->"86ecfc6e-9a2f-40f8-9791-c49435e581a9"],
Cell[28793, 775, 1296, 27, 55, "Output",ExpressionUUID->"f0db49b4-0d7f-4a48-9671-194ba42c29a1"]
}, Open  ]],
Cell[30104, 805, 165, 3, 28, "Text",ExpressionUUID->"26be6d8d-75f9-4c56-b524-fa66429f495c"],
Cell[CellGroupData[{
Cell[30294, 812, 421, 12, 47, "Input",ExpressionUUID->"0ab298a5-991d-446a-a427-fbd1cd4467e1"],
Cell[30718, 826, 1015, 18, 47, "Output",ExpressionUUID->"8e58a2e4-8156-4a98-8233-a2daa604aedd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31782, 850, 223, 4, 43, "Subsection",ExpressionUUID->"04655105-ee86-4417-952a-dde245370d6f"],
Cell[32008, 856, 385, 11, 28, "Text",ExpressionUUID->"d32e0702-f8f9-4f8d-a914-5ddb39924ed2"],
Cell[CellGroupData[{
Cell[32418, 871, 527, 13, 26, "Input",ExpressionUUID->"21035227-3cce-4627-99a1-0d249e51be60"],
Cell[32948, 886, 1271, 25, 50, "Output",ExpressionUUID->"62e42100-d29e-49db-8e00-c886cc89cd0d"]
}, Open  ]],
Cell[34234, 914, 805, 19, 28, "Text",ExpressionUUID->"ed80a0cd-d13d-4149-9c09-f2e8f349f6c6"],
Cell[CellGroupData[{
Cell[35064, 937, 592, 16, 22, "Input",ExpressionUUID->"8b930b91-9bd3-45ce-ba21-b0ba506d64c6"],
Cell[35659, 955, 1625, 36, 50, "Output",ExpressionUUID->"026d9b12-83ce-4d3f-bbd9-d03d5d76dd0c"]
}, Open  ]],
Cell[37299, 994, 182, 3, 28, "Text",ExpressionUUID->"9119c7f6-c947-4ed7-ab2d-a7c83a955dd7"],
Cell[CellGroupData[{
Cell[37506, 1001, 1246, 33, 49, "Input",ExpressionUUID->"e183dd1d-7931-4a00-8a75-1ed042102dad"],
Cell[38755, 1036, 1374, 30, 54, "Output",ExpressionUUID->"6c0013d6-07ec-4866-9cd0-0cd7cff3dbc6"]
}, Open  ]],
Cell[40144, 1069, 709, 21, 28, "Text",ExpressionUUID->"b950ba44-1725-49be-8883-bff3d1afffe6"],
Cell[CellGroupData[{
Cell[40878, 1094, 667, 15, 22, "Input",ExpressionUUID->"cb2ffcc1-047d-46ca-88b9-3ac13e95cd85"],
Cell[41548, 1111, 1419, 31, 49, "Output",ExpressionUUID->"adde61e6-2779-4196-bee7-12ee5b411eca"]
}, Open  ]],
Cell[42982, 1145, 158, 3, 28, "Text",ExpressionUUID->"6665d3eb-595c-463b-95a7-234548a913da"],
Cell[CellGroupData[{
Cell[43165, 1152, 1321, 35, 49, "Input",ExpressionUUID->"16c24799-0ac8-4f36-a521-a72449cd8ce6"],
Cell[44489, 1189, 1264, 26, 48, "Output",ExpressionUUID->"063b0a03-5e3b-44c8-ace3-4c2c26ba39eb"]
}, Open  ]],
Cell[45768, 1218, 599, 16, 28, "Text",ExpressionUUID->"2b2ff55e-a2fc-4964-9319-d92154e73a6a"],
Cell[CellGroupData[{
Cell[46392, 1238, 519, 13, 22, "Input",ExpressionUUID->"d60ca49d-6053-4407-8d9a-ba6abfb085f0"],
Cell[46914, 1253, 1460, 33, 50, "Output",ExpressionUUID->"8372700e-5149-43da-a355-36962d07d65a"]
}, Open  ]],
Cell[48389, 1289, 184, 3, 28, "Text",ExpressionUUID->"a60395e1-42ba-4853-b157-aacaed045745"],
Cell[CellGroupData[{
Cell[48598, 1296, 1438, 37, 51, "Input",ExpressionUUID->"d678039f-c961-4f2a-8f38-3661d157b589"],
Cell[50039, 1335, 1367, 28, 48, "Output",ExpressionUUID->"29f3dbed-6bf4-44a5-bf66-abc675643b7d"]
}, Open  ]],
Cell[51421, 1366, 241, 4, 28, "Text",ExpressionUUID->"ed9a1f53-f6b0-41d0-b448-500f5711413a"],
Cell[CellGroupData[{
Cell[51687, 1374, 627, 13, 22, "Input",ExpressionUUID->"bf7a339e-b43c-4974-8368-0196042fe6de"],
Cell[52317, 1389, 2987, 77, 54, "Output",ExpressionUUID->"b73afd35-e591-4b57-bebb-7e24d0f2aa3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55341, 1471, 226, 3, 22, "Input",ExpressionUUID->"012a4f4f-25ce-4482-8e9b-756bc24ee425"],
Cell[55570, 1476, 3295, 87, 89, "Output",ExpressionUUID->"2f9c9062-96ed-4d31-93f7-4fe00fb52d86"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58914, 1569, 221, 4, 43, "Subsection",ExpressionUUID->"9e2d7314-0c85-4c56-afe7-606b1eeaa441"],
Cell[59138, 1575, 520, 12, 46, "Text",ExpressionUUID->"32f75b47-4cd6-4a10-ad15-fa6d02200686"],
Cell[59661, 1589, 317, 7, 28, "Text",ExpressionUUID->"6a3e5e42-a6ee-4047-b626-feb0b0007b44"],
Cell[CellGroupData[{
Cell[60003, 1600, 968, 26, 36, "Input",ExpressionUUID->"b4ac694b-c2fe-4ce0-a7b9-7466996b5fe4"],
Cell[60974, 1628, 1311, 27, 32, "Output",ExpressionUUID->"59571405-68a5-4a1d-a199-3edad87ac561"]
}, Open  ]],
Cell[62300, 1658, 1474, 32, 47, "Text",ExpressionUUID->"6c9cbbd3-a0bf-49ff-8277-6dc8cdc4fa0a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63811, 1695, 284, 8, 43, "Subsection",ExpressionUUID->"5213b996-70d3-430b-b67a-f2f91046af7d"],
Cell[64098, 1705, 373, 8, 28, "Text",ExpressionUUID->"7a757f1a-1002-4f20-9e16-fcd58b8a666b"],
Cell[CellGroupData[{
Cell[64496, 1717, 235, 4, 22, "Input",ExpressionUUID->"ca49c222-d9fd-46b4-91fa-e97b68743156"],
Cell[64734, 1723, 650, 9, 25, "Output",ExpressionUUID->"d03d21cb-ebe6-4246-8232-94908694b9b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65421, 1737, 3617, 83, 69, "Input",ExpressionUUID->"ae2d33e6-6aff-488b-a1e2-d72fda4a5c5f"],
Cell[69041, 1822, 56331, 938, 359, 4140, 84, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"c1f966c3-bf5d-4b18-a1ac-ad52940fd53b"]
}, Open  ]],
Cell[125387, 2763, 843, 19, 47, "Text",ExpressionUUID->"9149ce2f-6ed8-4c30-8bd5-bf6afea7fa21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126279, 2788, 403, 6, 54, "Section",ExpressionUUID->"69264d78-aaf2-429c-9ee3-a083396d7b6c"],
Cell[CellGroupData[{
Cell[126707, 2798, 235, 4, 43, "Subsection",ExpressionUUID->"659fb3f6-1105-4f96-9ac4-8a2fec985bf8"],
Cell[126945, 2804, 325, 7, 28, "Text",ExpressionUUID->"3543bb63-ab0c-4b17-97c8-d60d246f410d"],
Cell[CellGroupData[{
Cell[127295, 2815, 1060, 28, 56, "Input",ExpressionUUID->"8cf2ef46-c234-4a13-a8dd-3f2174e055ca"],
Cell[128358, 2845, 850, 24, 42, "Output",ExpressionUUID->"9472bd72-6dda-4ca3-aaad-5c33c0e69723"]
}, Open  ]],
Cell[129223, 2872, 589, 11, 28, "Text",ExpressionUUID->"f89cc268-4ad7-4551-8bf2-f30fdfcaf8a0"],
Cell[CellGroupData[{
Cell[129837, 2887, 524, 13, 23, "Input",ExpressionUUID->"26d9c6f4-4550-464f-9074-7f2aff4593c8"],
Cell[130364, 2902, 1647, 43, 41, "Output",ExpressionUUID->"932bc424-68d5-4774-82e5-7a410172b0d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132048, 2950, 582, 16, 23, "Input",ExpressionUUID->"dd865067-49b8-4d00-860d-5eb50590bf42"],
Cell[132633, 2968, 1742, 47, 54, "Output",ExpressionUUID->"58b4b217-dbe1-49b6-ab8a-2a18e96f763a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[134424, 3021, 300, 5, 43, "Subsection",ExpressionUUID->"8356d425-d8b3-49fa-9908-52e0f68dd4f5"],
Cell[134727, 3028, 307, 7, 28, "Text",ExpressionUUID->"5486a28d-86eb-4e64-9823-1f9813944b7d"],
Cell[CellGroupData[{
Cell[135059, 3039, 647, 13, 22, "Input",ExpressionUUID->"b44ac7d6-b352-4e81-9bb2-897e0d656b19"],
Cell[135709, 3054, 757, 12, 25, "Output",ExpressionUUID->"bd6f5012-316e-4f1b-8ee9-9c71a0c21958"]
}, Open  ]],
Cell[136481, 3069, 183, 3, 28, "Text",ExpressionUUID->"f3469a3c-6be1-45c1-878a-d4eadf4c68db"],
Cell[CellGroupData[{
Cell[136689, 3076, 555, 14, 37, "Input",ExpressionUUID->"2f0d328e-ef02-45ba-9b3b-7e56bf3d8a8e"],
Cell[137247, 3092, 773, 15, 40, "Output",ExpressionUUID->"dc978afb-d0de-4e3d-9b31-f77ff897e98a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138057, 3112, 557, 17, 37, "Input",ExpressionUUID->"bd3d5a07-afd8-47db-9e27-5dc20c91ebb2"],
Cell[138617, 3131, 870, 18, 29, "Output",ExpressionUUID->"438904ec-68dd-4d83-a9be-477d4922e6c1"]
}, Open  ]],
Cell[139502, 3152, 216, 5, 28, "Text",ExpressionUUID->"3835973b-7ce2-4234-a9b5-3a35ee1fb139"],
Cell[CellGroupData[{
Cell[139743, 3161, 998, 25, 22, "Input",ExpressionUUID->"b84f1f54-b614-435a-a798-c073ed0121de"],
Cell[140744, 3188, 70805, 1197, 301, "Output",ExpressionUUID->"06cc30a3-7e91-496c-b688-e9e0329f71ed"]
}, Open  ]],
Cell[211564, 4388, 537, 13, 29, "Text",ExpressionUUID->"49922bc2-4dd7-4511-b2ba-7c7f3e060276"],
Cell[CellGroupData[{
Cell[212126, 4405, 899, 23, 22, "Input",ExpressionUUID->"f900f1c1-1346-4f94-851b-5a9fb3ed4ab4"],
Cell[213028, 4430, 61268, 1038, 301, "Output",ExpressionUUID->"7346f28c-a979-4504-97b0-a789cd35d211"]
}, Open  ]],
Cell[274311, 5471, 685, 15, 29, "Text",ExpressionUUID->"54aafa90-8884-43e4-bf18-1c991698b922"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275033, 5491, 278, 5, 43, "Subsection",ExpressionUUID->"cdfef44f-7851-4473-b11b-949dd2463012"],
Cell[275314, 5498, 2308, 72, 79, "Text",ExpressionUUID->"ffe700a0-45d7-40f7-a2fb-03d5ba659dbb"],
Cell[CellGroupData[{
Cell[277647, 5574, 374, 9, 22, "Input",ExpressionUUID->"e8e1d0ef-55f6-4aec-9ad2-a6e306f0a4c8"],
Cell[278024, 5585, 920, 15, 26, "Output",ExpressionUUID->"c7b3ada7-e4a6-424d-b419-367897303bdc"]
}, Open  ]],
Cell[278959, 5603, 202, 3, 28, "Text",ExpressionUUID->"61870200-cbc5-4316-a38b-2ac0eed7cdf1"],
Cell[CellGroupData[{
Cell[279186, 5610, 553, 15, 23, "Input",ExpressionUUID->"4129a03b-683c-46a7-aed4-a35121bbff68"],
Cell[279742, 5627, 1801, 41, 29, "Output",ExpressionUUID->"4d29a1e4-62c8-41f4-8493-b32f344933ce"]
}, Open  ]],
Cell[281558, 5671, 597, 13, 28, "Text",ExpressionUUID->"e5351093-40e5-4151-8fc8-af7a87ad8adb"],
Cell[CellGroupData[{
Cell[282180, 5688, 657, 18, 26, "Input",ExpressionUUID->"78b1e6e2-258b-4fe5-a954-22c4645ba352"],
Cell[282840, 5708, 1116, 24, 26, "Output",ExpressionUUID->"60bde2f7-697a-4fe8-a22b-3acff84c8914"]
}, Open  ]],
Cell[283971, 5735, 165, 3, 28, "Text",ExpressionUUID->"683b8252-d4d9-43e6-ad20-ff0b5ba3a7c1"],
Cell[CellGroupData[{
Cell[284161, 5742, 664, 18, 22, "Input",ExpressionUUID->"0a837b8a-bb27-4138-ae2d-d284cb90d1fc"],
Cell[284828, 5762, 1152, 25, 25, "Output",ExpressionUUID->"c72b106c-04df-45ca-a169-8e651ad3de79"]
}, Open  ]],
Cell[285995, 5790, 2290, 62, 55, "Text",ExpressionUUID->"9f8a9680-7168-4ef6-aef1-71e0511ce98b"],
Cell[CellGroupData[{
Cell[288310, 5856, 545, 14, 22, "Input",ExpressionUUID->"10f72b10-40b9-44db-a987-423bd55119ba"],
Cell[288858, 5872, 863, 14, 25, "Output",ExpressionUUID->"ea0d517e-e054-49ec-a279-5c9fa41bb435"]
}, Open  ]],
Cell[289736, 5889, 970, 32, 35, "Text",ExpressionUUID->"326fa5d5-eb29-4aaa-b979-d0b7729e5fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290743, 5926, 240, 4, 43, "Subsection",ExpressionUUID->"e09c41e2-c73e-4427-98ec-404f52ec248f"],
Cell[290986, 5932, 803, 19, 28, "Text",ExpressionUUID->"735691c8-1edf-44e4-9ce2-9b1975ccef04"],
Cell[CellGroupData[{
Cell[291814, 5955, 1102, 24, 22, "Input",ExpressionUUID->"7948c19d-bbe4-4372-af14-7e92079f3baa"],
Cell[292919, 5981, 1106, 23, 29, "Output",ExpressionUUID->"22c4a68a-5336-48ec-83e9-b1c492faa782"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294062, 6009, 595, 13, 22, "Input",ExpressionUUID->"98727a48-601a-4a65-994f-b83c25e400fe"],
Cell[294660, 6024, 1260, 26, 29, "Output",ExpressionUUID->"39ae52a8-6154-4853-9bb8-78d8d4813afb"]
}, Open  ]],
Cell[295935, 6053, 210, 6, 28, "Text",ExpressionUUID->"be7a4485-9fcb-44be-a888-68f83dbdb2d4"],
Cell[CellGroupData[{
Cell[296170, 6063, 573, 14, 22, "Input",ExpressionUUID->"ba6400bf-5e2f-4242-b145-2a2724d04fde"],
Cell[296746, 6079, 1035, 21, 43, "Output",ExpressionUUID->"e0af84d2-a17b-4def-bb9f-2a7f7ce9fde5"]
}, Open  ]],
Cell[297796, 6103, 1056, 31, 30, "Text",ExpressionUUID->"02daddc1-4c6f-4b72-8712-991f218ff533"],
Cell[CellGroupData[{
Cell[298877, 6138, 1130, 29, 41, "Input",ExpressionUUID->"14fa5c82-280a-484d-9591-cfdd59baaa37"],
Cell[300010, 6169, 883, 18, 43, "Output",ExpressionUUID->"a752bc8a-f520-4299-9dfa-9b74e410d345"]
}, Open  ]],
Cell[300908, 6190, 1200, 37, 40, "Text",ExpressionUUID->"c915f0ab-1aa5-4751-a82b-61b71ea6bbe8"],
Cell[CellGroupData[{
Cell[302133, 6231, 253, 7, 47, "Input",ExpressionUUID->"8be439a7-6229-4f8a-8636-b66e20e129ae"],
Cell[302389, 6240, 871, 15, 48, "Output",ExpressionUUID->"d18c46c9-e65a-4ee5-931a-1615a73951f2"]
}, Open  ]],
Cell[303275, 6258, 854, 25, 35, "Text",ExpressionUUID->"a709eb9e-5ac6-412c-bc21-657deb3cdced"],
Cell[CellGroupData[{
Cell[304154, 6287, 1181, 35, 48, "Input",ExpressionUUID->"7926125d-34f5-46c8-b3f3-b53d62cdc46e"],
Cell[305338, 6324, 1881, 50, 62, "Output",ExpressionUUID->"5987475b-5762-4cf6-abae-2baac9483e08"]
}, Open  ]],
Cell[307234, 6377, 213, 5, 28, "Text",ExpressionUUID->"df6bc578-9b3c-4c79-af3e-e5da75f4c6e1"],
Cell[CellGroupData[{
Cell[307472, 6386, 471, 13, 22, "Input",ExpressionUUID->"16a65e58-c411-4643-8fd5-1442ff92ff08"],
Cell[307946, 6401, 2866, 79, 84, "Output",ExpressionUUID->"ee34cc58-73fd-4539-a08d-dfbabb2ac00c"]
}, Open  ]],
Cell[310827, 6483, 408, 7, 28, "Text",ExpressionUUID->"ae18176d-ae13-4c2b-8c87-83977bdf2ea3"],
Cell[CellGroupData[{
Cell[311260, 6494, 884, 26, 43, "Input",ExpressionUUID->"26f5ebb3-13df-4bfa-a31a-e2372ab4d7ca"],
Cell[312147, 6522, 1268, 31, 40, "Output",ExpressionUUID->"4b03b864-5ef8-449c-865f-0dbd57128cd4"]
}, Open  ]],
Cell[313430, 6556, 644, 13, 28, "Text",ExpressionUUID->"b56d5c02-cc86-4ca1-aa9f-7b03ae0f898a"],
Cell[CellGroupData[{
Cell[314099, 6573, 573, 15, 38, "Input",ExpressionUUID->"5b938cfb-d4b8-412a-bcaa-26ee1fcb21d1"],
Cell[314675, 6590, 900, 18, 40, "Output",ExpressionUUID->"4617f2ce-e7f7-41e2-8a34-dda6394b315a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315612, 6613, 498, 12, 26, "Input",ExpressionUUID->"2ca11587-674c-47f2-805e-dc530a13a157"],
Cell[316113, 6627, 1233, 30, 40, "Output",ExpressionUUID->"03040f84-8f47-42cc-aa18-acf030cbd784"]
}, Open  ]],
Cell[317361, 6660, 204, 3, 28, "Text",ExpressionUUID->"bf6f4864-aa64-46ec-93b3-1eac5f04223b"],
Cell[CellGroupData[{
Cell[317590, 6667, 1090, 31, 38, "Input",ExpressionUUID->"50f23f8f-3e1c-4fd9-9531-67c93c6ff005"],
Cell[318683, 6700, 840, 16, 25, "Output",ExpressionUUID->"677ac72f-defb-4060-b685-f7e076901ae1"]
}, Open  ]],
Cell[319538, 6719, 1177, 36, 37, "Text",ExpressionUUID->"7ae4dca1-0650-4fc8-829d-97b8acd471cf"],
Cell[320718, 6757, 306, 6, 22, "Input",ExpressionUUID->"1b09ba90-a0e6-45e1-9f5b-bedfea1f7f2e"],
Cell[CellGroupData[{
Cell[321049, 6767, 776, 19, 22, "Input",ExpressionUUID->"4b2ceef3-9e67-4844-af2c-aee62ba7fe23"],
Cell[321828, 6788, 1074, 21, 29, "Output",ExpressionUUID->"2fdae35b-80aa-491c-bd9b-186256d934c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322939, 6814, 444, 11, 22, "Input",ExpressionUUID->"864e36d3-a4dc-4feb-9f52-58b173edad85"],
Cell[323386, 6827, 1862, 43, 29, "Output",ExpressionUUID->"a0ba1053-0657-4819-b2a4-e2548a482ba7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325285, 6875, 526, 15, 40, "Input",ExpressionUUID->"81d57ccb-8519-43c3-84a3-2b86348cebdf"],
Cell[325814, 6892, 1381, 33, 43, "Output",ExpressionUUID->"faf89293-1c06-40dd-8d93-6839adfa28a8"]
}, Open  ]],
Cell[327210, 6928, 271, 5, 28, "Text",ExpressionUUID->"50927533-3ec5-475d-98b2-44c75c3c5ad3"],
Cell[CellGroupData[{
Cell[327506, 6937, 1124, 31, 40, "Input",ExpressionUUID->"297e8322-a564-4d83-8cc7-1b6aea5e16cc"],
Cell[328633, 6970, 1836, 44, 44, "Output",ExpressionUUID->"05dfb622-5ed9-46f0-98d5-31f67481f6ae"]
}, Open  ]],
Cell[330484, 7017, 175, 3, 28, "Text",ExpressionUUID->"b17b7a1c-113e-4380-afd5-81e6b4696a1d"],
Cell[CellGroupData[{
Cell[330684, 7024, 1674, 52, 41, "Input",ExpressionUUID->"08ba9d29-b845-4d37-a283-d88473113c03"],
Cell[332361, 7078, 8304, 237, 257, "Output",ExpressionUUID->"edf9a1c0-5dc6-4bde-9e88-9482b25fe375"]
}, Open  ]],
Cell[340680, 7318, 178, 3, 28, "Text",ExpressionUUID->"8a95a739-67de-472e-b4c1-34217d883d9c"],
Cell[CellGroupData[{
Cell[340883, 7325, 1561, 49, 41, "Input",ExpressionUUID->"ed0f306b-c343-472f-98a1-bfee68763805"],
Cell[342447, 7376, 8262, 235, 257, "Output",ExpressionUUID->"35fac682-074f-4596-95d7-d838063df2a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[350758, 7617, 372, 6, 43, "Subsection",ExpressionUUID->"a4214920-3244-4310-b7bc-2bd9e669dfef"],
Cell[351133, 7625, 375, 7, 28, "Text",ExpressionUUID->"e995efca-bbe5-4d98-b3d1-28aa96b4e519"],
Cell[351511, 7634, 151, 3, 28, "Text",ExpressionUUID->"22cb9053-1724-4cb2-88cf-583fdc780640"],
Cell[CellGroupData[{
Cell[351687, 7641, 3621, 105, 109, "Input",ExpressionUUID->"8625a163-0076-4d08-aaf9-9a627de8857d"],
Cell[355311, 7748, 3994, 117, 87, "Output",ExpressionUUID->"821a0bca-949b-4551-b7ea-34b8570f4ddc"]
}, Open  ]],
Cell[359320, 7868, 505, 11, 29, "Text",ExpressionUUID->"844cdf49-0fda-4af6-8c21-222bf40a2067"],
Cell[CellGroupData[{
Cell[359850, 7883, 993, 30, 41, "Input",ExpressionUUID->"b3291e36-0066-4e2d-abce-104fd2ede1f9"],
Cell[360846, 7915, 1603, 44, 59, "Output",ExpressionUUID->"fb4300d1-4977-41db-84ff-b9f317d7f2ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362486, 7964, 1282, 40, 41, "Input",ExpressionUUID->"ada9dae5-0791-4d2a-818e-e0ff6efe0ca3"],
Cell[363771, 8006, 2344, 74, 59, "Output",ExpressionUUID->"82389da9-ea2f-4164-9fb2-7d4c25d2866e"]
}, Open  ]],
Cell[366130, 8083, 420, 12, 28, "Text",ExpressionUUID->"4c7d058d-5bd3-4edc-bc8e-7494f78cb54f"],
Cell[CellGroupData[{
Cell[366575, 8099, 1252, 34, 44, "Input",ExpressionUUID->"25050b8c-541e-4441-af94-7b1b72fdd123"],
Cell[367830, 8135, 2428, 67, 54, "Output",ExpressionUUID->"825eb23d-4f7e-4faa-9408-af341f01f24a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370295, 8207, 1006, 27, 41, "Input",ExpressionUUID->"3b5a0614-9d06-4f42-9bb8-c96cfc7b6374"],
Cell[371304, 8236, 2457, 68, 51, "Output",ExpressionUUID->"60d936de-7d3a-400a-80ee-0eab16e1adc2"]
}, Open  ]],
Cell[373776, 8307, 466, 11, 29, "Text",ExpressionUUID->"5c91eb46-eab3-476e-8ea4-557c195e51ee"],
Cell[CellGroupData[{
Cell[374267, 8322, 853, 24, 37, "Input",ExpressionUUID->"d21e641c-3bed-4a99-b487-905cfa8a65b2"],
Cell[375123, 8348, 4061, 120, 95, "Output",ExpressionUUID->"3a0fe69e-ea77-44ac-93dc-9f9bef7ec5ec"]
}, Open  ]],
Cell[379199, 8471, 254, 4, 28, "Text",ExpressionUUID->"6a60ea14-4ead-4acd-a8ee-1d6244089f18"],
Cell[CellGroupData[{
Cell[379478, 8479, 197, 3, 22, "Input",ExpressionUUID->"a003e521-3589-45c1-a86c-d12bd41de054"],
Cell[379678, 8484, 639, 9, 25, "Output",ExpressionUUID->"8308a3a9-9911-40d1-844c-d7ef0ec21f1b"]
}, Open  ]],
Cell[380332, 8496, 423, 8, 28, "Text",ExpressionUUID->"1e4c442c-f84c-4876-ba02-8a987904af60"],
Cell[CellGroupData[{
Cell[380780, 8508, 403, 10, 22, "Input",ExpressionUUID->"379318d8-e84d-438c-a690-c7ab38986005"],
Cell[381186, 8520, 726, 11, 25, "Output",ExpressionUUID->"36d26ea7-7f85-4b68-8543-a79f4307eee1"]
}, Open  ]],
Cell[381927, 8534, 224, 5, 28, "Text",ExpressionUUID->"44b739d0-b6ee-48d2-9408-f15014ef7f23"],
Cell[CellGroupData[{
Cell[382176, 8543, 403, 10, 22, "Input",ExpressionUUID->"f496b906-671a-4c10-9efe-338d70ef2336"],
Cell[382582, 8555, 2859, 84, 95, "Output",ExpressionUUID->"9c56b56c-4565-47e2-9a80-a0b9b6d62a34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[385478, 8644, 2153, 52, 54, "Input",ExpressionUUID->"e9c965a2-2de8-4962-9ca0-1b8c0316a60c"],
Cell[387634, 8698, 165513, 2733, 317, 69601, 1160, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"cadc6e25-0646-48ae-ab97-fe1a7cdc531b"]
}, Open  ]],
Cell[553162, 11434, 676, 15, 46, "Text",ExpressionUUID->"327d642c-6db5-4e28-90a7-e9fce160e583"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553887, 11455, 342, 5, 54, "Section",ExpressionUUID->"c6853a78-e4af-4da2-9d1c-94da3bd4bfb2"],
Cell[CellGroupData[{
Cell[554254, 11464, 295, 5, 43, "Subsection",ExpressionUUID->"41d99864-b7a6-4bfb-8092-3632255c2655"],
Cell[554552, 11471, 1018, 26, 59, "Text",ExpressionUUID->"0f848190-9e84-4a4e-a45d-352bc7520c4b"],
Cell[CellGroupData[{
Cell[555595, 11501, 4131, 116, 95, "Input",ExpressionUUID->"939b43f3-a1ef-4ec8-a303-fe64e14ada58"],
Cell[559729, 11619, 6081, 120, 296, "Output",ExpressionUUID->"a63f76ac-66e7-40b7-ae74-5026b2fd2471"]
}, Open  ]],
Cell[565825, 11742, 237, 6, 28, "Text",ExpressionUUID->"d704330b-2465-4689-9df3-e7b3f813d762"]
}, Open  ]],
Cell[CellGroupData[{
Cell[566099, 11753, 241, 4, 43, "Subsection",ExpressionUUID->"a2bb324a-1ce2-4084-b4a7-b06803974bf2"],
Cell[566343, 11759, 298, 6, 22, "Input",ExpressionUUID->"b23d279a-1d98-42f8-9fdd-521cb8f66f32"],
Cell[566644, 11767, 314, 7, 28, "Text",ExpressionUUID->"5bf7cd08-a920-4b4f-8437-97d5f73fb551"],
Cell[CellGroupData[{
Cell[566983, 11778, 670, 15, 39, "Input",ExpressionUUID->"cc5d5283-bbbc-481a-9643-1e470cc2e82f"],
Cell[567656, 11795, 894, 17, 42, "Output",ExpressionUUID->"f11b39c1-7bae-42d6-9645-e61723552a20"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[568599, 11818, 242, 4, 43, "Subsection",ExpressionUUID->"d8a198b4-da5c-4a5f-9f21-84df427f212a"],
Cell[568844, 11824, 1008, 16, 46, "Text",ExpressionUUID->"5bfc6611-2ef2-4598-bcda-8a802b8341bc"],
Cell[569855, 11842, 543, 9, 22, "Input",ExpressionUUID->"1b2a9b1f-28a2-4759-aad0-d3fddd5d3337"],
Cell[CellGroupData[{
Cell[570423, 11855, 657, 17, 44, "Input",ExpressionUUID->"01790832-d0e6-419a-93e2-ef654c541462"],
Cell[571083, 11874, 1072, 23, 46, "Output",ExpressionUUID->"688c2f0b-9514-47dc-9891-25a64605bcaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572192, 11902, 520, 14, 43, "Input",ExpressionUUID->"2d8f936a-e1ff-4854-99af-22810c57d088"],
Cell[572715, 11918, 1039, 21, 45, "Output",ExpressionUUID->"1ecf899b-6423-4678-9e39-bded8777140d"]
}, Open  ]],
Cell[573769, 11942, 394, 12, 29, "Text",ExpressionUUID->"263f3115-aaec-48ee-b05a-f06f18a3bd20"],
Cell[CellGroupData[{
Cell[574188, 11958, 1806, 57, 80, "Input",ExpressionUUID->"4bc7243a-2dff-4e7b-97f4-0025f305a548"],
Cell[575997, 12017, 2029, 57, 47, "Output",ExpressionUUID->"cfc58cdd-91b1-49e4-81b3-86acbdb945bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578063, 12079, 491, 10, 37, "Input",ExpressionUUID->"69420afa-9667-4188-bf4f-e6056b04effa"],
Cell[578557, 12091, 1537, 36, 49, "Output",ExpressionUUID->"040e210d-0401-4161-901b-cb01025d4e95"]
}, Open  ]],
Cell[580109, 12130, 3147, 91, 60, "Text",ExpressionUUID->"4dd11a71-3c51-4f03-ac5e-af29b9c7b9d7"],
Cell[CellGroupData[{
Cell[583281, 12225, 599, 14, 37, "Input",ExpressionUUID->"0f555270-cbec-4c68-afeb-1b61aec26018"],
Cell[583883, 12241, 925, 16, 40, "Output",ExpressionUUID->"05799f5f-53ef-4da2-9fbd-551e9a08f5e2"]
}, Open  ]],
Cell[584823, 12260, 373, 5, 28, "Text",ExpressionUUID->"0b7f804f-166d-4697-84f0-7951da4a43c1"],
Cell[CellGroupData[{
Cell[585221, 12269, 352, 8, 22, "Input",ExpressionUUID->"2802fb36-c7a9-4ffe-8361-343f537de550"],
Cell[585576, 12279, 693, 11, 25, "Output",ExpressionUUID->"9a9ee12f-ce63-4a61-92fb-596191c46c9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[586306, 12295, 1216, 34, 26, "Input",ExpressionUUID->"8f962155-1d6d-4aa8-a0e6-fe1f5d210199"],
Cell[587525, 12331, 1109, 23, 49, "Output",ExpressionUUID->"6b2e8052-173c-42ea-8266-248b27f0d116"]
}, Open  ]],
Cell[588649, 12357, 491, 9, 28, "Text",ExpressionUUID->"e5a3104e-3482-4f52-a3d8-4b952ecb6849"],
Cell[CellGroupData[{
Cell[589165, 12370, 370, 7, 22, "Input",ExpressionUUID->"b8c38e7a-bcf1-47c8-9777-048357afa40d"],
Cell[589538, 12379, 1065, 26, 46, "Output",ExpressionUUID->"f62c2f35-a9ea-4e3c-8e92-84769a45654a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[590640, 12410, 228, 5, 37, "Input",ExpressionUUID->"dacb370e-aa30-434e-80f8-f84a8073bc38"],
Cell[590871, 12417, 913, 20, 49, "Output",ExpressionUUID->"4fe0c7d1-9ae9-486a-b6f9-e4001f1293f0"]
}, Open  ]],
Cell[591799, 12440, 627, 14, 31, "Text",ExpressionUUID->"a5e2d874-e26f-4c23-b50c-f78734ae175d"],
Cell[CellGroupData[{
Cell[592451, 12458, 1157, 36, 46, "Input",ExpressionUUID->"ebe6e6c5-bfa0-49c5-8e19-07c5823f6a54"],
Cell[593611, 12496, 1527, 39, 49, "Output",ExpressionUUID->"d48fa2f8-6abb-47c3-bed9-4eb06b1414cc"]
}, Open  ]],
Cell[595153, 12538, 187, 3, 28, "Text",ExpressionUUID->"8ee92c19-f494-4566-a6d8-6edfd408d5b6"],
Cell[CellGroupData[{
Cell[595365, 12545, 625, 18, 44, "Input",ExpressionUUID->"466e1143-8f28-4ac6-835d-4cd8333f43b2"],
Cell[595993, 12565, 1371, 33, 40, "Output",ExpressionUUID->"c10f56b9-b240-402d-be1e-b0831e3e5fea"]
}, Open  ]],
Cell[597379, 12601, 3560, 110, 72, "Text",ExpressionUUID->"d57988a6-8540-4f43-bb23-d4a75ac90387"],
Cell[CellGroupData[{
Cell[600964, 12715, 700, 19, 37, "Input",ExpressionUUID->"bc7975f3-6d11-4c4c-8163-4473fc1cc615"],
Cell[601667, 12736, 945, 22, 40, "Output",ExpressionUUID->"29d91d06-21a1-467d-972f-ab012a38ab93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602649, 12763, 523, 13, 42, "Input",ExpressionUUID->"230fe18b-3ad2-4b9f-a0f9-cd0f8ba2fe08"],
Cell[603175, 12778, 1213, 31, 40, "Output",ExpressionUUID->"0eabc6cc-bb45-43b2-b2f8-d955782470a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604425, 12814, 444, 11, 40, "Input",ExpressionUUID->"9d48c60f-0d7a-4637-956f-0533bd80ab27"],
Cell[604872, 12827, 798, 15, 52, "Output",ExpressionUUID->"b5cffb59-6ec8-4f24-98f3-0324c7193eda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[605707, 12847, 414, 11, 40, "Input",ExpressionUUID->"5e8ea12a-5b5b-413f-bf4c-0fda0276ed0b"],
Cell[606124, 12860, 745, 15, 47, "Output",ExpressionUUID->"675bae48-3458-499b-9cc7-586c2aa38756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[606906, 12880, 552, 15, 42, "Input",ExpressionUUID->"b7bc1659-2115-4031-b0a4-e87f3e88b405"],
Cell[607461, 12897, 1169, 28, 97, "Output",ExpressionUUID->"da9aef37-3b2a-4c31-9ed7-a14dd79d0960"]
}, Open  ]],
Cell[608645, 12928, 1808, 59, 37, "Text",ExpressionUUID->"ec65de57-f0c1-471b-952b-73a095af0758"],
Cell[610456, 12989, 221, 3, 22, "Input",ExpressionUUID->"34984b1f-67c5-4c97-9c53-87e9dc004c13"],
Cell[610680, 12994, 210, 4, 28, "Text",ExpressionUUID->"cdce38e2-292f-4746-a203-44898e77d9f2"],
Cell[CellGroupData[{
Cell[610915, 13002, 3139, 86, 81, "Input",ExpressionUUID->"865bdc38-21bc-491e-b37b-825652db68a3"],
Cell[614057, 13090, 3916, 112, 150, "Output",ExpressionUUID->"43b30814-93c8-40ac-b516-c2d65bd59990"]
}, Open  ]],
Cell[617988, 13205, 815, 21, 33, "Text",ExpressionUUID->"f9cf5b7b-edd5-425e-bf57-fd56dfb80a93"],
Cell[CellGroupData[{
Cell[618828, 13230, 404, 9, 39, "Input",ExpressionUUID->"f65463c7-b808-482d-8f44-ec26f317d9dc"],
Cell[619235, 13241, 670, 12, 40, "Output",ExpressionUUID->"b8d26f66-9afd-486e-9ebd-8186f1c0825a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619942, 13258, 425, 9, 22, "Input",ExpressionUUID->"e11c362c-2a51-4cb2-9dab-15adea73d2a6"],
Cell[620370, 13269, 692, 11, 25, "Output",ExpressionUUID->"a1aa5d60-8a6a-47d0-ab7b-1db3067da071"]
}, Open  ]],
Cell[621077, 13283, 184, 3, 28, "Text",ExpressionUUID->"b6e4e95d-f727-481c-b9f3-a04cdaeb6658"],
Cell[CellGroupData[{
Cell[621286, 13290, 455, 11, 22, "Input",ExpressionUUID->"36040fe5-9f3c-4258-be64-b0f7749c2226"],
Cell[621744, 13303, 727, 12, 25, "Output",ExpressionUUID->"9dbc4cb8-ac21-40af-aca6-b2cc7822e740"]
}, Open  ]],
Cell[622486, 13318, 1002, 29, 36, "Text",ExpressionUUID->"83350412-190a-4185-8f64-9d9517f2db8e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[623525, 13352, 299, 5, 43, "Subsection",ExpressionUUID->"5903cb63-f148-4967-af14-7bf3cc4ac6fc"],
Cell[623827, 13359, 2008, 58, 39, "Text",ExpressionUUID->"80b40ca6-4415-48a0-8c72-fc4940cafbd5"],
Cell[CellGroupData[{
Cell[625860, 13421, 1172, 29, 30, "Input",ExpressionUUID->"c5573ead-b0ce-438a-8436-e3b2098a9fb6"],
Cell[627035, 13452, 5751, 115, 190, "Output",ExpressionUUID->"55f81efd-6755-4dfd-847b-aaf643153b07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[632823, 13572, 1720, 36, 38, "Input",ExpressionUUID->"d02a684e-523e-45b5-96bc-6347a40abb46"],
Cell[634546, 13610, 8008, 152, 201, "Output",ExpressionUUID->"e3802321-3338-4e21-8b41-98641cd1b905"]
}, Open  ]],
Cell[642569, 13765, 304, 6, 28, "Text",ExpressionUUID->"f6a6b2c6-5c3d-4a98-abb5-08099625b6ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[642910, 13776, 242, 4, 43, "Subsection",ExpressionUUID->"4e92455a-622a-4749-abff-3e4213556f9d"],
Cell[643155, 13782, 654, 11, 22, "Input",ExpressionUUID->"0464830b-829d-4e40-81f0-0efb4aa070c7"],
Cell[643812, 13795, 346, 7, 28, "Text",ExpressionUUID->"9c1f88de-2799-44e1-bfab-8caca2a3dd58"],
Cell[CellGroupData[{
Cell[644183, 13806, 540, 14, 41, "Input",ExpressionUUID->"3010c2a3-3655-44fc-82f9-bd2d929e1297"],
Cell[644726, 13822, 848, 17, 47, "Output",ExpressionUUID->"74f3a178-09da-4809-970a-b8fbcda5686b"]
}, Open  ]],
Cell[645589, 13842, 274, 4, 28, "Text",ExpressionUUID->"49183ef3-0b27-48a8-a6d5-57554e7cb870"],
Cell[CellGroupData[{
Cell[645888, 13850, 357, 5, 22, "Input",ExpressionUUID->"4a29bda8-5720-4e0d-94ca-061f7b87c0c0"],
Cell[646248, 13857, 731, 10, 25, "Output",ExpressionUUID->"60e48a14-18fe-462e-ae37-3f8da799e440"]
}, Open  ]],
Cell[646994, 13870, 148, 3, 28, "Text",ExpressionUUID->"bd997e63-14bd-429f-b339-254d9d967330"],
Cell[CellGroupData[{
Cell[647167, 13877, 660, 14, 39, "Input",ExpressionUUID->"6f4d7abc-a075-456c-9b13-365ad7255357"],
Cell[647830, 13893, 962, 19, 47, "Output",ExpressionUUID->"b38b7603-dd3e-484c-91a6-5078944b6e4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648829, 13917, 318, 8, 47, "Input",ExpressionUUID->"90f2016f-d2a8-4dc7-9a58-fd78986e3845"],
Cell[649150, 13927, 720, 10, 25, "Output",ExpressionUUID->"15f4c711-9a79-4035-8e87-fa2f56f07cb3"]
}, Open  ]],
Cell[649885, 13940, 338, 7, 28, "Text",ExpressionUUID->"2c212fca-bf47-4c75-90c2-fc56e7d9389a"],
Cell[CellGroupData[{
Cell[650248, 13951, 3605, 106, 109, "Input",ExpressionUUID->"7fc4cba3-9834-48c7-9d22-67d7bd4382c4"],
Cell[653856, 14059, 1694, 48, 65, "Output",ExpressionUUID->"eb2f5813-f7a4-471f-9349-77b662249309"]
}, Open  ]],
Cell[655565, 14110, 381, 11, 29, "Text",ExpressionUUID->"93d02c15-9706-4a6a-8cef-54ce3c83b2ee"],
Cell[CellGroupData[{
Cell[655971, 14125, 769, 25, 41, "Input",ExpressionUUID->"c7ff92db-dee0-4c13-ad98-b769e34fefc6"],
Cell[656743, 14152, 1760, 51, 78, "Output",ExpressionUUID->"4996eb1b-9091-418d-b54a-19935a23810c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658540, 14208, 1069, 34, 41, "Input",ExpressionUUID->"7dc6dc7e-d584-4c8b-ba95-4deeb756cd94"],
Cell[659612, 14244, 2597, 87, 78, "Output",ExpressionUUID->"c5502653-e8f4-4b81-ab2f-505b9bd255b4"]
}, Open  ]],
Cell[662224, 14334, 407, 12, 28, "Text",ExpressionUUID->"e518a95e-25ec-4c75-822e-ff491f4aa623"],
Cell[CellGroupData[{
Cell[662656, 14350, 942, 29, 40, "Input",ExpressionUUID->"21ccb5f2-b9e7-4d60-a8b7-ba979aaa6b31"],
Cell[663601, 14381, 1930, 55, 61, "Output",ExpressionUUID->"a92d3ccf-1ae2-49f5-a46e-bb99f52ed80f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665568, 14441, 822, 25, 26, "Input",ExpressionUUID->"07ee10f6-e985-4206-b22e-84c9bc799c90"],
Cell[666393, 14468, 2045, 60, 61, "Output",ExpressionUUID->"84dc9424-9e94-49b3-8097-a24c1fe6410d"]
}, Open  ]],
Cell[668453, 14531, 389, 10, 29, "Text",ExpressionUUID->"9fc2b46f-16f1-44eb-b708-a816b8d4db7d"],
Cell[CellGroupData[{
Cell[668867, 14545, 687, 22, 37, "Input",ExpressionUUID->"7c8a891a-26b2-4010-bb6e-5a4e751e7575"],
Cell[669557, 14569, 3019, 93, 61, "Output",ExpressionUUID->"a88cc8bf-26cb-4a3d-9493-00446228344c"]
}, Open  ]],
Cell[672591, 14665, 200, 5, 28, "Text",ExpressionUUID->"4fdac273-d81c-4032-846c-d05a244838d4"],
Cell[CellGroupData[{
Cell[672816, 14674, 407, 11, 22, "Input",ExpressionUUID->"9d54d291-07b1-482e-b5dc-9093f11f6d4d"],
Cell[673226, 14687, 713, 12, 25, "Output",ExpressionUUID->"bf29242d-0d8d-4c19-ad77-7db48ee73570"]
}, Open  ]],
Cell[673954, 14702, 225, 5, 28, "Text",ExpressionUUID->"a00dbfe8-84f7-4beb-b637-878d384b3101"],
Cell[CellGroupData[{
Cell[674204, 14711, 414, 11, 22, "Input",ExpressionUUID->"03401c78-2101-4927-87b5-6f17735576e1"],
Cell[674621, 14724, 804, 15, 40, "Output",ExpressionUUID->"15be4c0c-7926-49cf-b65a-52673d66e77f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675462, 14744, 2123, 52, 54, "Input",ExpressionUUID->"5076bd2a-72e7-4b8b-b46c-18f799d4039a"],
Cell[677588, 14798, 20154, 349, 286, "Output",ExpressionUUID->"f44bb7e1-af2c-4dea-9013-944eba286264"]
}, Open  ]],
Cell[697757, 15150, 608, 15, 36, "Text",ExpressionUUID->"1a40b4ac-23e4-4b4f-a102-856e827a906c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[698402, 15170, 193, 4, 43, "Subsection",ExpressionUUID->"4232a917-8b69-460d-aa2d-2c2a244368a8"],
Cell[698598, 15176, 473, 9, 46, "Text",ExpressionUUID->"73acd689-13b8-48a8-a773-4758e38768e4"],
Cell[699074, 15187, 488, 9, 22, "Input",ExpressionUUID->"079a3f2e-9bd9-45dc-8575-f73fa40f63c0"],
Cell[CellGroupData[{
Cell[699587, 15200, 139, 3, 22, "Input",ExpressionUUID->"44ba892b-9a85-48d6-b041-400379012303"],
Cell[699729, 15205, 633, 10, 25, "Output",ExpressionUUID->"2781b014-6005-4926-9746-f3ebff68e849"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[700411, 15221, 277, 4, 43, "Subsection",ExpressionUUID->"9675b042-2263-47b6-914f-03d81f9cbae1"],
Cell[700691, 15227, 545, 15, 36, "Text",ExpressionUUID->"1bf02196-8698-48b8-99de-4321dfe8b2bc"],
Cell[CellGroupData[{
Cell[701261, 15246, 296, 8, 22, "Input",ExpressionUUID->"804a48d1-78fc-4a0e-9dea-b3f1c6a3264f"],
Cell[701560, 15256, 659, 11, 25, "Output",ExpressionUUID->"3e00ce55-160d-48a2-8017-0100b273c287"]
}, Open  ]],
Cell[702234, 15270, 254, 5, 28, "Text",ExpressionUUID->"94d6869d-0eeb-487b-8d7b-48a4311820e8"],
Cell[CellGroupData[{
Cell[702513, 15279, 1326, 45, 46, "Input",ExpressionUUID->"920297ae-15d4-46eb-9c6b-4cbbe93cf5c7"],
Cell[703842, 15326, 881, 19, 43, "Output",ExpressionUUID->"86278a07-d540-4990-8a5e-138429f26281"]
}, Open  ]],
Cell[CellGroupData[{
Cell[704760, 15350, 664, 15, 39, "Input",ExpressionUUID->"7e6fc330-cfb3-464f-84dc-182a20afa5be"],
Cell[705427, 15367, 1052, 21, 43, "Output",ExpressionUUID->"f1ce6ed1-cf24-48d6-b9c4-e1269494fb35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[706516, 15393, 322, 9, 47, "Input",ExpressionUUID->"2c79e6e2-ef2c-45ee-a498-3834964deb3f"],
Cell[706841, 15404, 799, 13, 40, "Output",ExpressionUUID->"7f5dc096-54e8-4ff1-854f-ca80d13a98f5"]
}, Open  ]],
Cell[707655, 15420, 318, 6, 28, "Text",ExpressionUUID->"b413f1a8-c238-4dae-9b3b-7e9c2bd949d9"],
Cell[CellGroupData[{
Cell[707998, 15430, 3605, 106, 109, "Input",ExpressionUUID->"be6ac545-5dc4-4d3b-9443-7b23f7bd9826"],
Cell[711606, 15538, 1964, 56, 67, "Output",ExpressionUUID->"46cf9828-4f22-4ec8-8aa4-2d6cf0352d69"]
}, Open  ]],
Cell[713585, 15597, 329, 10, 29, "Text",ExpressionUUID->"5dda243c-1fb9-473b-942a-ab81a7b5bd22"],
Cell[CellGroupData[{
Cell[713939, 15611, 769, 25, 41, "Input",ExpressionUUID->"642fa5bf-a5e2-4921-9be2-7f2b0df96714"],
Cell[714711, 15638, 2099, 60, 78, "Output",ExpressionUUID->"941d6160-d637-4f8c-86e1-c6147fd6db3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[716847, 15703, 1069, 34, 41, "Input",ExpressionUUID->"b477f1e1-e176-4c20-9942-81469433cd08"],
Cell[717919, 15739, 2986, 99, 78, "Output",ExpressionUUID->"03b4a5c7-ced7-494a-8ca7-a502beee26fe"]
}, Open  ]],
Cell[720920, 15841, 450, 11, 28, "Text",ExpressionUUID->"a3884cc5-d844-4079-b080-82b98010d06b"],
Cell[CellGroupData[{
Cell[721395, 15856, 989, 30, 40, "Input",ExpressionUUID->"4b46ef13-295f-41c9-bf38-3896f392113e"],
Cell[722387, 15888, 2654, 76, 62, "Output",ExpressionUUID->"b6e02e69-a1d4-446d-af80-fb291b713af7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[725078, 15969, 822, 25, 26, "Input",ExpressionUUID->"2cea2b7b-0d89-4e4e-80f5-2fdfeb19256c"],
Cell[725903, 15996, 2306, 68, 62, "Output",ExpressionUUID->"4daec157-bea7-434d-a966-54725820fa27"]
}, Open  ]],
Cell[728224, 16067, 389, 10, 29, "Text",ExpressionUUID->"c15c0dcb-a38c-4c7e-896f-f67b74bc343a"],
Cell[CellGroupData[{
Cell[728638, 16081, 747, 22, 37, "Input",ExpressionUUID->"7a1cc03d-4e59-4d97-b7ab-c524054c3eff"],
Cell[729388, 16105, 6773, 204, 239, "Output",ExpressionUUID->"79ea339a-6e23-4eae-9440-07d1337e2065"]
}, Open  ]],
Cell[736176, 16312, 228, 5, 28, "Text",ExpressionUUID->"483604b3-bf5e-477e-9596-202d62578abd"],
Cell[CellGroupData[{
Cell[736429, 16321, 407, 11, 22, "Input",ExpressionUUID->"4eb953b1-7118-4083-bb90-422fde201f30"],
Cell[736839, 16334, 739, 12, 25, "Output",ExpressionUUID->"6bbfd649-640a-4bd9-86c5-0369b947659d"]
}, Open  ]],
Cell[737593, 16349, 198, 5, 28, "Text",ExpressionUUID->"a55e6249-6201-48b2-9be1-d9f8c6f7560d"],
Cell[CellGroupData[{
Cell[737816, 16358, 414, 11, 22, "Input",ExpressionUUID->"39b73e9d-dac9-4376-9030-3a6c3d21f271"],
Cell[738233, 16371, 851, 16, 40, "Output",ExpressionUUID->"548cc9bd-ffe3-4760-859e-0df99368bdc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739121, 16392, 2517, 63, 54, "Input",ExpressionUUID->"eab5d8fc-4523-43ca-99f3-971a471fa0a1"],
Cell[741641, 16457, 61729, 1031, 262, "Output",ExpressionUUID->"b0fa1428-480c-4bd9-90d2-a71006242913"]
}, Open  ]],
Cell[803385, 17491, 648, 16, 54, "Text",ExpressionUUID->"f21da54f-efbe-4bc4-802f-2b41a531375d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[804070, 17512, 170, 3, 43, "Subsection",ExpressionUUID->"ac78153d-6948-4c13-8d86-7dbc3b0bc6e0"],
Cell[804243, 17517, 547, 15, 36, "Text",ExpressionUUID->"6e238a74-74e9-48ca-92d2-cfe91b3483d7"],
Cell[CellGroupData[{
Cell[804815, 17536, 349, 9, 22, "Input",ExpressionUUID->"f7587977-8c12-4d85-bd7d-d3012ce742f5"],
Cell[805167, 17547, 634, 11, 25, "Output",ExpressionUUID->"38785ee1-f0ef-43b9-a5ea-5efa38f3dc78"]
}, Open  ]],
Cell[805816, 17561, 205, 5, 28, "Text",ExpressionUUID->"c7c109e7-afa0-4ded-b8aa-f0403b05dabf"],
Cell[CellGroupData[{
Cell[806046, 17570, 1224, 43, 46, "Input",ExpressionUUID->"d64ce968-37ed-4543-a31b-f5120bb7f95e"],
Cell[807273, 17615, 836, 20, 43, "Output",ExpressionUUID->"5e4dea11-fc0d-44fa-9aa5-0173b9b883de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[808146, 17640, 664, 15, 39, "Input",ExpressionUUID->"acbec128-3126-4202-8bc6-c3edb5a0498f"],
Cell[808813, 17657, 1003, 21, 43, "Output",ExpressionUUID->"334de25e-25d2-4cbb-a664-5b91bc0c841c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[809853, 17683, 322, 9, 47, "Input",ExpressionUUID->"7b0ec483-ac1d-47d8-a51c-0a2b066e4ca0"],
Cell[810178, 17694, 739, 12, 40, "Output",ExpressionUUID->"8ceefcff-0692-4090-9aef-08d271c2fd13"]
}, Open  ]],
Cell[810932, 17709, 508, 11, 26, "Text",ExpressionUUID->"f1e80ffc-7ee9-4538-9814-9c3ddb667178"],
Cell[CellGroupData[{
Cell[811465, 17724, 3605, 106, 109, "Input",ExpressionUUID->"24414f9e-0e26-47e7-ac82-224ea1fdc821"],
Cell[815073, 17832, 2207, 65, 67, "Output",ExpressionUUID->"ef0f9a88-6e71-4b64-ba60-bc9a80d21705"]
}, Open  ]],
Cell[817295, 17900, 365, 11, 29, "Text",ExpressionUUID->"8472f84d-2c47-4667-8932-39782e2db76c"],
Cell[CellGroupData[{
Cell[817685, 17915, 769, 25, 41, "Input",ExpressionUUID->"03359857-0a1b-4f17-8172-d55b8cb6a9e3"],
Cell[818457, 17942, 2095, 61, 78, "Output",ExpressionUUID->"427bfe65-0bc0-4ff5-be03-03b88878c82e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[820589, 18008, 1069, 34, 41, "Input",ExpressionUUID->"cbf97bb3-00ad-4e15-9caa-880cc575bf9d"],
Cell[821661, 18044, 3108, 103, 78, "Output",ExpressionUUID->"615c02ad-457a-43af-9fb1-219added4653"]
}, Open  ]],
Cell[824784, 18150, 375, 11, 28, "Text",ExpressionUUID->"b39707dd-016e-4efa-902c-c657f498edbd"],
Cell[CellGroupData[{
Cell[825184, 18165, 991, 30, 40, "Input",ExpressionUUID->"c0c433c0-e4e1-4e6f-8fe9-72777415363c"],
Cell[826178, 18197, 2798, 81, 62, "Output",ExpressionUUID->"31c529aa-65ff-433b-9c0c-e93075bf2a50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[829013, 18283, 866, 26, 26, "Input",ExpressionUUID->"d41955a7-33d1-4e64-a2ab-c619ec18f20d"],
Cell[829882, 18311, 3269, 100, 66, "Output",ExpressionUUID->"cc7c7087-605d-478c-9081-6626a05f89bd"]
}, Open  ]],
Cell[833166, 18414, 387, 10, 29, "Text",ExpressionUUID->"28eee95d-3b4e-4aad-9036-0c13595d4d61"],
Cell[CellGroupData[{
Cell[833578, 18428, 749, 22, 37, "Input",ExpressionUUID->"81db4ca2-2a79-4c50-bd4f-6cbb9650a33b"],
Cell[834330, 18452, 8521, 258, 255, "Output",ExpressionUUID->"22b9af31-da42-4eb0-95a8-50364d501bb0"]
}, Open  ]],
Cell[842866, 18713, 200, 5, 28, "Text",ExpressionUUID->"5b09eb0a-f6d9-4341-b341-8b786bfb73cc"],
Cell[CellGroupData[{
Cell[843091, 18722, 407, 11, 22, "Input",ExpressionUUID->"f9349e04-7bb6-420b-b55f-514ae18bdc5c"],
Cell[843501, 18735, 738, 12, 25, "Output",ExpressionUUID->"46c9b2b0-f6c4-4a50-a61c-4d5c08fabec2"]
}, Open  ]],
Cell[844254, 18750, 217, 5, 28, "Text",ExpressionUUID->"d60a58b1-da2a-444e-970a-a5cd0ab50ba8"],
Cell[CellGroupData[{
Cell[844496, 18759, 414, 11, 22, "Input",ExpressionUUID->"41eaaefd-9554-4337-8b87-1dac03adeca1"],
Cell[844913, 18772, 852, 16, 40, "Output",ExpressionUUID->"1c723c76-0fbc-4459-b594-bc07a6a4b9fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845802, 18793, 2365, 61, 54, "Input",ExpressionUUID->"75c9159f-225f-42fc-a263-1f79a5d34a15"],
Cell[848170, 18856, 79348, 1322, 265, "Output",ExpressionUUID->"bc3edda2-488c-4d49-829c-f01113a83445"]
}, Open  ]],
Cell[927533, 20181, 648, 16, 54, "Text",ExpressionUUID->"74e04250-3380-49b8-8e96-d21f9a9362ed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928218, 20202, 171, 3, 43, "Subsection",ExpressionUUID->"7d44fcb3-41e0-4cf5-9b45-1f4d33b6bf5b"],
Cell[928392, 20207, 580, 16, 36, "Text",ExpressionUUID->"9870b9ed-764d-4198-b476-cdb6e08718cf"],
Cell[CellGroupData[{
Cell[928997, 20227, 318, 8, 22, "Input",ExpressionUUID->"3a9318dc-1918-4071-9492-85e2c0a66b4f"],
Cell[929318, 20237, 627, 11, 25, "Output",ExpressionUUID->"cae1c319-9a5e-4e93-9d4e-159a6bed97d9"]
}, Open  ]],
Cell[929960, 20251, 205, 5, 28, "Text",ExpressionUUID->"29bf46aa-c8e1-4113-9f40-2df352fda5a1"],
Cell[CellGroupData[{
Cell[930190, 20260, 1158, 42, 46, "Input",ExpressionUUID->"ae2599c6-f36c-4298-a0de-b4d376d97bf7"],
Cell[931351, 20304, 815, 18, 46, "Output",ExpressionUUID->"664fee82-780b-459f-bfb5-ce477787e1dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[932203, 20327, 664, 15, 39, "Input",ExpressionUUID->"86cb9b21-123c-476d-bdcb-116ec27ea161"],
Cell[932870, 20344, 988, 20, 46, "Output",ExpressionUUID->"51c0c879-1adc-44bb-a630-e55e954b1cd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[933895, 20369, 322, 9, 47, "Input",ExpressionUUID->"c6ce7a49-3ecf-48ef-8e75-73dcd6a86c9a"],
Cell[934220, 20380, 769, 13, 40, "Output",ExpressionUUID->"98bab43e-3798-4a1a-92cc-d660ebb5aec7"]
}, Open  ]],
Cell[935004, 20396, 455, 13, 29, "Text",ExpressionUUID->"2b49fdea-a5ce-434f-9c1d-b1cbd76ee5d3"],
Cell[CellGroupData[{
Cell[935484, 20413, 3605, 106, 109, "Input",ExpressionUUID->"4315fa2d-8018-4d4d-8c0f-d82e59dd1d53"],
Cell[939092, 20521, 2165, 64, 75, "Output",ExpressionUUID->"6fc5b9fe-2276-4d92-8763-675d68a8b376"]
}, Open  ]],
Cell[CellGroupData[{
Cell[941294, 20590, 769, 25, 41, "Input",ExpressionUUID->"681e2a83-fc06-4ee4-95ff-68b9186247dc"],
Cell[942066, 20617, 2115, 59, 80, "Output",ExpressionUUID->"07f7de68-6505-468f-846e-a63284b843c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944218, 20681, 1065, 34, 41, "Input",ExpressionUUID->"95a9e24c-659d-4003-be06-98837ea43557"],
Cell[945286, 20717, 3220, 101, 80, "Output",ExpressionUUID->"320a4964-8ae3-4841-86da-2308e9c976a3"]
}, Open  ]],
Cell[948521, 20821, 371, 11, 28, "Text",ExpressionUUID->"2c2d4cef-5bf5-44da-84ff-4b9ced56bc29"],
Cell[CellGroupData[{
Cell[948917, 20836, 989, 30, 40, "Input",ExpressionUUID->"cf9e754c-3641-480a-aa85-caeecff0d664"],
Cell[949909, 20868, 2737, 78, 70, "Output",ExpressionUUID->"48c653de-cd0c-42db-819c-6d5a1e4e3e62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[952683, 20951, 869, 26, 26, "Input",ExpressionUUID->"36873a14-7378-4066-90dc-00592e766270"],
Cell[953555, 20979, 3182, 95, 100, "Output",ExpressionUUID->"7767edff-3a17-4e9a-ab98-850a571a45ab"]
}, Open  ]],
Cell[956752, 21077, 413, 10, 29, "Text",ExpressionUUID->"f88e2df8-5d64-430b-8f2e-2bfbd1334f30"],
Cell[CellGroupData[{
Cell[957190, 21091, 747, 22, 37, "Input",ExpressionUUID->"4244aed3-8918-4275-a3b0-c39306eab05e"],
Cell[957940, 21115, 8575, 251, 298, "Output",ExpressionUUID->"ae644d4b-b160-49f5-b3d0-502137555a08"]
}, Open  ]],
Cell[966530, 21369, 200, 5, 28, "Text",ExpressionUUID->"1a49a683-c875-4d0a-87c0-abe551bf3b53"],
Cell[CellGroupData[{
Cell[966755, 21378, 407, 11, 22, "Input",ExpressionUUID->"2e806413-6616-4fee-9f9d-cfdc8d778d34"],
Cell[967165, 21391, 719, 12, 25, "Output",ExpressionUUID->"a56fac6d-ed58-4051-8092-c854ea5c9631"]
}, Open  ]],
Cell[967899, 21406, 244, 5, 28, "Text",ExpressionUUID->"b20fbaec-0a56-4643-93a0-7a65235148f4"],
Cell[CellGroupData[{
Cell[968168, 21415, 414, 11, 22, "Input",ExpressionUUID->"e5148bc1-23a7-4e5a-9e86-a02167da5481"],
Cell[968585, 21428, 836, 15, 40, "Output",ExpressionUUID->"87987ef0-320a-4238-a6b1-4d5ec7fe3355"]
}, Open  ]],
Cell[CellGroupData[{
Cell[969458, 21448, 2317, 61, 54, "Input",ExpressionUUID->"a7a1d1bf-4623-4b48-a3a3-c085c87c8248"],
Cell[971778, 21511, 89135, 1481, 290, "Output",ExpressionUUID->"1a3b295b-fb78-4ae2-9a5f-06450b946c7c"]
}, Open  ]],
Cell[1060928, 22995, 728, 18, 54, "Text",ExpressionUUID->"6590a7e6-8992-4d15-9298-6d32800fec09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061693, 23018, 172, 3, 43, "Subsection",ExpressionUUID->"0b2ee915-97ed-4a1d-bc46-e856c9af5107"],
Cell[1061868, 23023, 547, 15, 36, "Text",ExpressionUUID->"1c02c9f6-5786-4c74-b217-b1a69a346255"],
Cell[CellGroupData[{
Cell[1062440, 23042, 293, 8, 22, "Input",ExpressionUUID->"ae42e2eb-eccc-454d-899f-5931963a9218"],
Cell[1062736, 23052, 615, 11, 25, "Output",ExpressionUUID->"78425ce8-9aba-41fb-a0e4-370adaf4305d"]
}, Open  ]],
Cell[1063366, 23066, 205, 5, 28, "Text",ExpressionUUID->"90228d57-14e0-45e7-bfa2-a69181b4bb7f"],
Cell[CellGroupData[{
Cell[1063596, 23075, 1158, 42, 46, "Input",ExpressionUUID->"1cdf0ca8-309b-45dd-a454-62d1a78ed316"],
Cell[1064757, 23119, 737, 17, 46, "Output",ExpressionUUID->"e66457ac-a64d-4ce9-91fd-ddb7f018562a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1065531, 23141, 664, 15, 39, "Input",ExpressionUUID->"9d4c0d3e-ee02-4f6e-803c-a536c4d02046"],
Cell[1066198, 23158, 970, 20, 46, "Output",ExpressionUUID->"159e0c67-da9a-499d-8fe8-ad210eac1c7f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067205, 23183, 322, 9, 47, "Input",ExpressionUUID->"5f774b86-37a7-4c35-9b06-bb491174c44a"],
Cell[1067530, 23194, 742, 12, 40, "Output",ExpressionUUID->"35c9a7e4-ab1c-4ee8-9a24-2362cbfe5594"]
}, Open  ]],
Cell[1068287, 23209, 480, 13, 29, "Text",ExpressionUUID->"24e83fb2-d0af-455e-a1ed-863589bcfacc"],
Cell[CellGroupData[{
Cell[1068792, 23226, 3605, 106, 109, "Input",ExpressionUUID->"2df03f82-6c41-4089-8c27-9078cece0bd4"],
Cell[1072400, 23334, 2131, 63, 75, "Output",ExpressionUUID->"f5fb0a3b-7b3c-4cb9-8002-5207f0ad7d3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1074568, 23402, 816, 26, 41, "Input",ExpressionUUID->"64d7281e-ab32-42fc-ac71-83d06c2173a0"],
Cell[1075387, 23430, 2073, 57, 80, "Output",ExpressionUUID->"bd9bc015-ee18-4e83-9972-5777c9087cff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1077497, 23492, 1065, 34, 41, "Input",ExpressionUUID->"5e2519cc-64ac-466d-896a-4f73b642f544"],
Cell[1078565, 23528, 3168, 99, 80, "Output",ExpressionUUID->"7a3836a5-a481-4505-aedf-af047cda6732"]
}, Open  ]],
Cell[1081748, 23630, 369, 11, 28, "Text",ExpressionUUID->"43560c66-d191-4f45-97ac-d20b189c1795"],
Cell[CellGroupData[{
Cell[1082142, 23645, 989, 30, 40, "Input",ExpressionUUID->"5154e968-31dc-4a44-8aa9-a34cfc8d266e"],
Cell[1083134, 23677, 2728, 78, 70, "Output",ExpressionUUID->"5b584d17-c90e-4290-89b5-981421a59b24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1085899, 23760, 869, 26, 26, "Input",ExpressionUUID->"112ff945-a63d-4c06-b281-e7cd11d670b7"],
Cell[1086771, 23788, 3277, 98, 100, "Output",ExpressionUUID->"c5f6ab44-c64c-4373-baea-9897c40cdb85"]
}, Open  ]],
Cell[1090063, 23889, 389, 10, 29, "Text",ExpressionUUID->"1023c082-af24-4e05-8c1d-513fc11ef50f"],
Cell[CellGroupData[{
Cell[1090477, 23903, 747, 22, 37, "Input",ExpressionUUID->"7f66ba11-5e72-491a-b047-17ee7fd8612c"],
Cell[1091227, 23927, 8581, 254, 255, "Output",ExpressionUUID->"8037e277-64e3-4c8a-aea5-5b0f59ae1070"]
}, Open  ]],
Cell[1099823, 24184, 198, 5, 28, "Text",ExpressionUUID->"51c38967-6109-4357-a124-93dfdcc04384"],
Cell[CellGroupData[{
Cell[1100046, 24193, 407, 11, 22, "Input",ExpressionUUID->"d42539ea-48f9-42eb-bf38-e0ab13736340"],
Cell[1100456, 24206, 729, 12, 25, "Output",ExpressionUUID->"cf6a1be4-fa7c-4700-9af0-457959da5e77"]
}, Open  ]],
Cell[1101200, 24221, 223, 5, 28, "Text",ExpressionUUID->"09fbcb31-646e-4922-b064-89c968692d3d"],
Cell[CellGroupData[{
Cell[1101448, 24230, 414, 11, 22, "Input",ExpressionUUID->"2ca4816a-bc96-4504-99dc-295b7ba7b8fb"],
Cell[1101865, 24243, 865, 16, 40, "Output",ExpressionUUID->"47576a0a-f7f5-49c6-9fa4-f74836154eef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1102767, 24264, 2362, 61, 54, "Input",ExpressionUUID->"485e3d0e-4b35-4713-ae60-f408d9fe6492"],
Cell[1105132, 24327, 94415, 1568, 276, "Output",ExpressionUUID->"106bfc6e-99d0-47c8-8b63-8eb6320fd9a3"]
}, Open  ]],
Cell[1199562, 25898, 648, 16, 54, "Text",ExpressionUUID->"df996ee5-68ad-43c7-99f3-b7b83a78dae6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200247, 25919, 198, 3, 43, "Subsection",ExpressionUUID->"86518861-b01c-4ce6-b580-43732ef7570a"],
Cell[1200448, 25924, 159, 3, 22, "Input",ExpressionUUID->"50700e4d-daba-4811-ac69-610e058057cc"],
Cell[CellGroupData[{
Cell[1200632, 25931, 298, 8, 22, "Input",ExpressionUUID->"5fa30d04-0e0a-408b-852a-b281712b4509"],
Cell[1200933, 25941, 445, 8, 25, "Output",ExpressionUUID->"5b4ec347-f428-45b4-a890-001f83c19b7c"]
}, Open  ]],
Cell[1201393, 25952, 1057, 32, 33, "Text",ExpressionUUID->"c7df27e7-50a4-4a43-a1d3-bf26ceb38670"],
Cell[CellGroupData[{
Cell[1202475, 25988, 561, 15, 40, "Input",ExpressionUUID->"36663e09-41ea-434b-81cb-bdcc16f7c5bd"],
Cell[1203039, 26005, 479, 9, 43, "Output",ExpressionUUID->"c33ec8d9-cadf-4363-a421-24d3b6693de1"]
}, Open  ]],
Cell[1203533, 26017, 495, 13, 34, "Text",ExpressionUUID->"7a4c2aa6-c8d5-472c-9476-342929326afe"],
Cell[CellGroupData[{
Cell[1204053, 26034, 305, 7, 40, "Input",ExpressionUUID->"ba6661b1-1233-4f34-aaf3-07e863f1de58"],
Cell[1204361, 26043, 416, 8, 43, "Output",ExpressionUUID->"8c4f835a-7da6-4baf-809b-0a3980b19a61"]
}, Open  ]],
Cell[1204792, 26054, 222, 5, 28, "Text",ExpressionUUID->"add7dc1b-9afc-4186-9781-6abd8c55dd05"],
Cell[CellGroupData[{
Cell[1205039, 26063, 602, 10, 22, "Input",ExpressionUUID->"54cdeb33-c587-4006-b6f2-2d7b4d67dce9"],
Cell[1205644, 26075, 501, 12, 43, "Output",ExpressionUUID->"ec975f3f-fbb1-4370-982b-4c315444f8cb"]
}, Open  ]],
Cell[1206160, 26090, 196, 3, 28, "Text",ExpressionUUID->"750ee5a6-1afa-48f6-8dbc-8a1e3e329cac"],
Cell[CellGroupData[{
Cell[1206381, 26097, 409, 10, 39, "Input",ExpressionUUID->"8f11c716-61f1-4fae-8dae-c1be3b80c1df"],
Cell[1206793, 26109, 463, 8, 25, "Output",ExpressionUUID->"4c116b20-04d9-440f-a6af-cd5879412daa"]
}, Open  ]],
Cell[1207271, 26120, 205, 3, 28, "Text",ExpressionUUID->"0518337e-2743-41f8-8121-dd757d347700"],
Cell[CellGroupData[{
Cell[1207501, 26127, 493, 15, 37, "Input",ExpressionUUID->"e85f4bff-f693-429d-8760-b38841aef212"],
Cell[1207997, 26144, 394, 6, 25, "Output",ExpressionUUID->"edd85bee-d958-4f63-8b4a-32b02df70938"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208440, 26156, 251, 4, 43, "Subsection",ExpressionUUID->"6dfcaea4-65cf-42fb-b8f1-3fe0ce0a9391"],
Cell[1208694, 26162, 159, 3, 22, "Input",ExpressionUUID->"cdda042d-b3d3-4e0a-8c87-34b41f68199c"],
Cell[CellGroupData[{
Cell[1208878, 26169, 326, 9, 22, "Input",ExpressionUUID->"7f8fa2ef-0399-4519-88e7-4ab02e0c5165"],
Cell[1209207, 26180, 439, 8, 25, "Output",ExpressionUUID->"50c7ecf3-7c60-4859-b628-daa958afbcc1"]
}, Open  ]],
Cell[1209661, 26191, 1057, 32, 33, "Text",ExpressionUUID->"63bc2199-045d-4fb6-ac6e-cbc09a31b6b5"],
Cell[CellGroupData[{
Cell[1210743, 26227, 535, 14, 40, "Input",ExpressionUUID->"305a3090-b87d-4139-a22a-bddada0932c4"],
Cell[1211281, 26243, 512, 10, 43, "Output",ExpressionUUID->"38367452-f57b-4939-af59-af917bd44b6f"]
}, Open  ]],
Cell[1211808, 26256, 495, 13, 34, "Text",ExpressionUUID->"31492f7b-4dc4-442e-ad62-c6c5a32f8033"],
Cell[CellGroupData[{
Cell[1212328, 26273, 305, 7, 40, "Input",ExpressionUUID->"313c2420-9be6-40c8-a870-b1dacd68e9c5"],
Cell[1212636, 26282, 445, 8, 43, "Output",ExpressionUUID->"09fab1e0-9be7-46fe-8568-1368d3de75bc"]
}, Open  ]],
Cell[1213096, 26293, 222, 5, 28, "Text",ExpressionUUID->"556c37f5-953c-45cc-98a8-be1f3f7f1a78"],
Cell[CellGroupData[{
Cell[1213343, 26302, 602, 10, 22, "Input",ExpressionUUID->"18b47400-86be-4eba-9413-c88c060c48e3"],
Cell[1213948, 26314, 549, 13, 50, "Output",ExpressionUUID->"392feb3d-264c-454d-bb39-3a437de05e21"]
}, Open  ]],
Cell[1214512, 26330, 196, 3, 28, "Text",ExpressionUUID->"5b960913-8632-4317-be85-c3368ef15160"],
Cell[CellGroupData[{
Cell[1214733, 26337, 409, 10, 39, "Input",ExpressionUUID->"7b2e737c-2dbf-47ab-a44c-77f6ff259d26"],
Cell[1215145, 26349, 485, 9, 25, "Output",ExpressionUUID->"3b3de7d8-a866-470b-9c10-c8c0a4ecb8dd"]
}, Open  ]],
Cell[1215645, 26361, 205, 3, 28, "Text",ExpressionUUID->"af9b45dd-df6e-4b70-94c8-82ed25622f09"],
Cell[CellGroupData[{
Cell[1215875, 26368, 493, 15, 37, "Input",ExpressionUUID->"a0827f4d-36a2-4437-ac69-cc41370caafb"],
Cell[1216371, 26385, 417, 6, 25, "Output",ExpressionUUID->"d3b23261-a5ee-467a-90fc-5c9fc0abe3c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1216837, 26397, 247, 4, 43, "Subsection",ExpressionUUID->"6d04aacd-d358-4076-b724-9161dcec0302"],
Cell[1217087, 26403, 159, 3, 22, "Input",ExpressionUUID->"48766320-a0d3-4703-a967-7e3b08a44e6f"],
Cell[CellGroupData[{
Cell[1217271, 26410, 351, 9, 22, "Input",ExpressionUUID->"ed5d5e30-37c3-4d1b-b45b-b56db8452922"],
Cell[1217625, 26421, 464, 9, 25, "Output",ExpressionUUID->"d43138aa-74da-4e30-8e5b-0619f3284602"]
}, Open  ]],
Cell[1218104, 26433, 1026, 31, 33, "Text",ExpressionUUID->"ac513110-a612-4d52-9940-cba69336c055"],
Cell[CellGroupData[{
Cell[1219155, 26468, 559, 15, 40, "Input",ExpressionUUID->"67b4e514-4cf5-4570-82c2-0c1723155c43"],
Cell[1219717, 26485, 509, 10, 43, "Output",ExpressionUUID->"be373554-ae0e-4028-a2a1-abcdd6c3ec64"]
}, Open  ]],
Cell[1220241, 26498, 495, 13, 34, "Text",ExpressionUUID->"29da861d-76df-496e-a837-a4651e1d440b"],
Cell[CellGroupData[{
Cell[1220761, 26515, 305, 7, 40, "Input",ExpressionUUID->"f68dab0f-ed41-4d37-8c83-455bae290ce0"],
Cell[1221069, 26524, 443, 8, 43, "Output",ExpressionUUID->"df7a300c-c308-4dd3-bd83-8c704a05cedb"]
}, Open  ]],
Cell[1221527, 26535, 222, 5, 28, "Text",ExpressionUUID->"72a0cd15-2afa-458f-8b2e-a1c629814fdb"],
Cell[CellGroupData[{
Cell[1221774, 26544, 602, 10, 22, "Input",ExpressionUUID->"d65a228f-5a24-40e0-a4d0-4dd1dba0905e"],
Cell[1222379, 26556, 551, 13, 50, "Output",ExpressionUUID->"6c3f9eff-94ce-4027-bc4f-66a19dcfa9dd"]
}, Open  ]],
Cell[1222945, 26572, 196, 3, 28, "Text",ExpressionUUID->"3a9229de-ab49-41d7-b7d6-e9b1db88340d"],
Cell[CellGroupData[{
Cell[1223166, 26579, 409, 10, 39, "Input",ExpressionUUID->"93d2a8fd-2389-492a-bc07-ef37988a94f5"],
Cell[1223578, 26591, 486, 9, 25, "Output",ExpressionUUID->"f4cc046d-52a6-4e8e-a19e-802aacb63c00"]
}, Open  ]],
Cell[1224079, 26603, 205, 3, 28, "Text",ExpressionUUID->"2ebcddf3-3c10-4541-84cf-0e3330bfe5c8"],
Cell[CellGroupData[{
Cell[1224309, 26610, 493, 15, 37, "Input",ExpressionUUID->"99920fd0-f482-4c37-9ce0-1550dfc65d42"],
Cell[1224805, 26627, 418, 6, 25, "Output",ExpressionUUID->"de1b7ec9-0d55-4a0a-a20d-2eab691e3d0b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225272, 26639, 249, 4, 43, "Subsection",ExpressionUUID->"b9bd7bee-2a82-426d-9005-c6a1e5bfe41c"],
Cell[1225524, 26645, 159, 3, 22, "Input",ExpressionUUID->"89d253ef-bf1c-4ccd-b99b-33f31fc9c689"],
Cell[CellGroupData[{
Cell[1225708, 26652, 347, 9, 22, "Input",ExpressionUUID->"c8ce3c00-0311-4502-9791-8be69e4db64a"],
Cell[1226058, 26663, 466, 9, 25, "Output",ExpressionUUID->"762f599f-1c22-451b-b102-fee69f15b945"]
}, Open  ]],
Cell[1226539, 26675, 1057, 32, 33, "Text",ExpressionUUID->"e2a25033-854c-4e0c-a45f-c011bf2a86d6"],
Cell[CellGroupData[{
Cell[1227621, 26711, 560, 15, 40, "Input",ExpressionUUID->"3ace9f72-65e6-4f25-80cc-0bb40408bd42"],
Cell[1228184, 26728, 508, 10, 43, "Output",ExpressionUUID->"6ae602b2-f3a7-470c-852f-6bf53f2512cc"]
}, Open  ]],
Cell[1228707, 26741, 495, 13, 34, "Text",ExpressionUUID->"0691df0a-0112-4767-a9cf-33f567a9b289"],
Cell[CellGroupData[{
Cell[1229227, 26758, 305, 7, 40, "Input",ExpressionUUID->"c6176ff8-2a0d-43b6-8732-7ce2af45b969"],
Cell[1229535, 26767, 440, 8, 43, "Output",ExpressionUUID->"6cc2741b-429d-4808-b91b-31888f906f24"]
}, Open  ]],
Cell[1229990, 26778, 222, 5, 28, "Text",ExpressionUUID->"13bc511d-7081-4b78-9bec-f3ccaa44b995"],
Cell[CellGroupData[{
Cell[1230237, 26787, 602, 10, 22, "Input",ExpressionUUID->"bf76bf93-c8f1-4326-ae46-3aa81e6a7eb9"],
Cell[1230842, 26799, 549, 13, 50, "Output",ExpressionUUID->"890ae7e8-1969-471f-bebd-65247568e7f0"]
}, Open  ]],
Cell[1231406, 26815, 196, 3, 28, "Text",ExpressionUUID->"644081c7-38a7-49a4-aedb-5ccc72a4abcf"],
Cell[CellGroupData[{
Cell[1231627, 26822, 409, 10, 39, "Input",ExpressionUUID->"c19d7a04-1041-4810-8f10-b82e86ed370f"],
Cell[1232039, 26834, 490, 9, 25, "Output",ExpressionUUID->"255944c2-bae5-414b-992d-739fc47fee8c"]
}, Open  ]],
Cell[1232544, 26846, 205, 3, 28, "Text",ExpressionUUID->"7f185f3d-f0ef-46c4-a045-80c058dce665"],
Cell[CellGroupData[{
Cell[1232774, 26853, 493, 15, 37, "Input",ExpressionUUID->"9056323c-c67d-493f-86aa-7b9201190dc2"],
Cell[1233270, 26870, 407, 6, 25, "Output",ExpressionUUID->"0e78a348-ab78-4981-9a4e-793320f6e620"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1233726, 26882, 249, 4, 43, "Subsection",ExpressionUUID->"ad66d7a9-48d2-446d-b503-0d646b4b3fb9"],
Cell[1233978, 26888, 159, 3, 22, "Input",ExpressionUUID->"22964187-90d1-4933-b987-af4644797807"],
Cell[CellGroupData[{
Cell[1234162, 26895, 349, 9, 22, "Input",ExpressionUUID->"1dffadac-f1b2-4526-a94a-1bd9fefcf487"],
Cell[1234514, 26906, 435, 8, 25, "Output",ExpressionUUID->"30c451fb-0d73-4bbd-a6a0-9486bae97dbe"]
}, Open  ]],
Cell[1234964, 26917, 1057, 32, 33, "Text",ExpressionUUID->"2b28d0b7-5c3c-4ec1-9166-7127d30a8298"],
Cell[CellGroupData[{
Cell[1236046, 26953, 535, 14, 40, "Input",ExpressionUUID->"2be28b35-d20b-477b-9af3-d251d9265d0e"],
Cell[1236584, 26969, 512, 10, 43, "Output",ExpressionUUID->"4ae008dc-14da-446c-a5e5-003d97a413b2"]
}, Open  ]],
Cell[1237111, 26982, 495, 13, 34, "Text",ExpressionUUID->"07d10abc-edab-41b3-9390-371800e50acc"],
Cell[CellGroupData[{
Cell[1237631, 26999, 305, 7, 40, "Input",ExpressionUUID->"5eb920c4-e2d9-41e7-9c50-e9a7e4d5fbb6"],
Cell[1237939, 27008, 445, 8, 43, "Output",ExpressionUUID->"be593f21-41f8-4d93-8412-2b5ceec31afa"]
}, Open  ]],
Cell[1238399, 27019, 222, 5, 28, "Text",ExpressionUUID->"8d7b6b4e-18fd-4a71-b48a-5550a55b871c"],
Cell[CellGroupData[{
Cell[1238646, 27028, 602, 10, 22, "Input",ExpressionUUID->"0ea02fbd-ff7d-455a-b2ef-6a76ffe45ba4"],
Cell[1239251, 27040, 550, 13, 50, "Output",ExpressionUUID->"d91e4a5a-9ee4-4fe4-8376-e2d6e746b148"]
}, Open  ]],
Cell[1239816, 27056, 196, 3, 28, "Text",ExpressionUUID->"95bfa9c0-9973-48a5-af12-6dcd8f268dd4"],
Cell[CellGroupData[{
Cell[1240037, 27063, 409, 10, 39, "Input",ExpressionUUID->"fda64e4e-37ff-404c-8b84-ef57d0f850b5"],
Cell[1240449, 27075, 485, 9, 25, "Output",ExpressionUUID->"390c7f96-da84-459c-a001-7afc9f3288ea"]
}, Open  ]],
Cell[1240949, 27087, 205, 3, 28, "Text",ExpressionUUID->"e6d751ec-55e0-477a-bb77-62bc78607ff7"],
Cell[CellGroupData[{
Cell[1241179, 27094, 493, 15, 37, "Input",ExpressionUUID->"11e2618c-cef6-4d6f-9798-a8b09ebb4432"],
Cell[1241675, 27111, 422, 6, 25, "Output",ExpressionUUID->"75eee266-d54e-4cdb-aa7f-89cc8c6a0b06"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242146, 27123, 187, 3, 43, "Subsection",ExpressionUUID->"53cabb5e-0229-4025-95d7-d6ecddd82d88"],
Cell[1242336, 27128, 384, 8, 28, "Text",ExpressionUUID->"6e9262cb-164f-4de9-a7c7-4e133834a766"],
Cell[CellGroupData[{
Cell[1242745, 27140, 2323, 59, 77, "Input",ExpressionUUID->"456409b6-f359-4d16-a45d-b95e130a7f00"],
Cell[1245071, 27201, 2078, 46, 166, "Output",ExpressionUUID->"ef35d1c2-c7b5-41fc-9e37-36b821446622"]
}, Open  ]],
Cell[1247164, 27250, 785, 16, 54, "Text",ExpressionUUID->"3c11298b-f4cd-453c-af35-ea6fcb738b98"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1247986, 27271, 244, 4, 43, "Subsection",ExpressionUUID->"4acd7205-563d-4802-91f9-488d48584945"],
Cell[1248233, 27277, 201, 3, 28, "Text",ExpressionUUID->"6ac2fdd4-e4bd-46c9-8a29-85c0a3ea127e"],
Cell[CellGroupData[{
Cell[1248459, 27284, 198, 4, 22, "Input",ExpressionUUID->"03c20501-7fa8-40da-9313-888e5e176629"],
Cell[1248660, 27290, 536, 8, 25, "Output",ExpressionUUID->"9995a103-fc89-46d4-975a-f5498926d1c4"]
}, Open  ]],
Cell[1249211, 27301, 382, 7, 28, "Text",ExpressionUUID->"e68d7692-80d2-4de4-b1f3-c9ad5ced4ee7"],
Cell[CellGroupData[{
Cell[1249618, 27312, 522, 13, 39, "Input",ExpressionUUID->"83e2c3e4-b62e-40dc-ace1-c4f8f04a82d6"],
Cell[1250143, 27327, 766, 15, 40, "Output",ExpressionUUID->"797a083c-5a33-4674-84d4-09ed89c68935"]
}, Open  ]],
Cell[1250924, 27345, 668, 21, 38, "Text",ExpressionUUID->"11d1bee4-f844-4876-9063-907be0796e66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1251629, 27371, 337, 6, 43, "Subsection",ExpressionUUID->"9f8cb70a-73df-4167-96cc-94ea17937589"],
Cell[1251969, 27379, 278, 6, 28, "Text",ExpressionUUID->"57a8d8d1-a089-4a13-9bda-99303ddd0d9f"],
Cell[CellGroupData[{
Cell[1252272, 27389, 209, 4, 22, "Input",ExpressionUUID->"a0b656b0-1551-409a-8854-405f13be5f59"],
Cell[1252484, 27395, 542, 8, 25, "Output",ExpressionUUID->"c43a286a-8cc2-47e4-a657-3769f059e2fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1253063, 27408, 344, 9, 22, "Input",ExpressionUUID->"fb5f0086-cb50-4107-9edc-5e1e8f78ac7b"],
Cell[1253410, 27419, 627, 11, 25, "Output",ExpressionUUID->"120e0424-0df5-4866-b705-359162a6c5d9"]
}, Open  ]],
Cell[1254052, 27433, 205, 5, 28, "Text",ExpressionUUID->"a53225bc-201c-4e1a-a3e3-dddb9746a5a7"],
Cell[CellGroupData[{
Cell[1254282, 27442, 1158, 42, 46, "Input",ExpressionUUID->"edeaab73-3adf-4b5d-b032-4f9bd14c59f4"],
Cell[1255443, 27486, 755, 17, 47, "Output",ExpressionUUID->"de7c012c-b20d-4231-9dd7-7cbe4ccb70b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1256235, 27508, 664, 15, 39, "Input",ExpressionUUID->"5f729fe7-7fdf-4794-a9fc-265ffe5ce071"],
Cell[1256902, 27525, 1015, 20, 47, "Output",ExpressionUUID->"dfbd2161-01c6-4263-994c-3603251dc78e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1257954, 27550, 322, 9, 47, "Input",ExpressionUUID->"45f6e027-a70b-465a-9de7-d3b2ec6b3583"],
Cell[1258279, 27561, 768, 12, 25, "Output",ExpressionUUID->"1b1e0993-111a-43d6-b7fe-3ed40ce2c427"]
}, Open  ]],
Cell[1259062, 27576, 226, 5, 28, "Text",ExpressionUUID->"91f59996-cd4b-4c1a-a25f-79c33b9b78f0"],
Cell[CellGroupData[{
Cell[1259313, 27585, 3605, 106, 109, "Input",ExpressionUUID->"ceeef3aa-6bf8-42c0-89a0-d2aa59ae1413"],
Cell[1262921, 27693, 1745, 49, 65, "Output",ExpressionUUID->"d838f15f-ebc2-4171-a6f7-48e03f7df709"]
}, Open  ]],
Cell[1264681, 27745, 422, 12, 29, "Text",ExpressionUUID->"b3f9bd87-5d7b-4c97-b2d8-9372374d1413"],
Cell[CellGroupData[{
Cell[1265128, 27761, 816, 26, 41, "Input",ExpressionUUID->"a7f97ef9-3146-4c8d-9d88-c4b9af0b84ee"],
Cell[1265947, 27789, 1809, 52, 78, "Output",ExpressionUUID->"4acf4654-695a-4649-8542-9734e6320460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1267793, 27846, 1065, 34, 41, "Input",ExpressionUUID->"8abb5151-ad34-4483-8a61-6ce74c59db3a"],
Cell[1268861, 27882, 3177, 106, 61, "Output",ExpressionUUID->"099fdf26-1de0-4d70-ad3e-d2ca95d4bb11"]
}, Open  ]],
Cell[1272053, 27991, 373, 11, 28, "Text",ExpressionUUID->"6807b4c5-fee6-4a45-b948-985a727e5c00"],
Cell[CellGroupData[{
Cell[1272451, 28006, 989, 30, 40, "Input",ExpressionUUID->"522da782-da9d-4ed0-9c07-9d1410be5e93"],
Cell[1273443, 28038, 2526, 72, 61, "Output",ExpressionUUID->"d41051b8-a9a6-4765-b0aa-6516409ec0a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1276006, 28115, 869, 26, 26, "Input",ExpressionUUID->"c43f53d9-11c7-4fba-a54c-f65d63953b6a"],
Cell[1276878, 28143, 2740, 85, 65, "Output",ExpressionUUID->"fb6f9d25-022d-46e8-bf8a-5f2aafa3f092"]
}, Open  ]],
Cell[1279633, 28231, 387, 10, 29, "Text",ExpressionUUID->"48005fac-1fe5-493a-9d7b-a8706ec1cb26"],
Cell[CellGroupData[{
Cell[1280045, 28245, 747, 22, 37, "Input",ExpressionUUID->"8badda98-a01d-4d3c-b588-0760dbc34123"],
Cell[1280795, 28269, 3248, 100, 61, "Output",ExpressionUUID->"0dd75a0a-9593-4d2c-bce7-dd6d3ecebda4"]
}, Open  ]],
Cell[1284058, 28372, 218, 5, 28, "Text",ExpressionUUID->"1a41d59f-75e9-4a37-b6ff-47b48cf06a6d"],
Cell[CellGroupData[{
Cell[1284301, 28381, 414, 11, 22, "Input",ExpressionUUID->"787c8392-12c4-4672-93e4-700350fdae78"],
Cell[1284718, 28394, 861, 16, 40, "Output",ExpressionUUID->"e02968aa-bcaa-4acc-878f-b7025b14052a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1285616, 28415, 1734, 45, 66, "Input",ExpressionUUID->"1a3cc96a-8369-46a0-b7da-ad6d2c8fd519"],
Cell[1287353, 28462, 13902, 251, 187, "Output",ExpressionUUID->"6a0cf59d-8cc4-4ee3-918c-57d667b776ee"]
}, Open  ]],
Cell[1301270, 28716, 441, 14, 36, "Text",ExpressionUUID->"845d60bf-7f1d-463b-a1df-f2e1549e9a84"],
Cell[1301714, 28732, 230, 4, 22, "Input",ExpressionUUID->"a5860a4f-14ad-490d-a991-680bcffeb25c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301981, 28741, 385, 6, 43, "Subsection",ExpressionUUID->"5cf78af2-88e5-4a8b-a417-cfea7d4d6427"],
Cell[1302369, 28749, 242, 6, 28, "Text",ExpressionUUID->"d0096595-c891-47e8-8272-594b1d2e9cef"],
Cell[CellGroupData[{
Cell[1302636, 28759, 209, 4, 22, "Input",ExpressionUUID->"c01429dc-a28e-4af0-beaa-0bf2a077d12f"],
Cell[1302848, 28765, 533, 8, 25, "Output",ExpressionUUID->"72d790db-81a9-4dc6-b37e-2d99864b57d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1303418, 28778, 397, 10, 22, "Input",ExpressionUUID->"bc7cfe68-703e-44f3-89a9-b1206b43ff1a"],
Cell[1303818, 28790, 651, 11, 25, "Output",ExpressionUUID->"5843618d-2fe0-4c83-8901-49ca1c6c0d69"]
}, Open  ]],
Cell[1304484, 28804, 203, 5, 28, "Text",ExpressionUUID->"65228b99-f24c-4f99-80db-4acc2701e21c"],
Cell[CellGroupData[{
Cell[1304712, 28813, 1158, 42, 46, "Input",ExpressionUUID->"bd49f7e4-41e7-4f40-ba65-86c093753c63"],
Cell[1305873, 28857, 824, 18, 43, "Output",ExpressionUUID->"84915365-31a5-459f-9eeb-e1d85141d7f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1306734, 28880, 664, 15, 39, "Input",ExpressionUUID->"0d6d09fe-f429-4f7a-851c-61a1f31b3813"],
Cell[1307401, 28897, 1048, 21, 43, "Output",ExpressionUUID->"31a742ed-827e-4ac4-95e3-c5df6d3fd35f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1308486, 28923, 322, 9, 47, "Input",ExpressionUUID->"6f8aa52e-ec43-4a00-9a3e-e38632c4c070"],
Cell[1308811, 28934, 819, 13, 40, "Output",ExpressionUUID->"6d687372-7639-4fbb-b04e-f7fbf9ec6547"]
}, Open  ]],
Cell[1309645, 28950, 222, 5, 28, "Text",ExpressionUUID->"c93f9416-d250-45a3-a142-d42668df9e0a"],
Cell[CellGroupData[{
Cell[1309892, 28959, 3605, 106, 109, "Input",ExpressionUUID->"7dc730c3-2b13-4ae2-b91b-ac57275d4a73"],
Cell[1313500, 29067, 1960, 56, 67, "Output",ExpressionUUID->"239af7f8-8c48-43bd-b654-870f3633faaa"]
}, Open  ]],
Cell[1315475, 29126, 345, 11, 29, "Text",ExpressionUUID->"2c41af2e-2b76-4f31-82a9-bcefa65e1563"],
Cell[CellGroupData[{
Cell[1315845, 29141, 816, 26, 41, "Input",ExpressionUUID->"e81e9ce9-0c19-41f8-a8ea-3253c00085b2"],
Cell[1316664, 29169, 2086, 60, 78, "Output",ExpressionUUID->"9e0af1c7-f974-47f7-b103-04d1ae4a8687"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318787, 29234, 1065, 34, 41, "Input",ExpressionUUID->"85e9dd67-1005-4a53-8016-e06b02ecc530"],
Cell[1319855, 29270, 2982, 99, 78, "Output",ExpressionUUID->"4dbcdb22-503a-4894-9553-83eb5dffe840"]
}, Open  ]],
Cell[1322852, 29372, 373, 11, 28, "Text",ExpressionUUID->"441081d8-537c-476e-942c-dc6465e1bbab"],
Cell[CellGroupData[{
Cell[1323250, 29387, 989, 30, 40, "Input",ExpressionUUID->"0a9979ec-b602-458d-933a-8976e2005f39"],
Cell[1324242, 29419, 2772, 78, 62, "Output",ExpressionUUID->"98d5619a-453c-4fad-87b0-c528109baab1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1327051, 29502, 869, 26, 26, "Input",ExpressionUUID->"1304d615-d016-480e-9d1f-5450baf40d56"],
Cell[1327923, 29530, 2950, 90, 66, "Output",ExpressionUUID->"27e93258-53a7-4626-8e52-3c7bc4ce352e"]
}, Open  ]],
Cell[1330888, 29623, 387, 10, 29, "Text",ExpressionUUID->"19dc3b65-9fe8-438a-9d89-e6e6a4714fe6"],
Cell[CellGroupData[{
Cell[1331300, 29637, 747, 22, 37, "Input",ExpressionUUID->"fa9807f4-9f5e-4467-93e7-a95ca9ffacd1"],
Cell[1332050, 29661, 6807, 205, 239, "Output",ExpressionUUID->"efbf56e4-443f-495a-9378-4c55e885529c"]
}, Open  ]],
Cell[1338872, 29869, 220, 5, 28, "Text",ExpressionUUID->"80239df2-34a3-49f4-aabc-312db9c0409f"],
Cell[CellGroupData[{
Cell[1339117, 29878, 414, 11, 22, "Input",ExpressionUUID->"e0607d21-74cf-4388-bb01-f55f3dad26c3"],
Cell[1339534, 29891, 901, 16, 40, "Output",ExpressionUUID->"f7b4046d-6248-41cf-82c9-cee488ccd61e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340472, 29912, 1832, 48, 66, "Input",ExpressionUUID->"f86fb09e-26a7-4c95-9aaa-a066c0137418"],
Cell[1342307, 29962, 38086, 648, 196, "Output",ExpressionUUID->"aa3795ac-0eaf-4f10-827a-f06019efa373"]
}, Open  ]],
Cell[1380408, 30613, 538, 15, 36, "Text",ExpressionUUID->"3c98dcda-e573-4236-89a4-44024bddaaa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1380983, 30633, 311, 5, 43, "Subsection",ExpressionUUID->"c6ed8fa6-8339-4c1f-92e0-f256628d37e0"],
Cell[CellGroupData[{
Cell[1381319, 30642, 6045, 168, 140, "Input",ExpressionUUID->"ca8735a6-e758-4b4e-b867-e32292b4ad54"],
Cell[1387367, 30812, 8425, 166, 296, "Output",ExpressionUUID->"2f4e55d1-a651-4155-840e-653975e039b5"]
}, Open  ]],
Cell[1395807, 30981, 275, 6, 28, "Text",ExpressionUUID->"944c5dd1-837a-4567-998b-b1e62dc32a09"],
Cell[1396085, 30989, 71, 0, 28, "Text",ExpressionUUID->"9cf3d6dc-690d-41ae-93cd-03fdafaa6418"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

